//{"version":"3.2.9","encode":"base64"}
var __UniServiceStartTime__=Date.now(),global=this,process={env:{}},setTimeout=global.setTimeout;!function(e){"function"==typeof define&&define.amd?define(e):e()}((function(){"use strict";var subversion={framework:"0.29.6",transformer:">=0.1.5 <0.5"};function getHookKey(e,t,n){return`${t}@${n}#${e}`}class CallbackManager{constructor(e){this.instanceId=String(e),this.lastCallbackId=0,this.callbacks={},this.hooks={}}add(e){return this.lastCallbackId++,this.callbacks[this.lastCallbackId]=e,this.lastCallbackId}remove(e){const t=this.callbacks[e];return delete this.callbacks[e],t}registerHook(e,t,n,r){const i=getHookKey(e,t,n);this.hooks[i]&&console.warn(`[JS Framework] Override an existing component hook "${i}".`),this.hooks[i]=r}triggerHook(e,t,n,r){const i=getHookKey(e,t,n),o=this.hooks[i];if("function"!=typeof o)return console.error(`[JS Framework] Invalid hook function type (${typeof o}) on "${i}".`),null;let a=null;try{a=o.apply(null,r||[])}catch(e){throw console.error(`[JS Framework] Failed to execute the hook function on "${i}".`),e}return a}consume(e,t,n){const r=this.callbacks[e];if(void 0!==n&&!1!==n||delete this.callbacks[e],"function"==typeof r)try{return r.call(null,t,n)}catch(e){throw console.error(`[JS Framework] Failed to execute the callback function:\n ${e.toString()}`),e}return new Error(`invalid callback id "${e}"`)}close(){this.callbacks={},this.hooks={}}}let nextNodeRef=1;function uniqueId(){return(nextNodeRef++).toString()}function typof(e){const t=Object.prototype.toString.call(e);return t.substring(8,t.length-1)}function isPlainObject(e){return"[object Object]"===Object.prototype.toString.call(e)}function hasOwn(e,t){return isPlainObject(e)&&Object.prototype.hasOwnProperty.call(e,t)}function bufferToBase64(e){if("function"!=typeof btoa)return"";const t=Array.prototype.map.call(new Uint8Array(e),(e=>String.fromCharCode(e))).join("");return btoa(t)}function isEmpty(e){if(!e||"object"!=typeof e)return!0;for(const t in e)if(Object.prototype.hasOwnProperty.call(e,t))return!1;return!0}const LEVELS=["off","error","warn","info","log","debug"];let levelMap={};function generateLevelMap(){LEVELS.forEach((e=>{const t=LEVELS.indexOf(e);levelMap[e]={},LEVELS.forEach((n=>{LEVELS.indexOf(n)<=t&&(levelMap[e][n]=!0)}))}))}function checkLevel(e){const t=global.WXEnvironment&&global.WXEnvironment.logLevel||"log";return levelMap[t]&&levelMap[t][e]}function debugLog(e){global.nativeLog("wxInteractionAnalyzer: [jsfm]"+e,"__DEBUG")}const docMap={};function addDoc(e,t){e&&(docMap[e]=t)}function getDoc(e){return docMap[e]}function removeDoc(e){delete docMap[e]}function getTaskCenter(e){const t=docMap[e];return t&&t.taskCenter?t.taskCenter:null}function appendBody(e,t,n){const{documentElement:r}=e;if(r.pureChildren.length>0||t.parentNode)return;const i=r.children,o=i.indexOf(n);o<0?i.push(t):i.splice(o,0,t),1===t.nodeType?("body"===t.role?(t.docId=e.id,t.ownerDocument=e,t.parentNode=r,linkParent(t,r)):(t.children.forEach((e=>{e.parentNode=t})),setBody(e,t),t.docId=e.id,t.ownerDocument=e,linkParent(t,r),delete e.nodeMap[t.nodeId]),r.pureChildren.push(t),sendBody(e,t)):(t.parentNode=r,e.nodeMap[t.ref]=t),t.ready=!0,t.computeClassList&&t.computeClassList()}function sendBody(e,t){const n=t.toJSON();e&&e.taskCenter&&"function"==typeof e.taskCenter.send&&e.taskCenter.send("dom",{action:"createBody"},[n])}function setBody(e,t){t.role="body",t.depth=1,delete e.nodeMap[t.nodeId],t.ref="_root",e.nodeMap._root=t,e.body=t}function linkParent(e,t){e.parentNode=t,t.docId&&(e.docId=t.docId,e.ownerDocument=t.ownerDocument,e.ownerDocument.nodeMap[e.nodeId]=e,e.depth=t.depth+1),e.children.forEach((t=>{linkParent(t,e)}))}function nextElement(e){for(;e;){if(1===e.nodeType)return e;e=e.nextSibling}}function previousElement(e){for(;e;){if(1===e.nodeType)return e;e=e.previousSibling}}function insertIndex(e,t,n,r){n<0&&(n=0);const i=t[n-1],o=t[n];return t.splice(n,0,e),r&&(i&&(i.nextSibling=e),e.previousSibling=i,e.nextSibling=o,o&&(o.previousSibling=e)),n}function moveIndex(e,t,n,r){const i=t.indexOf(e);if(i<0)return-1;if(r){const e=t[i-1],n=t[i+1];e&&(e.nextSibling=n),n&&(n.previousSibling=e)}t.splice(i,1);let o=n;i<=n&&(o=n-1);const a=t[o-1],s=t[o];return t.splice(o,0,e),r&&(a&&(a.nextSibling=e),e.previousSibling=a,e.nextSibling=s,s&&(s.previousSibling=e)),i===o?-1:n}function removeIndex(e,t,n){const r=t.indexOf(e);if(!(r<0)){if(n){const e=t[r-1],n=t[r+1];e&&(e.nextSibling=n),n&&(n.previousSibling=e)}t.splice(r,1)}}class Node{constructor(){this.nodeId=uniqueId(),this.ref=this.nodeId,this.children=[],this.pureChildren=[],this.parentNode=null,this.nextSibling=null,this.previousSibling=null}destroy(){const e=getDoc(this.docId);e&&(delete this.docId,delete e.nodeMap[this.nodeId]),this.children.forEach((e=>{e.destroy()}))}}let Element$1;function setElement(e){Element$1=e}const registeredElements={};function registerElement(e,t){if(Array.isArray(t)&&t.length){class n extends Element$1{}t.forEach((t=>{n.prototype[t]=function(...n){const r=getTaskCenter(this.docId);if(r)return r.send("component",{ref:this.ref,component:e,method:t},n)}})),registeredElements[e]=n}}function getWeexElement(e){return registeredElements[e]}function cached(e){const t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}const parseStyleText=cached((function(e){const t={},n=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){const r=e.split(n);r.length>1&&(t[r[0].trim()]=r[1].trim())}})),t})),firstLetterToLowerCase=cached((e=>e.charAt(0).toLowerCase()+e.slice(1)));function isDef(e){return void 0!==e}function isFn(e){return"function"==typeof e}var processors={slider:{change:function(e){return{index:e.index,source:e.source}},scroll:function(e){return{offsetXRatio:e.offsetXRatio,offsetYRatio:e.offsetYRatio,drag:e.drag}}},"scroll-view":{scrollend:function(e){return{contentOffset:e.contentOffset}}}};function processTarget(e){const{attr:t,offsetLeft:n,offsetTop:r}=e,i={};return Object.keys(t||{}).forEach((e=>{0===e.indexOf("data")&&(i[firstLetterToLowerCase(e.replace("data",""))]=t[e])})),{id:t&&t.id||"",dataset:i,offsetLeft:n||0,offsetTop:r||0}}function processCustomEvent(e,t={},n={}){return n=processTarget(n),{type:e,timeStamp:Date.now(),target:n,currentTarget:n,detail:t}}const WEEX_TAGS=["a","div","list","cell","loading","refresh","recycle-list","scroller","indicator","waterfall","web","richtext"],IGNORE_EVENTS=["viewappear","viewdisappear"],EVENT_EXTRAS={markertap:["markerId"],controltap:["controlId"],regionchange:["causedBy"],end:["causedBy"],appear:["direction"],disappear:["direction"]};function processEvent(e,t){const n=e.type;if(-1!==IGNORE_EVENTS.indexOf(n))return e;const r=e.currentTarget,i=r.type.replace("u-","");if(-1!==WEEX_TAGS.indexOf(i))return e;const{timestamp:o,target:a}=e;if(!isDef(t)){const r=processors[i];t=r&&isFn(r[n])?r[n](e):e.detail||{}}const s={type:n,timeStamp:o,target:processTarget(a),currentTarget:processTarget(r),detail:t,touches:"touchend"===n||"panend"===n?[]:e.changedTouches,changedTouches:e.changedTouches};e.componentId&&(s.componentId=e.componentId);const c=EVENT_EXTRAS[n];return c&&c.forEach((t=>{e.hasOwnProperty(t)&&(s[t]=e[t])})),s}const EPS=1e-4,BASE_DEVICE_WIDTH=750;let deviceDPR=1,deviceWidth=0;function upx2px(e,t){if(0===deviceWidth&&(deviceDPR=global.WXEnvironment.scale,deviceWidth=Math.ceil(global.WXEnvironment.deviceWidth/deviceDPR)),0===(e=Number(e)))return 0;let n=e/BASE_DEVICE_WIDTH*(t||deviceWidth);return n<0&&(n=-n),n=Math.floor(n+EPS),0===n?1===deviceDPR?1:.5:e<0?-n:n}function deepClone(e,t){return e.map((function e(n){const r=n.children&&n.children.map(e),i=t(n.tag,n.data,r);return i.text=n.text,i.isComment=n.isComment,i.componentOptions=n.componentOptions,i.elm=n.elm,i.context=n.context,i.ns=n.ns,i.isStatic=n.isStatic,i.key=n.key,i}))}function generateDeclaration(e,t,n){return{type:"declaration",property:e,value:t}}function clearImportant(e){const t=String(e).replace(/\s*!important/g,"");return{value:t,important:e!==t}}function margin(e){const{value:t,important:n}=clearImportant(e.value);e.position;const r=t.split(/\s+/),i=[];switch(r.length){case 1:r.push(r[0],r[0],r[0]);break;case 2:r.push(r[0],r[1]);break;case 3:r.push(r[1])}return i.push(generateDeclaration("marginTop",r[0]),generateDeclaration("marginRight",r[1]),generateDeclaration("marginBottom",r[2]),generateDeclaration("marginLeft",r[3])),i}function border(e){const{value:t,important:n}=clearImportant(e.value),r=e.property,i=t.replace(/\s*,\s*/g,",").split(/\s+/),o=[/^[\d.]+\S*$/,/^(solid|dashed|dotted)$/,/\S+/].map((e=>{const t=i.findIndex((t=>e.test(t)));return t<0?null:i.splice(t,1)[0]}));return i.length?e:[generateDeclaration(r+"Width",(o[0]||"0").trim()),generateDeclaration(r+"Style",(o[1]||"solid").trim()),generateDeclaration(r+"Color",(o[2]||"#000000").trim())]}function borderProperty(e){const{value:t,important:n}=clearImportant(e.value),r=e.property.substring(6),i=t.replace(/\s*,\s*/g,",").split(/\s+/),o=[];switch(i.length){case 1:return e;case 2:i.push(i[0],i[1]);break;case 3:i.push(i[1])}return o.push(generateDeclaration("borderTop"+r,i[0]),generateDeclaration("borderRight"+r,i[1]),generateDeclaration("borderBottom"+r,i[2]),generateDeclaration("borderLeft"+r,i[3])),o}function borderRadius(e){const{value:t,important:n}=clearImportant(e.value),r=t.split(/\s+/),i=[];if(t.includes("/"))return e;switch(r.length){case 1:return e;case 2:r.push(r[0],r[1]);break;case 3:r.push(r[1])}return i.push(generateDeclaration("borderTopLeftRadius",r[0]),generateDeclaration("borderTopLightRadius",r[1]),generateDeclaration("borderBottomRightRadius",r[2]),generateDeclaration("borderBottomLeftRadius",r[3])),i}function flexFlow(e){const{value:t,important:n}=clearImportant(e.value),r=t.split(/\s+/),i=[/^(column|column-reverse|row|row-reverse)$/,/^(nowrap|wrap|wrap-reverse)$/].map((e=>{const t=r.findIndex((t=>e.test(t)));return t<0?null:r.splice(t,1)[0]}));return r.length?e:[generateDeclaration("flexDirection",i[0]||"column"),generateDeclaration("flexWrap",i[1]||"nowrap")]}function font(e){const{value:t,important:n}=clearImportant(e.value);let r=t.replace(/,\s*/g,",").replace(/\s*\/\s*/,"/").replace(/['"].+?['"]/g,(e=>e.replace(/\s+/g,"#"))).split(/\s+/);const i=[],o=["normal","italic","oblique"];i.push(generateDeclaration("fontStyle",o[Math.max(0,o.indexOf(r[0]))]));const a=r.slice(0,-2).find((e=>/normal|bold|lighter|bolder|\d+/.test(e)));if(a&&i.push(generateDeclaration("fontWeight",a)),r=r.slice(-2),/[\d.]+\S*(\/[\d.]+\S*)?/.test(r[0])){const[e,t]=r[0].split("/");return i.push(generateDeclaration("fontSize",e),generateDeclaration("lineHeight",t||"normal"),generateDeclaration("fontFamily",r[1].replace(/#/g," "))),i}return[]}function background(e){const{value:t,important:n}=clearImportant(e.value);return/^#?\S+$/.test(t)||/^rgba?(.+)$/.test(t)?generateDeclaration("backgroundColor",t):/^linear-gradient(.+)$/.test(t)?generateDeclaration("backgroundImage",t):e}const parserCollection={margin:margin,border:border,borderTop:border,borderRight:border,borderBottom:border,borderLeft:border,borderStyle:borderProperty,borderWidth:borderProperty,borderColor:borderProperty,borderRadius:borderRadius,flexFlow:flexFlow,font:font,background:background};function expandShorthandProperty(e){const t=parserCollection[e.property];return t&&(e=t(e)),[].concat(e)}const DEFAULT_TAG_NAME="div",BUBBLE_EVENTS=["click","longpress","touchstart","touchmove","touchend","panstart","panmove","panend","horizontalpan","verticalpan","swipe"];function registerNode(e,t){getDoc(e).nodeMap[t.nodeId]=t}class Element extends Node{constructor(e=DEFAULT_TAG_NAME,t,n){super();const r=getWeexElement(e);if(r&&!n)return new r(e,t,!0);t=t||{},this.nodeType=1,this.nodeId=uniqueId(),this.ref=this.nodeId,this.type=e,this.attr=t.attr||{},this.style=t.style||{},this.classStyle=t.classStyle||{},this.event={},this.children=[],this.pureChildren=[],this.classList=t.classList||[],this.stylesheet=t.stylesheet||[],this.ready=!1}appendChild(e){if(!e.parentNode||e.parentNode===this)if(e.parentNode){if(checkLevel("debug")&&debugLog(`[appendChild](${this.docId},${e.type},${e.ref}) Move <${e.type}> to ${this.children.length} of <${this.type}> (${this.ref}).`),moveIndex(e,this.children,this.children.length,!0),1===e.nodeType){const t=moveIndex(e,this.pureChildren,this.pureChildren.length),n=getTaskCenter(this.docId);n&&t>=0&&(this.computeChildrenClassList(e),n.send("dom",{action:"moveElement"},[e.ref,this.ref,t]))}}else if(checkLevel("debug")&&debugLog(`[appendChild](${this.docId},${e.type},${e.ref}) Append <${e.type}> to <${this.type}> (${this.ref}).`),linkParent(e,this),insertIndex(e,this.children,this.children.length,!0),this.docId&&registerNode(this.docId,e),1===e.nodeType){insertIndex(e,this.pureChildren,this.pureChildren.length);const t=getTaskCenter(this.docId);t&&(this.computeChildrenClassList(e),t.send("dom",{action:"addElement"},[this.ref,e.toJSON(),-1])),e.ready=!0}}insertBefore(e,t){if(!(e.parentNode&&e.parentNode!==this||e===t||e.nextSibling&&e.nextSibling===t))if(e.parentNode){if(moveIndex(e,this.children,this.children.indexOf(t),!0),1===e.nodeType){const n=nextElement(t),r=moveIndex(e,this.pureChildren,n?this.pureChildren.indexOf(n):this.pureChildren.length),i=getTaskCenter(this.docId);i&&r>=0&&(this.computeChildrenClassList(e),i.send("dom",{action:"moveElement"},[e.ref,this.ref,r]))}}else if(checkLevel("debug")&&debugLog(`[insertBefore](${this.docId},${e.type},${e.ref}) Insert <${e.type}> to <${this.type}> (${this.ref}), before (${t.ref}).`),linkParent(e,this),insertIndex(e,this.children,this.children.indexOf(t),!0),this.docId&&registerNode(this.docId,e),1===e.nodeType){const n=nextElement(t),r=insertIndex(e,this.pureChildren,n?this.pureChildren.indexOf(n):this.pureChildren.length),i=getTaskCenter(this.docId);i&&(this.computeChildrenClassList(e),i.send("dom",{action:"addElement"},[this.ref,e.toJSON(),r])),e.ready=!0}}insertAfter(e,t){if(!(e.parentNode&&e.parentNode!==this||e===t||e.previousSibling&&e.previousSibling===t))if(e.parentNode){if(moveIndex(e,this.children,this.children.indexOf(t)+1,!0),1===e.nodeType){const n=moveIndex(e,this.pureChildren,this.pureChildren.indexOf(previousElement(t))+1),r=getTaskCenter(this.docId);r&&n>=0&&(this.computeChildrenClassList(e),r.send("dom",{action:"moveElement"},[e.ref,this.ref,n]))}}else if(checkLevel("debug")&&debugLog(`[insertAfter](${this.docId},${e.type},${e.ref}) Insert <${e.type}> to <${this.type}> (${this.ref}), after (${t.ref}).`),linkParent(e,this),insertIndex(e,this.children,this.children.indexOf(t)+1,!0),this.docId&&registerNode(this.docId,e),1===e.nodeType){const n=insertIndex(e,this.pureChildren,this.pureChildren.indexOf(previousElement(t))+1),r=getTaskCenter(this.docId);r&&(this.computeChildrenClassList(e),r.send("dom",{action:"addElement"},[this.ref,e.toJSON(),n])),e.ready=!0}}removeChild(e,t){if(e.parentNode){if(removeIndex(e,this.children,!0),1===e.nodeType){checkLevel("debug")&&debugLog(`[removeChild](${this.docId},${e.type},${e.ref}) Remove <${e.type}> from <${this.type}> (${this.ref}).`),removeIndex(e,this.pureChildren);const t=getTaskCenter(this.docId);t&&t.send("dom",{action:"removeElement"},[e.ref]),e.ready=!1}this.computeChildrenClassList(e,e.nextSibling||{})}t||e.destroy()}clear(){const e=getTaskCenter(this.docId);this.pureChildren.forEach((t=>{e&&e.send("dom",{action:"removeElement"},[t.ref]),t.ready=!1})),this.children.forEach((e=>{e.destroy()})),this.children.length=0,this.pureChildren.length=0}setAttr(e,t,n){if(this.attr[e]===t&&!1!==n)return;this.attr[e]=t;const r=getTaskCenter(this.docId);if(!n&&r){const n={};n[e]=t,r.send("dom",{action:"updateAttrs"},[this.ref,n])}}setAttrs(e,t){if(isEmpty(e))return;const n={};for(const t in e)this.attr[t]!==e[t]&&(this.attr[t]=e[t],n[t]=e[t]);if(!isEmpty(n)){const e=getTaskCenter(this.docId);!t&&e&&e.send("dom",{action:"updateAttrs"},[this.ref,n])}}setStyle(e,t,n){expandShorthandProperty({property:e,value:t}).forEach((({property:e,value:t})=>{if(this.style[e]===t&&!1!==n)return;this.style[e]=t;const r=getTaskCenter(this.docId);if(!n&&r){const n={};n[e]=t,r.send("dom",{action:"updateStyle"},[this.ref,n])}}))}setStyles(e,t){if(isEmpty(e))return;const n={};for(const t in e){expandShorthandProperty({property:t,value:e[t]}).forEach((({property:e,value:t})=>{this.style[e]!==t&&(this.style[e]=t,n[e]=t)}))}if(!isEmpty(n)){const e=getTaskCenter(this.docId);!t&&e&&e.send("dom",{action:"updateStyle"},[this.ref,n])}}setClassStyle(e){for(const e in this.classStyle)this.classStyle[e]="";Object.assign(this.classStyle,e);const t=getTaskCenter(this.docId);t&&this.ready&&t.send("dom",{action:"updateStyle"},[this.ref,this.toStyle()])}addEvent(e,t,n){if(this.event||(this.event={}),!this.event[e]){checkLevel("debug")&&debugLog(`[addEvent](${this.docId},${this.type},${this.ref}) Add "${e}" event on <${this.type}> (${this.ref}).`),this.event[e]={handler:t,params:n};const r=getTaskCenter(this.docId);r&&r.send("dom",{action:"addEvent"},[this.ref,e])}}removeEvent(e){if(this.event&&this.event[e]){checkLevel("debug")&&debugLog(`[removeEvent](${this.docId},${this.type},${this.ref}) Remove "${e}" event on <${this.type}> (${this.ref}).`),delete this.event[e];const t=getTaskCenter(this.docId);t&&t.send("dom",{action:"removeEvent"},[this.ref,e])}}fireEvent(e,t,n,r){let i=null,o=!1;const a=this.event[e];if(a&&t){checkLevel("debug")&&debugLog(`[fireEvent](${this.docId},${this.type},${this.ref}) Fire "${e}" event on <${this.type}> (${this.ref}).`);const n=a.handler;t.stopPropagation=()=>{o=!0};try{i=r&&r.params?n.call(this,...r.params,t):n.call(this,t)}catch(t){throw console.error(`[JS Framework] Failed to invoke the event handler of "${e}" on ${this.type} (${this.ref}):\n ${t.toString()}`),t}}return!o&&n&&-1!==BUBBLE_EVENTS.indexOf(e)&&this.parentNode&&this.parentNode.fireEvent&&(t.currentTarget=this.parentNode,this.parentNode.fireEvent(e,t,n)),i}toStyle(){return Object.assign({},this.classStyle,this.style)}toJSON(e=!1){const t={ref:this.ref.toString(),type:this.type,attr:this.attr,style:this.toStyle()};this.classList&&this.classList.length&&(t.class=this.classList.join(" "));const n=[];for(const e in this.event){const{params:t}=this.event[e];t?n.push({type:e,params:t}):n.push(e)}return n.length&&(t.event=n),!e&&this.pureChildren.length&&(t.children=this.pureChildren.map((e=>e.toJSON()))),t}toString(){return"<"+this.type+" attr="+JSON.stringify(this.attr)+" style="+JSON.stringify(this.toStyle())+">"+this.pureChildren.map((e=>e.toString())).join("")+"</"+this.type+">"}setClassList(e){e.length===this.classList.length&&0===e.filter((e=>!this.classList.includes(e))).length||(this.classList=e,this.parentNode&&this.computeClassList())}setStylesheet(e){e.length===this.stylesheet.length&&0===e.filter((e=>!this.stylesheet.includes(e))).length||(this.stylesheet=e,this.classList.length&&this.parentNode&&this.computeClassList())}computeChildrenClassList(e,t){const n=this.children,r=t||e;let i=r?n.indexOf(r):0,o=n.length-1;for(!e||e.classList&&e.classList.length||(o=t?i-1:i);i>=0&&i<=o;i++){const e=n[i];e.computeClassList&&e.computeClassList()}}computeClassList(){const e=this.classList,t=this.stylesheet,n={},r={};function i(e,t){const n=t&&t.classList;return n&&n.includes(e)}e.forEach((e=>{t.forEach(((t,o)=>{if((t["@VERSION"]||1)<2){const r=t[e];return void(r&&Object.assign(n,r))}const a=t["."+e];a&&Object.keys(a).forEach((e=>{let t=this;if(e){const n=e.split(".");for(let e=n.length-1;e>0;e--){const r=n[e],o=r[r.length-1],a=r.replace(/[+~> ]$/,"");if("~"===o||" "===o){const e="~"===o?"previousSibling":"parentNode";for(;t&&(t=t[e],!i(a,t)););if(!t)return}else if(">"===o?t=t&&t.parentNode:"+"===o&&(t=t&&t.previousSibling),!i(a,t))return}}const s=a[e];Object.keys(s).forEach((e=>{const[t,i,a,c]=s[e],l=[i,a,o,c],u=r[e];let d=!0;if(u)for(let e=0;e<u.length;e++){const t=l[e]-u[e];if(0!==t){d=t>0;break}}d&&(n[e]=t,r[e]=l)}))}))}))})),this.setClassStyle(n),this.computeChildrenClassList()}}function toRaw(e){const t=e&&e.__v_raw;return t?toRaw(t):e}function normalizePrimitive(e){const t=typof(e);switch(t){case"Undefined":case"Null":return"";case"RegExp":return e.toString();case"Date":return e.toISOString();case"Number":case"String":case"Boolean":case"Array":case"Object":return toRaw(e);case"ArrayBuffer":return{"@type":"binary",dataType:t,base64:bufferToBase64(e)};case"Int8Array":case"Uint8Array":case"Uint8ClampedArray":case"Int16Array":case"Uint16Array":case"Int32Array":case"Uint32Array":case"Float32Array":case"Float64Array":return{"@type":"binary",dataType:t,base64:bufferToBase64(e.buffer)};default:return JSON.stringify(e)}}setElement(Element);let fallback=function(){};class TaskCenter{constructor(e,t){Object.defineProperty(this,"instanceId",{enumerable:!0,value:String(e)}),Object.defineProperty(this,"callbackManager",{enumerable:!0,value:new CallbackManager(e)}),fallback=t||function(){}}callback(e,t,n){return this.callbackManager.consume(e,t,n)}registerHook(...e){return this.callbackManager.registerHook(...e)}triggerHook(...e){return this.callbackManager.triggerHook(...e)}updateData(e,t,n){this.send("module",{module:"dom",method:"updateComponentData"},[e,t,n])}destroyCallback(){return this.callbackManager.close()}normalize(e,t=!1){const n=typof(e);if(e&&e instanceof Element)return e.ref;if(e&&e._isVue&&e.$el instanceof Element)return e.$el.ref;if("Function"===n)return this.callbackManager.add(e).toString();if(t){if("Object"===n){const t={};for(const n in e)t[n]=this.normalize(e[n],!0);return t}if("Array"===n)return e.map((e=>this.normalize(e,!0)))}return e&&e.ref&&e["[[VirtualElement]]"]?e.ref:normalizePrimitive(e)}send(e,t,n,r){const{action:i,component:o,ref:a,module:s,method:c}=t;switch(n=n.map((e=>this.normalize(e))),"Object"===typof(r)&&(r=this.normalize(r,!0)),e){case"dom":return checkLevel("debug")&&debugLog(`[task](${this.instanceId},${this.type},${i}) ${JSON.stringify(n)}`),this[i](this.instanceId,n);case"component":return this.componentHandler(this.instanceId,a,c,n,Object.assign({component:o},r));default:return checkLevel("debug")&&debugLog(`[task](${this.instanceId},${s},${c}) ${JSON.stringify(n)}`),this.moduleHandler(this.instanceId,s,c,n,r)}}callDOM(e,t){return this[e](this.instanceId,t)}callComponent(e,t,n,r){return this.componentHandler(this.instanceId,e,t,n,r)}callModule(e,t,n,r){return this.moduleHandler(this.instanceId,e,t,n,r)}}function init$o(){const e={createFinish:global.callCreateFinish,updateFinish:global.callUpdateFinish,refreshFinish:global.callRefreshFinish,createBody:global.callCreateBody,addElement:global.callAddElement,removeElement:global.callRemoveElement,moveElement:global.callMoveElement,updateAttrs:global.callUpdateAttrs,updateStyle:global.callUpdateStyle,addEvent:global.callAddEvent,removeEvent:global.callRemoveEvent,__updateComponentData:global.__updateComponentData},t=TaskCenter.prototype;for(const n in e){const r=e[n];t[n]=r?(e,t)=>r(e,...t):(e,t)=>fallback(e,[{module:"dom",method:n,args:t}],"-1")}t.componentHandler=global.callNativeComponent||((e,t,n,r,i)=>fallback(e,[{component:i.component,ref:t,method:n,args:r}])),t.moduleHandler=global.callNativeModule||((e,t,n,r)=>fallback(e,[{module:t,method:n,args:r}]))}function fireEvent(e,t,n,r,i,o){const a=e.getRef(t);return a?e.fireEvent(a,n,r,i,o):r?(r._nodeId=t,e.fireEvent(e.getRef("_documentElement"),n,r,i,o)):void 0}function callback(e,t,n,r){return e.taskCenter.callback(t,n,r)}function componentHook(e,t,n,r,i){if(!e||!e.taskCenter)return console.error('[JS Framework] Can\'t find "document" or "taskCenter".'),null;let o=null;try{o=e.taskCenter.triggerHook(t,n,r,i)}catch(e){throw console.error(`[JS Framework] Failed to trigger the "${n}@${r}" hook on ${t}.`),e}return o}function receiveTasks(e,t){const n=getDoc(e);return n?Array.isArray(t)?t.map((e=>{switch(e.method){case"callback":return callback(n,...e.args);case"fireEventSync":case"fireEvent":return fireEvent(n,...e.args);case"componentHook":return componentHook(n,...e.args)}})):void 0:new Error(`[JS Framework] Failed to receiveTasks, instance (${e}) is not available.`)}const weexModules={};function registerModules(e={}){for(const t in e)hasOwn(weexModules,t)||(weexModules[t]={}),Array.isArray(e[t])&&e[t].forEach((e=>{"string"==typeof e?weexModules[t][e]=!0:isPlainObject(e)&&"string"==typeof e.name&&(weexModules[t][e.name]=e.args||[])}))}function isRegisteredModule(e,t){return"string"==typeof t?!(!weexModules[e]||!weexModules[e][t]):!!weexModules[e]}function getModuleDescription(e){return weexModules[e]}const weexComponents={};function registerComponents(e){Array.isArray(e)&&e.forEach((e=>{e&&("string"==typeof e?weexComponents[e]=!0:isPlainObject(e)&&"string"==typeof e.type&&(weexComponents[e.type]=e,registerElement(e.type,e.methods)))}))}function isRegisteredComponent(e){return!!weexComponents[e]}const services$1=[];function register(e,t){has(e)?console.warn(`Service "${e}" has been registered already!`):(t=Object.assign({},t),services$1.push({name:e,options:t}))}function unregister(e){services$1.some(((t,n)=>{if(t.name===e)return services$1.splice(n,1),!0}))}function has(e){return indexOf(e)>=0}function indexOf(e){return services$1.map((e=>e.name)).indexOf(e)}class Comment extends Node{constructor(e){super(),this.nodeType=8,this.nodeId=uniqueId(),this.ref=this.nodeId,this.type="comment",this.value=e,this.children=[],this.pureChildren=[]}toString(){return"\x3c!-- "+this.value+" --\x3e"}}function createAction(e,t=[]){return{module:"dom",method:e,args:t}}class Listener{constructor(e,t){this.id=e,this.batched=!1,this.updates=[],"function"==typeof t?Object.defineProperty(this,"handler",{configurable:!0,enumerable:!0,writable:!0,value:t}):console.error("[JS Runtime] invalid parameter, handler must be a function")}createFinish(e){return(0,this.handler)([createAction("createFinish")],e)}updateFinish(e){return(0,this.handler)([createAction("updateFinish")],e)}refreshFinish(e){return(0,this.handler)([createAction("refreshFinish")],e)}createBody(e){const t=e.toJSON(),n=t.children;delete t.children;const r=[createAction("createBody",[t])];return n&&r.push.apply(r,n.map((e=>createAction("addElement",[t.ref,e,-1])))),this.addActions(r)}addElement(e,t,n){return n>=0||(n=-1),this.addActions(createAction("addElement",[t,e.toJSON(),n]))}removeElement(e){if(Array.isArray(e)){const t=e.map((e=>createAction("removeElement",[e])));return this.addActions(t)}return this.addActions(createAction("removeElement",[e]))}moveElement(e,t,n){return this.addActions(createAction("moveElement",[e,t,n]))}setAttr(e,t,n){const r={};return r[t]=n,this.addActions(createAction("updateAttrs",[e,r]))}setStyle(e,t,n){const r={};return r[t]=n,this.addActions(createAction("updateStyle",[e,r]))}setStyles(e,t){return this.addActions(createAction("updateStyle",[e,t]))}addEvent(e,t){return this.addActions(createAction("addEvent",[e,t]))}removeEvent(e,t){return this.addActions(createAction("removeEvent",[e,t]))}handler(e,t){return t&&t()}addActions(e){const t=this.updates,n=this.handler;if(Array.isArray(e)||(e=[e]),!this.batched)return n(e);t.push.apply(t,e)}}const handlerMap={createBody:"callCreateBody",addElement:"callAddElement",removeElement:"callRemoveElement",moveElement:"callMoveElement",updateAttrs:"callUpdateAttrs",updateStyle:"callUpdateStyle",addEvent:"callAddEvent",removeEvent:"callRemoveEvent"};function createHandler(e,t){const n=t||global.callNative;return"function"!=typeof n&&console.error("[JS Runtime] no default handler"),function(t){Array.isArray(t)||(t=[t]);for(let r=0;r<t.length;r++){const i=dispatchTask(e,t[r],n);if(-1===i)return i}}}function hasAvailableHandler(e,t){return"dom"===e&&handlerMap[t]&&"function"==typeof global[handlerMap[t]]}function dispatchTask(e,t,n){const{module:r,method:i,args:o}=t;return hasAvailableHandler(r,i)?global[handlerMap[i]](e,...o,"-1"):n(e,[t],"-1")}function updateElement(e,t){const n=t.attrs||{};for(const t in n)e.setAttr(t,n[t],!0);const r=t.style||{};for(const t in r)e.setStyle(t,r[t],!0)}class Document{constructor(e,t,n){e=e?e.toString():"",this.id=e,this.URL=t,addDoc(e,this),this.nodeMap={};const r=Document.Listener||Listener;this.listener=new r(e,n||createHandler(e,Document.handler)),this.taskCenter=new TaskCenter(e,n?(e,...t)=>n(...t):Document.handler),this.createDocumentElement()}getRef(e){return this.nodeMap[e]}open(){this.listener.batched=!1}close(){this.listener.batched=!0}createDocumentElement(){if(!this.documentElement){const e=new Element("document");e.docId=this.id,e.ownerDocument=this,e.role="documentElement",e.depth=0,e.ref="_documentElement",this.nodeMap._documentElement=e,this.documentElement=e,Object.defineProperty(e,"appendChild",{configurable:!0,enumerable:!0,writable:!0,value:e=>{appendBody(this,e)}}),Object.defineProperty(e,"insertBefore",{configurable:!0,enumerable:!0,writable:!0,value:(e,t)=>{appendBody(this,e,t)}}),checkLevel("debug")&&debugLog(`Create document element (id: "${e.docId}", ref: "${e.ref}")`)}return this.documentElement}createBody(e,t){if(!this.body){const n=new Element(e,t);setBody(this,n),checkLevel("debug")&&debugLog(`[createBody](${this.id},${n.type},${n.ref}) (${JSON.stringify(n.toJSON(!0))}).`)}return this.body}createElement(e,t){const n=new Element(e,t);return checkLevel("debug")&&debugLog(`[createElement](${this.id},${n.type},${n.ref}) (${JSON.stringify(n.toJSON(!0))}).`),n}createComment(e){return new Comment(e)}fireEvent(e,t,n,r,i){if(!e)return;let o;(n=n||{}).type=n.type||t,n.target=e,n.currentTarget=e,n.timestamp=Date.now(),r&&updateElement(e,r);const a=this.getRef("_root");return a&&a.attr&&(o="true"===a.attr.bubble),"weex"!==this.__$compiler__&&(n=processEvent(n)),e.fireEvent(t,n,o,i)}destroy(){checkLevel("debug")&&debugLog(`[destroy](${this.id},document,${this.ref}) Destroy document (id: "${this.id}", URL: "${this.URL}")`),this.taskCenter.destroyCallback(),delete this.listener,delete this.nodeMap,delete this.taskCenter,removeDoc(this.id)}}Document.handler=null;var lex={InputElementDiv:"<WhiteSpace>|<LineTerminator>|<ReservedWord>|<Identifier>|<NumericLiteral>|<Punctuator>|<StringLiteral>",InputElementRegExp:"<WhiteSpace>|<LineTerminator>|<ReservedWord>|<Identifier>|<NumericLiteral>|<Punctuator>|<StringLiteral>",ReservedWord:"<Keyword>|<NullLiteral>|<BooleanLiteral>",WhiteSpace:/[\t\v\f\u0020\u00A0\u1680\u180E\u2000-\u200A\u202F\u205f\u3000\uFEFF]/,LineTerminator:/[\n\r\u2028\u2029]/,Keyword:/new(?![_$a-zA-Z0-9])|void(?![_$a-zA-Z0-9])|delete(?![_$a-zA-Z0-9])|in(?![_$a-zA-Z0-9])|instanceof(?![_$a-zA-Z0-9])|typeof(?![_$a-zA-Z0-9])/,NullLiteral:/null(?![_$a-zA-Z0-9])/,BooleanLiteral:/(?:true|false)(?![_$a-zA-Z0-9])/,Identifier:/[_$a-zA-Z][_$a-zA-Z0-9]*/,Punctuator:/\/|=>|\*\*|>>>=|>>=|<<=|===|!==|>>>|<<|%=|\*=|-=|\+=|<=|>=|==|!=|\^=|\|=|\|\||&&|&=|>>|\+\+|--|\:|}|\*|&|\||\^|!|~|-|\+|\?|%|=|>|<|,|;|\.(?![0-9])|\]|\[|\)|\(|{/,DivPunctuator:/\/=|\//,NumericLiteral:/(?:0[xX][0-9a-fA-F]*|\.[0-9]+|(?:[1-9]+[0-9]*|0)(?:\.[0-9]*|\.)?)(?:[eE][+-]{0,1}[0-9]+)?(?![_$a-zA-Z0-9])/,StringLiteral:/"(?:[^"\n\\\r\u2028\u2029]|\\(?:['"\\bfnrtv\n\r\u2028\u2029]|\r\n)|\\x[0-9a-fA-F]{2}|\\u[0-9a-fA-F]{4}|\\[^0-9ux'"\\bfnrtv\n\\\r\u2028\u2029])*"|'(?:[^'\n\\\r\u2028\u2029]|\\(?:['"\\bfnrtv\n\r\u2028\u2029]|\r\n)|\\x[0-9a-fA-F]{2}|\\u[0-9a-fA-F]{4}|\\[^0-9ux'"\\bfnrtv\n\\\r\u2028\u2029])*'/,RegularExpressionLiteral:/\/(?:\[(?:\\[\s\S]|[^\]])*\]|[^*\/\\\n\r\u2028\u2029]|\\[^\n\r\u2028\u2029])(?:\[(?:\\[\s\S]|[^\]])*\]|[^\/\\\n\r\u2028\u2029]|\\[^\n\r\u2028\u2029])*\/[0-9a-zA-Z]*/};function XRegExp(e,t,n){var r=[t];var i=function t(i){var o=new RegExp;return o.compile(i.replace(/<([^>]+)>/g,(function(n,i){return e[i]?(r.push(i),e[i]instanceof RegExp?"("+e[i].source+")":"("+t(e[i]).source+")"):""})),n),o}(e[t]);this.exec=function(e){var t=i.exec(e);if(null==t)return null;for(var n=new String(t[0]),o=0;o<r.length;o++)t[o]&&(n[r[o]]=t[o]);return n},Object.defineProperty(this,"lastIndex",{get:function(){return i.lastIndex},set:function(e){i.lastIndex=e}})}function LexicalParser(){var e,t=new XRegExp(lex,"InputElementDiv","g"),n=new XRegExp(lex,"InputElementRegExp","g");Object.defineProperty(this,"source",{get:function(){return e},set:function(r){e=r,t.lastIndex=0,n.lastIndex=0}}),this.reset=function(){t.lastIndex=0,n.lastIndex=0},this.getNextToken=function(r){var i,o=t.lastIndex,a=(i=r?t:n).exec(e);if(a&&i.lastIndex-o>a.length)throw new SyntaxError("Unexpected token ILLEGAL");return t.lastIndex=i.lastIndex,n.lastIndex=i.lastIndex,a}}var rules={IdentifierName:[["Identifier"]],Literal:[["NullLiteral"],["BooleanLiteral"],["NumericLiteral"],["StringLiteral"],["RegularExpressionLiteral"]],PrimaryExpression:[["Identifier"],["Literal"],["(","Expression",")"]],CallExpression:[["PrimaryExpression","Arguments"],["CallExpression","Arguments"]],Arguments:[["(",")"],["(","ArgumentList",")"]],ArgumentList:[["ConditionalExpression"],["ArgumentList",",","ConditionalExpression"]],LeftHandSideExpression:[["PrimaryExpression"],["CallExpression"]],UnaryExpression:[["LeftHandSideExpression"],["void","UnaryExpression"],["+","UnaryExpression"],["-","UnaryExpression"],["~","UnaryExpression"],["!","UnaryExpression"]],ExponentiationExpression:[["UnaryExpression"],["ExponentiationExpression","**","UnaryExpression"]],MultiplicativeExpression:[["MultiplicativeExpression","/","ExponentiationExpression"],["ExponentiationExpression"],["MultiplicativeExpression","*","ExponentiationExpression"],["MultiplicativeExpression","%","ExponentiationExpression"]],AdditiveExpression:[["MultiplicativeExpression"],["AdditiveExpression","+","MultiplicativeExpression"],["AdditiveExpression","-","MultiplicativeExpression"]],ShiftExpression:[["AdditiveExpression"],["ShiftExpression","<<","AdditiveExpression"],["ShiftExpression",">>","AdditiveExpression"],["ShiftExpression",">>>","AdditiveExpression"]],RelationalExpression:[["ShiftExpression"],["RelationalExpression","<","ShiftExpression"],["RelationalExpression",">","ShiftExpression"],["RelationalExpression","<=","ShiftExpression"],["RelationalExpression",">=","ShiftExpression"],["RelationalExpression","instanceof","ShiftExpression"],["RelationalExpression","in","ShiftExpression"]],EqualityExpression:[["RelationalExpression"],["EqualityExpression","==","RelationalExpression"],["EqualityExpression","!=","RelationalExpression"],["EqualityExpression","===","RelationalExpression"],["EqualityExpression","!==","RelationalExpression"]],BitwiseANDExpression:[["EqualityExpression"],["BitwiseANDExpression","&","EqualityExpression"]],BitwiseXORExpression:[["BitwiseANDExpression"],["BitwiseXORExpression","^","BitwiseANDExpression"]],BitwiseORExpression:[["BitwiseXORExpression"],["BitwiseORExpression","|","BitwiseXORExpression"]],LogicalANDExpression:[["BitwiseORExpression"],["LogicalANDExpression","&&","BitwiseORExpression"]],LogicalORExpression:[["LogicalANDExpression"],["LogicalORExpression","||","LogicalANDExpression"]],ConditionalExpression:[["LogicalORExpression"],["LogicalORExpression","?","LogicalORExpression",":","LogicalORExpression"]],Expression:[["ConditionalExpression"],["Expression",",","ConditionalExpression"]],Program:[["Expression"]]};function Symbol$1(e,t){this.name=e,this.token=t,this.childNodes=[],this.toString=function(e){if(e||(e=""),1==this.childNodes.length)return this.childNodes[0].toString(e);for(var t=e+this.name+(null!=this.token&&this.name!=this.token?":"+this.token:"")+"\n",n=0;n<this.childNodes.length;n++)t+=this.childNodes[n].toString(e+"    ");return t}}function SyntacticalParser(){var e={Program:"$"},t={};!function e(n){t[JSON.stringify(n)]=n;for(var r=Object.getOwnPropertyNames(n);r.length;){var i=r.shift();rules[i]&&rules[i].forEach((function(e){n[e[0]]||r.push(e[0]);var t=n;e.forEach((function(e){t[e]||(t[e]={}),t=t[e]})),n[i].$div&&(t.$div=!0),t.$reduce=i,t.$count=e.length}))}for(var o in n)"object"!=typeof n[o]||"$"==o.charAt(0)||n[o].$closure||(t[JSON.stringify(n[o])]?n[o]=t[JSON.stringify(n[o])]:e(n[o]));n.$closure=!0}(e);var n=[],r=[e],i=e;this.insertSymbol=function(e,t){for(;!i[e.name]&&i.$reduce;){for(var o=i.$count,a=new Symbol$1(i.$reduce);o--;)a.childNodes.push(n.pop()),r.pop();i=r[r.length-1],this.insertSymbol(a)}if(i=i[e.name],n.push(e),r.push(i),!i)throw new Error;return i.$div},this.reset=function(){i=e,n=[],r=[e]},Object.defineProperty(this,"grammarTree",{get:function(){try{for(;i.$reduce;){for(var e=i.$count,t=new Symbol$1(i.$reduce);e--;)t.childNodes.push(n.pop()),r.pop();i=r[r.length-1],this.insertSymbol(t)}if(n.length>0&&i[";"])return this.insertSymbol(new Symbol$1(";",";")),this.grammarTree;if(1!=n.length||"Program"!=n[0].name)throw new Error}catch(e){throw new SyntaxError("Unexpected end of input")}return n[0]}})}function Parser(){this.lexicalParser=new LexicalParser,this.syntacticalParser=new SyntacticalParser;var e={};["NullLiteral","BooleanLiteral","NumericLiteral","StringLiteral","RegularExpressionLiteral","Identifier","**","=>","{","}","(",")","[","]",".",";",",","<",">","<=",">=","==","!=","===","!==","+","-","*","%","++","--","<<",">>",">>>","&","|","^","!","~","&&","||","?",":","=","+=","-=","*=","%=","<<=",">>=",">>>=","&=","|=","^=","/","/=","instanceof","typeof","new","void","debugger","this","delete","in"].forEach((function(t){Object.defineProperty(e,t,{})})),this.reset=function(){this.lexicalParser.reset(),this.syntacticalParser.reset()},this.parse=function(t,n){var r,i=!1;this.lexicalParser.source=t;for(var o=!1;r=this.lexicalParser.getNextToken(o);){n&&n(r);try{if(Object.getOwnPropertyNames(r).some((t=>!!e.hasOwnProperty(t)&&(o=this.syntacticalParser.insertSymbol(new Symbol$1(t,r),i),i=!1,!0))))continue;(r.Keyword||r.Punctuator||r.DivPunctuator)&&e.hasOwnProperty(r.toString())&&(o=this.syntacticalParser.insertSymbol(new Symbol$1(r.toString(),r),i))}catch(e){throw new SyntaxError("Unexpected token "+r)}}return this.syntacticalParser.grammarTree}}var parser=new Parser;function JavaScriptExpression(text){parser.reset(),this.tree=parser.parse(text),this.paths=[];var context=Object.create(null),me=this,pathIndex=Object.create(null);function checkSimple(e){for(var t=e;t.childNodes.length<=1&&"MemberExpression"!==t.name;)t=t.childNodes[0];"MemberExpression"===t.name?me.isSimple=!0:me.isSimple=!1}function walk(e){if("CallExpression"===e.name&&"CallExpression"!==e.childNodes[e.childNodes.length-1].name)getPath(e.childNodes[1]),walk(e.childNodes[0]);else if("NewExpression"===e.name&&1===e.childNodes.length)getPath(e.childNodes[0]);else if("MemberExpression"===e.name&&1===e.childNodes.length)getPath(e);else for(var t=0;t<e.childNodes.length;t++)walk(e.childNodes[t])}function getPath(e){var t;if("IdentifierName"===e.childNodes[0].name)return(t=getPath(e.childNodes[2]))&&(t=t.concat(e.childNodes[0].childNodes[0].token.toString())),createPath(t),t;if("PrimaryExpression"===e.childNodes[0].name)return"Identifier"===e.childNodes[0].childNodes[0].name?(createPath(t=[e.childNodes[0].childNodes[0].token.toString()]),t):null;if("]"===e.childNodes[0].name)return getPath(e.childNodes[3]),walk(e.childNodes[1]),null;if("Arguments"===e.childNodes[0].name)return walk(e.childNodes[0]),walk(e.childNodes[1]),null;for(var n=0;n<e.childNodes.length;n++)walk(e.childNodes[n])}function createPath(e){for(var t=context,n=0;n<e.length-1;n++)t[e[n]]||(t[e[n]]=Object.create(null)),t=t[e[n]];me.paths.push(e),pathIndex[e.join(".")]=!1}this.isSimple,this.isConst,walk(this.tree),checkSimple(this.tree),0===this.paths.length&&(this.isConst=!0),this.setter=function(e){for(var t=context,n=0;n<e.length-1;n++)t[e[n]]||(t[e[n]]=Object.create(null)),t=t[e[n]];return{isCompleted:function(){for(var e in pathIndex)if(!pathIndex[e])return!1;return!0},set:function(r){return pathIndex[e.join(".")]||(pathIndex[e.join(".")]=!0),t[e[n]]=r,this.isCompleted()?me.exec():void 0}}},this.valueOf=this.exec=function(){try{return function(){return eval(text)}.call(context)}catch(e){}}}function visit(e){var t,n=e.childNodes.slice().reverse(),r=n.filter((e=>!e.token||!e.token.Punctuator));if("UnaryExpression"===e.name&&(2===n.length&&"-"===n[0].name&&1===r.length))return(t=visit(r[0])).value=-t.value,t;if("Arguments"===e.name){for(var i=[],o=r[0];o;)3===o.childNodes.length&&(i.unshift(o.childNodes[0]),o=o.childNodes[2]),1===o.childNodes.length&&(i.unshift(o.childNodes[0]),o=null);return{type:"Arguments",children:i.map((e=>visit(e)))}}if(r&&1===r.length)return t=visit(r[0]);if(e.token&&["NullLiteral","BooleanLiteral","NumericLiteral","StringLiteral","Identifier"].some((t=>e.token[t]))){var a=Object.keys(e.token).filter((e=>e.match(/Literal/)||e.match(/Identifier/)))[0];return{type:a,value:{NullLiteral:null,BooleanLiteral:Boolean(e.token),NumericLiteral:Number(e.token),StringLiteral:e.token,Identifier:e.token}[a]}}return"CallExpression"===e.name?{type:"CallExpression",children:[visit(n[0]),visit(n[1])]}:{type:n.filter((e=>e.token&&e.token.Punctuator))[0].name,children:n.filter((e=>!e.token||!e.token.Punctuator)).map((e=>visit(e)))}}function parse(e){var t=new JavaScriptExpression(e);return JSON.stringify(visit(t.tree),null)}function isBindMethod(e,t){return("bindingx"===e||"binding"===e)&&"bind"===t}function formatExpression(e){if(void 0===e)return;try{e=JSON.parse(e)}catch(e){}const t={};return"string"==typeof e?t.origin=e:e&&(t.origin=e.origin,t.transformed=e.transformed),t.transformed||t.origin?(t.transformed=t.transformed||parse(t.origin),t):void 0}function formatExpressions(e){return e?(e.exitExpression=formatExpression(e.exitExpression),e.props&&e.props.forEach((e=>{e.expression=formatExpression(e.expression)})),e):e}function fixCallback(e){return function(t={}){if("function"==typeof e)return e({state:"end"===t.state?"exit":t.state,t:void 0!==t.t?t.t:t.deltaT})}}function handleModuleGetter(e,t,n){return isBindMethod(e,t)?function(e,t=function(){}){if(!e)throw new Error("should pass options for binding");return formatExpressions(e),n(e,e&&"timing"===e.eventType?fixCallback(t):t)}:n}function setId(e,t){Object.defineProperty(e,"[[CurrentInstanceId]]",{value:t})}function getId$1(e){return e["[[CurrentInstanceId]]"]}function moduleGetter(e,t,n){const r=getTaskCenter(e);return r&&"function"==typeof r.send?(...e)=>r.send("module",{module:t,method:n},e):(console.error(`[JS Framework] Failed to find taskCenter (${e}).`),null)}function moduleSetter(e,t,n,r){const i=getTaskCenter(e);return i&&"function"==typeof i.send?"function"!=typeof r?(console.error(`[JS Framework] ${t}.${n} must be assigned as a function.`),null):e=>i.send("module",{module:t,method:n},[e]):(console.error(`[JS Framework] Failed to find taskCenter (${e}).`),null)}class WeexInstance{constructor(e,t,n){setId(this,String(e)),this.config=t||{},this._nativeData=n||{},this.document=new Document(e,this.config.bundleUrl),this.requireModule=this.requireModule.bind(this),this.importScript=this.importScript.bind(this),this.isRegisteredModule=isRegisteredModule,this.isRegisteredComponent=isRegisteredComponent}requireModule(e){const t=getId$1(this);if(!(t&&this.document&&this.document.taskCenter))return void console.error(`[JS Framework] Failed to requireModule("${e}"), instance (${t}) doesn't exist anymore.`);if(!isRegisteredModule(e))return void console.warn(`[JS Framework] 当前运行的基座不包含原生插件[${e}]，请在manifest中配置该插件，重新制作包括该原生插件的自定义运行基座`);const n={},r=getModuleDescription(e);for(const i in r)Object.defineProperty(n,i,{enumerable:!0,configurable:!0,get:()=>handleModuleGetter(e,i,moduleGetter(t,e,i)),set:n=>moduleSetter(t,e,i,n)});return n}supports(e){if("string"!=typeof e)return null;const t=e.match(/^@(\w+)\/([\w-]+)(\.(\w+))?$/i);if(t){const e=t[1],n=t[2],r=t[4];switch(e){case"module":return isRegisteredModule(n,r);case"component":return isRegisteredComponent(n)}}return null}importScript(e,t={}){const n=getId$1(this),r=getTaskCenter(n);return new Promise((function(i,o){r&&"function"==typeof r.send||o(new Error(`[JS Framework] Failed to import script "${e}", no taskCenter (${n}) matched.`));try{r.send("module",{module:"script",method:"importScript"},[e,t],{callback:[e=>i(e),e=>o(e)]})}catch(e){o(e)}}))}}function createServiceContext(e,t,n){const r=n.Vue;let i=n.setTimeout,o=n.clearTimeout,a=n.setInterval,s=n.clearInterval;const c=n.__uniConfig,l=n.__uniRoutes;var u=function(n){var r="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",u=function(){const e=new Uint8Array(256);for(var t=0;t<r.length;t++)e[r.charCodeAt(t)]=t;return e}();const g=Object.assign,m=Object.prototype.hasOwnProperty,v=(e,t)=>m.call(e,t),y=Array.isArray,_=e=>"function"==typeof e,b=e=>"string"==typeof e,w=e=>(e=>null!==e&&"object"==typeof e)(e)&&_(e.then)&&_(e.catch),k=Object.prototype.toString,x=e=>k.call(e),S=e=>"[object Object]"===x(e),C=e=>{const t=Object.create(null);return n=>t[n]||(t[n]=e(n))},E=/-(\w)/g,I=C((e=>e.replace(E,((e,t)=>t?t.toUpperCase():"")))),T=/\B([A-Z])/g,A=C((e=>e.replace(T,"-$1").toLowerCase())),O=C((e=>e.charAt(0).toUpperCase()+e.slice(1))),$=["original","compressed"],N=["album","camera"],P=["GET","OPTIONS","HEAD","POST","PUT","DELETE","TRACE","CONNECT"];function M(e,t){return e&&-1!==t.indexOf(e)?e:t[0]}function L(e,t){return!y(e)||0===e.length||e.find((e=>-1===t.indexOf(e)))?t:e}function R(e){return function(){try{return e.apply(e,arguments)}catch(e){console.error(e)}}}let B=1;const D={};function j(e,t,n,r=!1){return D[e]={name:t,keepAlive:r,callback:n},e}function F(e,t,n){if("number"==typeof e){const r=D[e];if(r)return r.keepAlive||delete D[e],r.callback(t,n)}return t}function V(e){for(const t in D)if(D[t].name===e)return!0;return!1}const U="success",z="fail",W="complete";function H(e,t={},{beforeAll:n,beforeSuccess:r}={}){S(t)||(t={});const{success:i,fail:o,complete:a}=function(e){const t={};for(const n in e){const r=e[n];_(r)&&(t[n]=R(r),delete e[n])}return t}(t),s=_(i),c=_(o),l=_(a),u=B++;return j(u,e,(t=>{(t=t||{}).errMsg=function(e,t){return e&&-1!==e.indexOf(":fail")?t+e.substring(e.indexOf(":fail")):t+":ok"}(t.errMsg,e),_(n)&&n(t),t.errMsg===e+":ok"?(_(r)&&r(t),s&&i(t)):c&&o(t),l&&a(t)})),u}const q="success",Y="fail",J="complete",X={},G={};function Z(e){return function(t){return e(t)||t}}function K(e,t){let n=!1;for(let r=0;r<e.length;r++){const i=e[r];if(n)n=Promise.resolve(Z(i));else{const e=i(t);if(w(e)&&(n=Promise.resolve(e)),!1===e)return{then(){},catch(){}}}}return n||{then:e=>e(t),catch(){}}}function Q(e,t={}){return[q,Y,J].forEach((n=>{const r=e[n];if(!y(r))return;const i=t[n];t[n]=function(e){K(r,e).then((e=>_(i)&&i(e)||e))}})),t}function ee(e,t){const n=[];y(X.returnValue)&&n.push(...X.returnValue);const r=G[e];return r&&y(r.returnValue)&&n.push(...r.returnValue),n.forEach((e=>{t=e(t)||t})),t}function te(e,t,n,...r){const i=function(e){const t=Object.create(null);Object.keys(X).forEach((e=>{"returnValue"!==e&&(t[e]=X[e].slice())}));const n=G[e];return n&&Object.keys(n).forEach((e=>{"returnValue"!==e&&(t[e]=(t[e]||[]).concat(n[e]))})),t}(e);if(i&&Object.keys(i).length){if(y(i.invoke)){return K(i.invoke,n).then((e=>t(Q(i,e),...r)))}return t(Q(i,n),...r)}return t(n,...r)}function ne(e,t){return(n={})=>function(e){return!(!S(e)||![U,z,W].find((t=>_(e[t]))))}(n)?ee(e,te(e,t,n)):ee(e,new Promise(((r,i)=>{te(e,t,g(n,{success:r,fail:i}))})))}function re(e,t,n,r){return F(e,g({errMsg:t+":fail"+(n?" "+n:"")},r))}function ie(e,t,n,r){if(r&&r.beforeInvoke){const e=r.beforeInvoke(t);if(b(e))return e}const i=function(e,t){const n=e[0];if(!t||!S(t.formatArgs)&&S(n))return;const r=t.formatArgs,i=Object.keys(r);for(let t=0;t<i.length;t++){const o=i[t],a=r[o];if(_(a)){const t=a(e[0][o],n);if(b(t))return t}else v(n,o)||(n[o]=a)}}(t,r);if(i)return i}function oe(e){if(!_(e))throw new Error('Invalid args: type check failed for args "callback". Expected Function')}function ae(e,t,n){return r=>{oe(r);const i=ie(0,[r],0,n);if(i)throw new Error(i);const o=!V(e);!function(e,t){j(B++,e,t,!0)}(e,r),o&&(!function(e){f.on("api."+e,(t=>{for(const n in D){const r=D[n];r.name===e&&r.callback(t)}}))}(e),t())}}function se(e,t,n){return r=>{oe(r);const i=ie(0,[r],0,n);if(i)throw new Error(i);!function(e,t){for(const n in D){const r=D[n];r.callback===t&&r.name===e&&delete D[n]}}(e=e.replace("off","on"),r);V(e)||(!function(e){f.off("api."+e)}(e),t())}}function ce(e,t,n,r){return n=>{const i=H(e,n,r),o=ie(0,[n],0,r);return o?re(i,e,o):t(n,{resolve:t=>function(e,t,n){return F(e,g(n||{},{errMsg:t+":ok"}))}(i,e,t),reject:(t,n)=>re(i,e,function(e){return!e||b(e)?e:e.stack?(console.error(e.message+"\n"+e.stack),e.message):e}(t),n)})}}function le(e,t,n){return ae(e,t,n)}function ue(e,t,n){return se(e,t,n)}function de(e,t,n,r){return ne(e,ce(e,t,0,r))}function he(e,t,n,r){return function(e,t,n,r){return(...e)=>{const n=ie(0,e,0,r);if(n)throw new Error(n);return t.apply(null,e)}}(0,t,0,r)}function pe(e,t,n,r){return ne(e,function(e,t,n,r){return ce(e,t,0,r)}(e,t,0,r))}const fe=he(0,(e=>function(e){var t,n,r,i,o,a=.75*e.length,s=e.length,c=0;"="===e[e.length-1]&&(a--,"="===e[e.length-2]&&a--);var l=new ArrayBuffer(a),d=new Uint8Array(l);for(t=0;t<s;t+=4)n=u[e.charCodeAt(t)],r=u[e.charCodeAt(t+1)],i=u[e.charCodeAt(t+2)],o=u[e.charCodeAt(t+3)],d[c++]=n<<2|r>>4,d[c++]=(15&r)<<4|i>>2,d[c++]=(3&i)<<6|63&o;return l}(e))),ge=he(0,(e=>function(e){var t,n=new Uint8Array(e),i=n.length,o="";for(t=0;t<i;t+=3)o+=r[n[t]>>2],o+=r[(3&n[t])<<4|n[t+1]>>4],o+=r[(15&n[t+1])<<2|n[t+2]>>6],o+=r[63&n[t+2]];return i%3==2?o=o.substring(0,o.length-1)+"=":i%3==1&&(o=o.substring(0,o.length-2)+"=="),o}(e)));function me(){if("undefined"!=typeof __SYSTEM_INFO__)return window.__SYSTEM_INFO__;const{resolutionWidth:e}=t.screen.getCurrentSize();return{platform:(t.os.name||"").toLowerCase(),pixelRatio:t.screen.scale,windowWidth:Math.round(e)}}const ve=encodeURIComponent;function ye(e,t=ve){const n=e?Object.keys(e).map((n=>{let r=e[n];return void 0===typeof r||null===r?r="":S(r)&&(r=JSON.stringify(r)),t(n)+"="+t(r)})).filter((e=>e.length>0)).join("&"):null;return n?`?${n}`:""}function _e(e){try{return decodeURIComponent(""+e)}catch(e){}return""+e}const be=/\+/g;function we(e){const t={};if(""===e||"?"===e)return t;const n=("?"===e[0]?e.slice(1):e).split("&");for(let e=0;e<n.length;++e){const r=n[e].replace(be," ");let i=r.indexOf("="),o=_e(i<0?r:r.slice(0,i)),a=i<0?null:_e(r.slice(i+1));if(o in t){let e=t[o];y(e)||(e=t[o]=[e]),e.push(a)}else t[o]=a}return t}function ke(e){const[t,n]=e.split("?",2);return{path:t,query:we(n||"")}}class xe extends Error{constructor(e){super(e),this.name="DOMException"}}function Se(e,t){return t&&(t.capture&&(e+="Capture"),t.once&&(e+="Once"),t.passive&&(e+="Passive")),`on${O(I(e))}`}class Ce{constructor(e,t){this.defaultPrevented=!1,this.timeStamp=Date.now(),this._stop=!1,this._end=!1,this.type=e,this.bubbles=!!t.bubbles,this.cancelable=!!t.cancelable}preventDefault(){this.defaultPrevented=!0}stopImmediatePropagation(){this._end=this._stop=!0}stopPropagation(){this._stop=!0}}function Ee(e){if(e instanceof Ce)return e;const[t]=function(e){let t;if(Ie.test(e)){let n;for(t={};n=e.match(Ie);)e=e.slice(0,e.length-n[0].length),t[n[0].toLowerCase()]=!0}return[A(e.slice(2)),t]}(e.type),n=new Ce(t,{bubbles:!1,cancelable:!1});return g(n,e),n}const Ie=/(?:Once|Passive|Capture)$/;function Te(e,t){const{parentNode:n}=e;if(!n)return null;const{childNodes:r}=n;return r[r.indexOf(e)+("n"===t?1:-1)]||null}function Ae(e,t=null){let n;return(...r)=>(e&&(n=e.apply(t,r),e=null),n)}function Oe(e,t){e=e||{},"string"==typeof t&&(t={errMsg:t}),/:ok$/.test(t.errMsg)?"function"==typeof e.success&&e.success(t):"function"==typeof e.fail&&e.fail(t),"function"==typeof e.complete&&e.complete(t)}const $e=["%","%"],Ne=/^([a-z-]+:)?\/\//i,Pe=/^data:.*,.*/,Me="wxs://",Le="onShow",Re="onHide",Be="onLaunch",De="onError",je="onThemeChange",Fe="onKeyboardHeightChange",Ve="onLoad",Ue="onReady",ze="onUnload",We="onResize",He="onBackPress",qe="onPageScroll",Ye="onTabItemTap",Je="onReachBottom",Xe="onPullDownRefresh",Ge="onNavigationBarButtonTap",Ze="onNavigationBarSearchInputClicked",Ke="onNavigationBarSearchInputChanged",Qe="onNavigationBarSearchInputConfirmed",et="onNavigationBarSearchInputFocusChanged",tt="onAppEnterForeground",nt="onAppEnterBackground";class rt{constructor(e,t){this.id=e,this.listener={},this.emitCache={},t&&Object.keys(t).forEach((e=>{this.on(e,t[e])}))}emit(e,...t){const n=this.listener[e];if(!n)return(this.emitCache[e]||(this.emitCache[e]=[])).push(t);n.forEach((e=>{e.fn.apply(e.fn,t)})),this.listener[e]=n.filter((e=>"once"!==e.type))}on(e,t){this._addListener(e,"on",t),this._clearCache(e)}once(e,t){this._addListener(e,"once",t),this._clearCache(e)}off(e,t){const n=this.listener[e];if(n)if(t)for(let e=0;e<n.length;)n[e].fn===t&&(n.splice(e,1),e--),e++;else delete this.listener[e]}_clearCache(e){const t=this.emitCache[e];if(t)for(;t.length>0;)this.emit.apply(this,[e,...t.shift()])}_addListener(e,t,n){(this.listener[e]||(this.listener[e]=[])).push({fn:n,type:t})}}const it=[Le,Re,Be,De,je,"onPageNotFound","onUnhandledRejection",Ve,Ue,ze,We,He,qe,Ye,Je,Xe,"onShareTimeline","onAddToFavorites","onShareAppMessage",Ge,Ze,Ke,Qe,et],ot=Array.isArray,at=["{","}"];const st=/^(?:\d)+/,ct=/^(?:\w)+/;const lt="zh-Hans",ut="zh-Hant",dt="en",ht="fr",pt="es",ft=Object.prototype.hasOwnProperty,gt=(e,t)=>ft.call(e,t),mt=new class{constructor(){this._caches=Object.create(null)}interpolate(e,t,n=at){if(!t)return[e];let r=this._caches[e];return r||(r=function(e,[t,n]){const r=[];let i=0,o="";for(;i<e.length;){let a=e[i++];if(a===t){o&&r.push({type:"text",value:o}),o="";let t="";for(a=e[i++];void 0!==a&&a!==n;)t+=a,a=e[i++];const s=a===n,c=st.test(t)?"list":s&&ct.test(t)?"named":"unknown";r.push({value:t,type:c})}else o+=a}return o&&r.push({type:"text",value:o}),r}(e,n),this._caches[e]=r),function(e,t){const n=[];let r=0;const i=ot(t)?"list":(o=t,null!==o&&"object"==typeof o?"named":"unknown");var o;if("unknown"===i)return n;for(;r<e.length;){const o=e[r];switch(o.type){case"text":n.push(o.value);break;case"list":n.push(t[parseInt(o.value,10)]);break;case"named":"named"===i&&n.push(t[o.value])}r++}return n}(r,t)}};function vt(e,t){if(!e)return;if(e=e.trim().replace(/_/g,"-"),t&&t[e])return e;if(0===(e=e.toLowerCase()).indexOf("zh"))return e.indexOf("-hans")>-1?lt:e.indexOf("-hant")>-1?ut:(n=e,["-tw","-hk","-mo","-cht"].find((e=>-1!==n.indexOf(e)))?ut:lt);var n;const r=function(e,t){return t.find((t=>0===e.indexOf(t)))}(e,[dt,ht,pt]);return r||void 0}class yt{constructor({locale:e,fallbackLocale:t,messages:n,watcher:r,formater:i}){this.locale=dt,this.fallbackLocale=dt,this.message={},this.messages={},this.watchers=[],t&&(this.fallbackLocale=t),this.formater=i||mt,this.messages=n||{},this.setLocale(e||dt),r&&this.watchLocale(r)}setLocale(e){const t=this.locale;this.locale=vt(e,this.messages)||this.fallbackLocale,this.messages[this.locale]||(this.messages[this.locale]={}),this.message=this.messages[this.locale],t!==this.locale&&this.watchers.forEach((e=>{e(this.locale,t)}))}getLocale(){return this.locale}watchLocale(e){const t=this.watchers.push(e)-1;return()=>{this.watchers.splice(t,1)}}add(e,t,n=!0){const r=this.messages[e];r?n?Object.assign(r,t):Object.keys(t).forEach((e=>{gt(r,e)||(r[e]=t[e])})):this.messages[e]=t}f(e,t,n){return this.formater.interpolate(e,t,n).join("")}t(e,t,n){let r=this.message;return"string"==typeof t?(t=vt(t,this.messages))&&(r=this.messages[t]):n=t,gt(r,e)?this.formater.interpolate(r[e],n).join(""):(console.warn(`Cannot translate the value of keypath ${e}. Use the value of keypath as default.`),e)}}function _t(e,t){return e.indexOf(t[0])>-1}let bt;function wt(e){return _t(e,$e)?St().f(e,function(){const e=d.getLocale(),t=c.locales;return t[e]||t[c.fallbackLocale]||t.en||{}}(),$e):e}function kt(e,t){if(1===t.length){if(e){const n=e[t[0]];if(b(n)&&_t(n,$e))return e}return}const n=t.shift();return kt(e&&e[n],t)}function xt(e,t){return t.map((t=>function(e,t){const n=kt(e,t);if(!n)return!1;const r=t[t.length-1];let i=n[r];return Object.defineProperty(n,r,{get:()=>wt(i),set(e){i=e}}),!0}(e,t)))}function St(){if(!bt){let n;n="function"==typeof h?e.requireModule("plus").getLanguage():t.webview.currentWebview().getStyle().locale,bt=function(e,t={},n,r){"string"!=typeof e&&([e,t]=[t,e]),"string"!=typeof e&&(e=void 0!==d&&d.getLocale&&d.getLocale()||dt),"string"!=typeof n&&(n=void 0!==c&&c.fallbackLocale||dt);const i=new yt({locale:e,fallbackLocale:n,messages:t,watcher:r});let o=(e,t)=>{if("function"!=typeof h)o=function(e,t){return i.t(e,t)};else{const e=h().$vm;!function(e,t){e.$watchLocale?e.$watchLocale((e=>{t.setLocale(e)})):e.$watch((()=>e.$locale),(e=>{t.setLocale(e)}))}(e,i),!e.$t||e.$i18n,o=function(t,n){return e.$locale,i.t(t,n)}}return o(e,t)};return{i18n:i,f:(e,t,n)=>i.f(e,t,n),t:(e,t)=>o(e,t),add:(e,t,n=!0)=>i.add(e,t,n),watch:e=>i.watchLocale(e),getLocale:()=>i.getLocale(),setLocale:e=>i.setLocale(e)}}(n)}return bt}function Ct(e,t,n){return t.reduce(((t,r,i)=>(t[e+r]=n[i],t)),{})}const Et=Ae((()=>{const e="uni.app.",t=["quit"];St().add(dt,Ct(e,t,["Press back button again to exit"]),!1),St().add(pt,Ct(e,t,["Pulse otra vez para salir"]),!1),St().add(ht,Ct(e,t,["Appuyez à nouveau pour quitter l'application"]),!1),St().add(lt,Ct(e,t,["再按一次退出应用"]),!1),St().add(ut,Ct(e,t,["再按一次退出應用"]),!1)})),It=Ae((()=>{const e="uni.showActionSheet.",t=["cancel"];St().add(dt,Ct(e,t,["Cancel"]),!1),St().add(pt,Ct(e,t,["Cancelar"]),!1),St().add(ht,Ct(e,t,["Annuler"]),!1),St().add(lt,Ct(e,t,["取消"]),!1),St().add(ut,Ct(e,t,["取消"]),!1)})),Tt=Ae((()=>{const e="uni.showModal.",t=["cancel","confirm"];St().add(dt,Ct(e,t,["Cancel","OK"]),!1),St().add(pt,Ct(e,t,["Cancelar","OK"]),!1),St().add(ht,Ct(e,t,["Annuler","OK"]),!1),St().add(lt,Ct(e,t,["取消","确定"]),!1),St().add(ut,Ct(e,t,["取消","確定"]),!1)})),At=Ae((()=>{const e="uni.chooseImage.",t=["cancel","sourceType.album","sourceType.camera"];St().add(dt,Ct(e,t,["Cancel","Album","Camera"]),!1),St().add(pt,Ct(e,t,["Cancelar","Álbum","Cámara"]),!1),St().add(ht,Ct(e,t,["Annuler","Album","Caméra"]),!1),St().add(lt,Ct(e,t,["取消","从相册选择","拍摄"]),!1),St().add(ut,Ct(e,t,["取消","從相冊選擇","拍攝"]),!1)})),Ot=Ae((()=>{const e="uni.chooseVideo.",t=["cancel","sourceType.album","sourceType.camera"];St().add(dt,Ct(e,t,["Cancel","Album","Camera"]),!1),St().add(pt,Ct(e,t,["Cancelar","Álbum","Cámara"]),!1),St().add(ht,Ct(e,t,["Annuler","Album","Caméra"]),!1),St().add(lt,Ct(e,t,["取消","从相册选择","拍摄"]),!1),St().add(ut,Ct(e,t,["取消","從相冊選擇","拍攝"]),!1)})),$t=Ae((()=>{const e="uni.scanCode.",t=["title","album","fail","flash.on","flash.off"];St().add(dt,Ct(e,t,["Scan code","Album","Recognition failure","Tap to turn light on","Tap to turn light off"]),!1),St().add(pt,Ct(e,t,["Código de escaneo","Álbum","Échec de la reconnaissance","Toque para encender la luz","Toque para apagar la luz"]),!1),St().add(ht,Ct(e,t,["Code d’analyse","Album","Fallo de reconocimiento","Appuyez pour activer l'éclairage","Appuyez pour désactiver l'éclairage"]),!1),St().add(lt,Ct(e,t,["扫码","相册","识别失败","轻触照亮","轻触关闭"]),!1),St().add(ut,Ct(e,t,["掃碼","相冊","識別失敗","輕觸照亮","輕觸關閉"]),!1)})),Nt=Ae((()=>{const e="uni.startSoterAuthentication.",t=["authContent"];St().add(dt,Ct(e,t,["Fingerprint recognition"]),!1),St().add(pt,Ct(e,t,["Reconocimiento de huellas dactilares"]),!1),St().add(ht,Ct(e,t,["Reconnaissance de l'empreinte digitale"]),!1),St().add(lt,Ct(e,t,["指纹识别中..."]),!1),St().add(ut,Ct(e,t,["指紋識別中..."]),!1)})),Pt=Ae((()=>c.locales&&!!Object.keys(c.locales).length));const Mt=function(){};Mt.prototype={on:function(e,t,n){var r=this.e||(this.e={});return(r[e]||(r[e]=[])).push({fn:t,ctx:n}),this},once:function(e,t,n){var r=this;function i(){r.off(e,i),t.apply(n,arguments)}return i._=t,this.on(e,i,n)},emit:function(e){for(var t=[].slice.call(arguments,1),n=((this.e||(this.e={}))[e]||[]).slice(),r=0,i=n.length;r<i;r++)n[r].fn.apply(n[r].ctx,t);return this},off:function(e,t){var n=this.e||(this.e={}),r=n[e],i=[];if(r&&t)for(var o=0,a=r.length;o<a;o++)r[o].fn!==t&&r[o].fn._!==t&&i.push(r[o]);return i.length?n[e]=i:delete n[e],this}};var Lt=Mt;const Rt="invokeViewApi",Bt="invokeServiceApi";function Dt(e){return-1!==(e+="").indexOf("rpx")||-1!==e.indexOf("upx")}function jt(e,t=!1){if(t)return function(e){if(!Dt(e))return e;return e.replace(/(\d+(\.\d+)?)[ru]px/g,((e,t)=>d.upx2px(parseFloat(t))+"px"))}(e);if("string"==typeof e){const t=parseInt(e)||0;return Dt(e)?d.upx2px(t):t}return e}function Ft(e){if(e.$page)return e.$page.id;if(!e.$)return;const t=e.$.root.proxy;return t&&t.$page?t.$page.id:void 0}function Vt(){const e=p(),t=e.length;if(t)return e[t-1]}function Ut(){const e=Vt();if(e)return e.$page.meta}function zt(){const e=Ut();return e?e.id:-1}function Wt(){const e=Vt();if(e)return e.$vm}const Ht=["navigationBar","pullToRefresh"];function qt(e,t){const n=JSON.parse(JSON.stringify(c.globalStyle||{})),r=g({id:t},n,e);Ht.forEach((t=>{r[t]=g({},n[t],e[t])}));const{navigationBar:i}=r;return i.titleText&&i.titleImage&&(i.titleText=""),r}function Yt(e,t,n){if(b(e))n=t,t=e,e=Wt();else if("number"==typeof e){const t=p().find((t=>t.$page.id===e));e=t?t.$vm:Wt()}if(!e)return;if(e.__call_hook)return e.__call_hook(t,n);const r=e.$[t];return r&&((e,t)=>{let n;for(let r=0;r<e.length;r++)n=e[r](t);return n})(r,n)}function Jt(e,t){if(0===t.indexOf("/"))return t;if(0===t.indexOf("./"))return Jt(e,t.substr(2));const n=t.split("/"),r=n.length;let i=0;for(;i<r&&".."===n[i];i++);n.splice(0,i),t=n.join("/");const o=e.length>0?e.split("/"):[];return o.splice(o.length-i-1,i+1),"/"+o.concat(n).join("/")}function Xt(e,t=!1){return t?l.find((t=>t.path===e||t.alias===e)):l.find((t=>t.path===e))}function Gt(e){const t=Xt(e);if(t)return t.meta}let Zt=1;function Kt(){return zt()+"."+Rt}const Qt=Object.create(null);function en(e,t){Qt[e]||(Qt[e]=t)}function tn({id:e,name:t,args:n},r){const i=t=>{e&&f.publishHandler("invokeServiceApi."+e,t,r)},o=Qt[t];o?o(n,i):i({})}const nn=g(function(e){const t=new Lt;return{on:(e,n)=>t.on(e,n),once:(e,n)=>t.once(e,n),off:(e,n)=>t.off(e,n),emit:(e,...n)=>t.emit(e,...n),subscribe(n,r,i=!1){t[i?"once":"on"](`${e}.${n}`,r)},unsubscribe(n,r){t.off(`${e}.${n}`,r)},subscribeHandler(n,r,i){t.emit(`${e}.${n}`,r,i)}}}("view"),{invokeOnCallback:(e,t)=>f.emit("api."+e,t),invokeViewMethod:(e,t,n,r)=>{const{subscribe:i,publishHandler:o}=f,a=r?Zt++:0;r&&i("invokeViewApi."+a,r,!0),o(Kt(),{id:a,name:e,args:t},n)},invokeViewMethodKeepAlive:(e,t,n,r)=>{const{subscribe:i,unsubscribe:o,publishHandler:a}=f,s=Zt++,c="invokeViewApi."+s;return i(c,n),a(Kt(),{id:s,name:e,args:t},r),()=>{o(c)}}});function rn(e){Yt(Vt(),We,e),f.invokeOnCallback("onWindowResize",e)}function on(){const e=Vt(),t={path:"",query:{}};e&&(t.path=e.$page.route,t.query=e.$page.options),Yt(h(),Le,t),Yt(e,Le)}function an(){Yt(h(),Re),Yt(Vt(),Re)}const sn=[qe,Je];function cn(){sn.forEach((e=>f.subscribe(e,function(e){return(t,n)=>{Yt(parseInt(n),e,t)}}(e))))}function ln(){!function(){const e=Object.keys(c.locales||{});if(e.length){const t=St();e.forEach((e=>t.add(e,c.locales[e])))}}(),function(){const{on:e}=f;e(We,rn),e(tt,on),e(nt,an)}(),cn()}function un(e,t){e.route=t.route,e.$vm=e,e.$page=t,e.$mpType="page",t.meta.isTabBar&&(e.__isTabBar=!0,e.$.__isActive=!0)}var dn={__proto__:null,createSelectorQuery:function(){return d.createSelectorQuery().in(this)},createMediaQueryObserver:function(){return d.createMediaQueryObserver(this)},createIntersectionObserver:function(e){return d.createIntersectionObserver(this,e)},selectComponent:function(e){return function(e,t){const n=e.$el.querySelector(t);return n&&n.__vue__}(this,e)},selectAllComponents:function(e){return function(e,t){const n=e.$el.querySelectorAll(t);return n?[...n].map((e=>e.__vue__)).filter(Boolean):[]}(this,e)}};function hn(){}function pn(e){!function(e){const t=e.globalProperties;t.getOpenerEventChannel=hn,g(t,dn)}(e._context.config)}function fn(e){if(0===e.indexOf("//"))return"https:"+e;if(Ne.test(e)||Pe.test(e))return e;if(function(e){if(0===e.indexOf("_www")||0===e.indexOf("_doc")||0===e.indexOf("_documents")||0===e.indexOf("_downloads"))return!0;return!1}(e))return"file://"+gn(e);const t="file://"+gn("_www");if(0===e.indexOf("/"))return e.startsWith("/storage/")||e.startsWith("/sdcard/")||e.includes("/Containers/Data/Application/")?"file://"+e:t+e;if(0===e.indexOf("../")||0===e.indexOf("./")){if("string"==typeof __id__)return t+Jt("/"+__id__,e);{const n=Vt();if(n)return t+Jt("/"+n.route,e)}}return e}const gn=function(e){const t=Object.create(null);return n=>t[n]||(t[n]=e(n))}((e=>t.io.convertLocalFileSystemURL(e).replace(/^\/?apps\//,"/android_asset/apps/").replace(/\/$/,"")));const mn="success",vn="fail",yn=[mn,vn,"complete"];function _n(e,t,n,r){if(!e)return;if(void 0===n)return e[t]();const[,i]=xn(n,r);return Object.keys(i).length?e[t](Sn(t,i)):e[t]()}function bn(e,t,n,r){if(!e)return;const[i,o]=xn(n,r);return Object.keys(o).length?e[t](i,Sn(t,o)):e[t](i)}function wn(e,t){const n=kn(e,t.$el);return n||console.error("Can not find `"+e+"`")}function kn(e,t){if(!e||!t)return;if(t.attr&&t.attr.id===e)return t;const n=t.children;if(n)for(let t=0,r=n.length;t<r;t++){const r=kn(e,n[t]);if(r)return r}}function xn(e={},t){const n=Object.create(null),r=function(t){const r=e[t];_(r)&&(n[t]=r,delete e[t])};return yn.forEach(r),t&&t.forEach(r),[e,n]}function Sn(e,t){return function(n){const r=n.type;delete n.type;const i=t[r];if(r===mn?n.errMsg=`${e}:ok`:r===vn&&(n.errMsg=e+":fail "+(n.msg?" "+n.msg:"")),delete n.code,delete n.msg,_(i)&&i(n),r===mn||r===vn){const e=t.complete;_(e)&&e(n)}}}const Cn={play:e=>_n(e,"play"),pause:e=>_n(e,"pause"),seek:(e,t)=>bn(e,"seek",t.position),stop:e=>_n(e,"stop"),sendDanmu:(e,t)=>bn(e,"sendDanmu",t),playbackRate:(e,t)=>bn(e,"playbackRate",t.rate),requestFullScreen:(e,t={})=>bn(e,"requestFullScreen",t),exitFullScreen:e=>_n(e,"exitFullScreen"),showStatusBar:e=>_n(e,"showStatusBar"),hideStatusBar:e=>_n(e,"hideStatusBar")};function En(e,t,n,r){const i=p().find((e=>e.$page.id===t));if(null==i?void 0:i.$page.meta.isNVue){const t=i.$vm;return Cn[n](wn(e,t),r)}f.invokeViewMethod("video."+e,{videoId:e,type:n,data:r},t)}const In={getCenterLocation:(e,t)=>_n(e,"getCenterLocation",t),moveToLocation:(e,t)=>bn(e,"moveToLocation",t),translateMarker:(e,t)=>bn(e,"translateMarker",t,["animationEnd"]),includePoints:(e,t)=>bn(e,"includePoints",t),getRegion:(e,t)=>_n(e,"getRegion",t),getScale:(e,t)=>_n(e,"getScale",t),addCustomLayer:(e,t)=>bn(e,"addCustomLayer",t),removeCustomLayer:(e,t)=>bn(e,"removeCustomLayer",t),addGroundOverlay:(e,t)=>bn(e,"addGroundOverlay",t),removeGroundOverlay:(e,t)=>bn(e,"removeGroundOverlay",t),updateGroundOverlay:(e,t)=>bn(e,"updateGroundOverlay",t),initMarkerCluster:(e,t)=>bn(e,"initMarkerCluster",t),addMarkers:(e,t)=>bn(e,"addMarkers",t),removeMarkers:(e,t)=>bn(e,"removeMarkers",t),moveAlong:(e,t)=>bn(e,"moveAlong",t),openMapApp:(e,t)=>bn(e,"openMapApp",t)};function Tn(e){return`IntersectionObserver.${e}`}function An(e){return`MediaQueryObserver.${e}`}let On=!1,$n=0,Nn=0;function Pn(e,t){const n=Number(e);return isNaN(n)?t:n}const Mn=he(0,((e,t)=>{if(0===$n&&function(){const{platform:e,pixelRatio:t,windowWidth:n}=me();$n=n,Nn=t,On="ios"===e}(),0===(e=Number(e)))return 0;let n=t||$n;{const e=c.globalStyle||{},t=Pn(e.rpxCalcMaxDeviceWidth,960),r=Pn(e.rpxCalcBaseDeviceWidth,375);n=n<=t?n:r}let r=e/750*n;return r<0&&(r=-r),r=Math.floor(r+1e-4),0===r&&(r=1!==Nn&&On?.5:1),e<0?-r:r}));function Ln(e,t){Object.keys(t).forEach((n=>{_(t[n])&&(e[n]=function(e,t){const n=t?e?e.concat(t):y(t)?t:[t]:e;return n?function(e){const t=[];for(let n=0;n<e.length;n++)-1===t.indexOf(e[n])&&t.push(e[n]);return t}(n):n}(e[n],t[n]))}))}function Rn(e,t){e&&t&&Object.keys(t).forEach((n=>{_(t[n])&&function(e,t){if(!e)return;const n=e.indexOf(t);-1!==n&&e.splice(n,1)}(e[n],t[n])}))}const Bn=he(0,((e,t)=>{"string"==typeof e&&S(t)?Ln(G[e]||(G[e]={}),t):S(e)&&Ln(X,e)})),Dn=he(0,((e,t)=>{"string"==typeof e?S(t)?Rn(G[e],t):delete G[e]:S(e)&&Rn(X,e)})),jn={returnValue:e=>w(e)?new Promise(((t,n)=>{e.then((e=>{e[0]?n(e[0]):t(e[1])}))})):e},Fn=new Lt,Vn=he(0,((e,t)=>(Fn.on(e,t),()=>Fn.off(e,t)))),Un=he(0,((e,t)=>(Fn.once(e,t),()=>Fn.off(e,t)))),zn=he(0,((e,t)=>{e?(Array.isArray(e)||(e=[e]),e.forEach((e=>Fn.off(e,t)))):Fn.e={}})),Wn=he(0,((e,...t)=>{Fn.emit(e,...t)}));[{name:"id",type:String,required:!0}].concat({name:"componentInstance",type:Object});const Hn=[.5,.8,1,1.25,1.5,2];class qn{constructor(e,t){this.id=e,this.pageId=t}play(){En(this.id,this.pageId,"play")}pause(){En(this.id,this.pageId,"pause")}stop(){En(this.id,this.pageId,"stop")}seek(e){En(this.id,this.pageId,"seek",{position:e})}sendDanmu(e){En(this.id,this.pageId,"sendDanmu",e)}playbackRate(e){~Hn.indexOf(e)||(e=1),En(this.id,this.pageId,"playbackRate",{rate:e})}requestFullScreen(e={}){En(this.id,this.pageId,"requestFullScreen",e)}exitFullScreen(){En(this.id,this.pageId,"exitFullScreen")}showStatusBar(){En(this.id,this.pageId,"showStatusBar")}hideStatusBar(){En(this.id,this.pageId,"hideStatusBar")}}const Yn=he(0,((e,t)=>new qn(e,Ft(t||Wt())))),Jn=(e,t,n,r)=>{!function(e,t,n,r,i){const o=p().find((e=>e.$page.id===t));if(null==o?void 0:o.$page.meta.isNVue){const t=o.$vm;return In[n](wn(e,t),r)}f.invokeViewMethod("map."+e,{type:n,data:r},t,i)}(e,t,n,r,(e=>{r&&((e,t)=>{const n=t.errMsg||"";new RegExp("\\:\\s*fail").test(n)?e.fail&&e.fail(t):e.success&&e.success(t),e.complete&&e.complete(t)})(r,e)}))};class Xn{constructor(e,t){this.id=e,this.pageId=t}getCenterLocation(e){Jn(this.id,this.pageId,"getCenterLocation",e)}moveToLocation(e){Jn(this.id,this.pageId,"moveToLocation",e)}getScale(e){Jn(this.id,this.pageId,"getScale",e)}getRegion(e){Jn(this.id,this.pageId,"getRegion",e)}includePoints(e){Jn(this.id,this.pageId,"includePoints",e)}translateMarker(e){Jn(this.id,this.pageId,"translateMarker",e)}$getAppMap(){return t.maps.getMapById(this.pageId+"-map-"+this.id)}addCustomLayer(){}removeCustomLayer(){}addGroundOverlay(){}removeGroundOverlay(){}updateGroundOverlay(){}initMarkerCluster(){}addMarkers(){}removeMarkers(){}moveAlong(){}openMapApp(){}}const Gn=he(0,((e,t)=>new Xn(e,Ft(t||Wt()))));function Zn(e,t){return function(n,r){n?r[e]=Math.round(n):void 0!==t&&(r[e]=t)}}const Kn=Zn("width"),Qn=Zn("height"),er={formatArgs:{x:Zn("x"),y:Zn("y"),width:Kn,height:Qn}},tr={canvasId:{type:String,required:!0},x:{type:Number,required:!0},y:{type:Number,required:!0},width:{type:Number,required:!0},height:{type:Number,required:!0}},nr=er,rr=(Uint8ClampedArray,{PNG:"png",JPG:"jpg",JPEG:"jpg"}),ir={formatArgs:{x:Zn("x",0),y:Zn("y",0),width:Kn,height:Qn,destWidth:Zn("destWidth"),destHeight:Zn("destHeight"),fileType(e,t){e=(e||"").toUpperCase();let n=rr[e];n||(n=rr.PNG),t.fileType=n},quality(e,t){t.quality=e&&e>0&&e<1?e:1}}};function or(e,t,n,r,i){f.invokeViewMethod(`canvas.${e}`,{type:n,data:r},t,(e=>{i&&i(e)}))}var ar=["scale","rotate","translate","setTransform","transform"],sr=["drawImage","fillText","fill","stroke","fillRect","strokeRect","clearRect","strokeText"],cr=["setFillStyle","setTextAlign","setStrokeStyle","setGlobalAlpha","setShadow","setFontSize","setLineCap","setLineJoin","setLineWidth","setMiterLimit","setTextBaseline","setLineDash"];function lr(e,t){const n=document.createElement("canvas").getContext("2d");return n.font=t,n.measureText(e).width||0}const ur={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgrey:"#a9a9a9",darkgreen:"#006400",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",grey:"#808080",green:"#008000",greenyellow:"#adff2f",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgrey:"#d3d3d3",lightgreen:"#90ee90",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",rebeccapurple:"#663399",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32",transparent:"#00000000"};function dr(e){var t=null;if(null!=(t=/^#([0-9|A-F|a-f]{6})$/.exec(e=e||"#000000"))){return[parseInt(t[1].slice(0,2),16),parseInt(t[1].slice(2,4),16),parseInt(t[1].slice(4),16),255]}if(null!=(t=/^#([0-9|A-F|a-f]{3})$/.exec(e))){let e=t[1].slice(0,1),n=t[1].slice(1,2),r=t[1].slice(2,3);return e=parseInt(e+e,16),n=parseInt(n+n,16),r=parseInt(r+r,16),[e,n,r,255]}if(null!=(t=/^rgb\((.+)\)$/.exec(e)))return t[1].split(",").map((function(e){return Math.min(255,parseInt(e.trim()))})).concat(255);if(null!=(t=/^rgba\((.+)\)$/.exec(e)))return t[1].split(",").map((function(e,t){return 3===t?Math.floor(255*parseFloat(e.trim())):Math.min(255,parseInt(e.trim()))}));var n=e.toLowerCase();if(v(ur,n)){t=/^#([0-9|A-F|a-f]{6,8})$/.exec(ur[n]);const e=parseInt(t[1].slice(0,2),16),r=parseInt(t[1].slice(2,4),16),i=parseInt(t[1].slice(4,6),16);let o=parseInt(t[1].slice(6,8),16);return o=o>=0?o:255,[e,r,i,o]}return console.error("unsupported color:"+e),[0,0,0,255]}class hr{constructor(e,t){this.type=e,this.data=t,this.colorStop=[]}addColorStop(e,t){this.colorStop.push([e,dr(t)])}}class pr{constructor(e,t){this.type="pattern",this.data=e,this.colorStop=t}}class fr{constructor(e){this.width=e}}class gr{constructor(e,t){this.id=e,this.pageId=t,this.actions=[],this.path=[],this.subpath=[],this.drawingState=[],this.state={lineDash:[0,0],shadowOffsetX:0,shadowOffsetY:0,shadowBlur:0,shadowColor:[0,0,0,0],font:"10px sans-serif",fontSize:10,fontWeight:"normal",fontStyle:"normal",fontFamily:"sans-serif"}}draw(e=!1,t){var n=[...this.actions];this.actions=[],this.path=[],or(this.id,this.pageId,"actionsChanged",{actions:n,reserve:e},t)}createLinearGradient(e,t,n,r){return new hr("linear",[e,t,n,r])}createCircularGradient(e,t,n){return new hr("radial",[e,t,n])}createPattern(e,t){if(void 0===t)console.error("Failed to execute 'createPattern' on 'CanvasContext': 2 arguments required, but only 1 present.");else{if(!(["repeat","repeat-x","repeat-y","no-repeat"].indexOf(t)<0))return new pr(e,t);console.error("Failed to execute 'createPattern' on 'CanvasContext': The provided type ('"+t+"') is not one of 'repeat', 'no-repeat', 'repeat-x', or 'repeat-y'.")}}measureText(e){const n=this.state.font;let r=0;{const i=t.webview.all().find((e=>e.getURL().endsWith("www/__uniappview.html")));i&&(r=Number(i.evalJSSync(`(${lr.toString()})(${JSON.stringify(e)},${JSON.stringify(n)})`)))}return new fr(r)}save(){this.actions.push({method:"save",data:[]}),this.drawingState.push(this.state)}restore(){this.actions.push({method:"restore",data:[]}),this.state=this.drawingState.pop()||{lineDash:[0,0],shadowOffsetX:0,shadowOffsetY:0,shadowBlur:0,shadowColor:[0,0,0,0],font:"10px sans-serif",fontSize:10,fontWeight:"normal",fontStyle:"normal",fontFamily:"sans-serif"}}beginPath(){this.path=[],this.subpath=[]}moveTo(e,t){this.path.push({method:"moveTo",data:[e,t]}),this.subpath=[[e,t]]}lineTo(e,t){0===this.path.length&&0===this.subpath.length?this.path.push({method:"moveTo",data:[e,t]}):this.path.push({method:"lineTo",data:[e,t]}),this.subpath.push([e,t])}quadraticCurveTo(e,t,n,r){this.path.push({method:"quadraticCurveTo",data:[e,t,n,r]}),this.subpath.push([n,r])}bezierCurveTo(e,t,n,r,i,o){this.path.push({method:"bezierCurveTo",data:[e,t,n,r,i,o]}),this.subpath.push([i,o])}arc(e,t,n,r,i,o=!1){this.path.push({method:"arc",data:[e,t,n,r,i,o]}),this.subpath.push([e,t])}rect(e,t,n,r){this.path.push({method:"rect",data:[e,t,n,r]}),this.subpath=[[e,t]]}arcTo(e,t,n,r,i){this.path.push({method:"arcTo",data:[e,t,n,r,i]}),this.subpath.push([n,r])}clip(){this.actions.push({method:"clip",data:[...this.path]})}closePath(){this.path.push({method:"closePath",data:[]}),this.subpath.length&&(this.subpath=[this.subpath.shift()])}clearActions(){this.actions=[],this.path=[],this.subpath=[]}getActions(){var e=[...this.actions];return this.clearActions(),e}set lineDashOffset(e){this.actions.push({method:"setLineDashOffset",data:[e]})}set globalCompositeOperation(e){this.actions.push({method:"setGlobalCompositeOperation",data:[e]})}set shadowBlur(e){this.actions.push({method:"setShadowBlur",data:[e]})}set shadowColor(e){this.actions.push({method:"setShadowColor",data:[e]})}set shadowOffsetX(e){this.actions.push({method:"setShadowOffsetX",data:[e]})}set shadowOffsetY(e){this.actions.push({method:"setShadowOffsetY",data:[e]})}set font(e){var t=this;this.state.font=e;var n=e.match(/^(([\w\-]+\s)*)(\d+r?px)(\/(\d+\.?\d*(r?px)?))?\s+(.*)/);if(n){var r=n[1].trim().split(/\s/),i=parseFloat(n[3]),o=n[7],a=[];r.forEach((function(e,n){["italic","oblique","normal"].indexOf(e)>-1?(a.push({method:"setFontStyle",data:[e]}),t.state.fontStyle=e):["bold","normal"].indexOf(e)>-1?(a.push({method:"setFontWeight",data:[e]}),t.state.fontWeight=e):0===n?(a.push({method:"setFontStyle",data:["normal"]}),t.state.fontStyle="normal"):1===n&&s()})),1===r.length&&s(),r=a.map((function(e){return e.data[0]})).join(" "),this.state.fontSize=i,this.state.fontFamily=o,this.actions.push({method:"setFont",data:[`${r} ${i}px ${o}`]})}else console.warn("Failed to set 'font' on 'CanvasContext': invalid format.");function s(){a.push({method:"setFontWeight",data:["normal"]}),t.state.fontWeight="normal"}}get font(){return this.state.font}set fillStyle(e){this.setFillStyle(e)}set strokeStyle(e){this.setStrokeStyle(e)}set globalAlpha(e){e=Math.floor(255*parseFloat(e)),this.actions.push({method:"setGlobalAlpha",data:[e]})}set textAlign(e){this.actions.push({method:"setTextAlign",data:[e]})}set lineCap(e){this.actions.push({method:"setLineCap",data:[e]})}set lineJoin(e){this.actions.push({method:"setLineJoin",data:[e]})}set lineWidth(e){this.actions.push({method:"setLineWidth",data:[e]})}set miterLimit(e){this.actions.push({method:"setMiterLimit",data:[e]})}set textBaseline(e){this.actions.push({method:"setTextBaseline",data:[e]})}}const mr=Ae((()=>{[...ar,...sr].forEach((function(e){gr.prototype[e]=function(e){switch(e){case"fill":case"stroke":return function(){this.actions.push({method:e+"Path",data:[...this.path]})};case"fillRect":return function(e,t,n,r){this.actions.push({method:"fillPath",data:[{method:"rect",data:[e,t,n,r]}]})};case"strokeRect":return function(e,t,n,r){this.actions.push({method:"strokePath",data:[{method:"rect",data:[e,t,n,r]}]})};case"fillText":case"strokeText":return function(t,n,r,i){var o=[t.toString(),n,r];"number"==typeof i&&o.push(i),this.actions.push({method:e,data:o})};case"drawImage":return function(t,n,r,i,o,a,s,c,l){var u;function d(e){return"number"==typeof e}void 0===l&&(a=n,s=r,c=i,l=o,n=void 0,r=void 0,i=void 0,o=void 0),u=d(n)&&d(r)&&d(i)&&d(o)?[t,a,s,c,l,n,r,i,o]:d(c)&&d(l)?[t,a,s,c,l]:[t,a,s],this.actions.push({method:e,data:u})};default:return function(...t){this.actions.push({method:e,data:t})}}}(e)})),cr.forEach((function(e){gr.prototype[e]=function(e){switch(e){case"setFillStyle":case"setStrokeStyle":return function(t){"object"!=typeof t?this.actions.push({method:e,data:["normal",dr(t)]}):this.actions.push({method:e,data:[t.type,t.data,t.colorStop]})};case"setGlobalAlpha":return function(t){t=Math.floor(255*parseFloat(t)),this.actions.push({method:e,data:[t]})};case"setShadow":return function(t,n,r,i){i=dr(i),this.actions.push({method:e,data:[t,n,r,i]}),this.state.shadowBlur=r,this.state.shadowColor=i,this.state.shadowOffsetX=t,this.state.shadowOffsetY=n};case"setLineDash":return function(t,n){t=t||[0,0],n=n||0,this.actions.push({method:e,data:[t,n]}),this.state.lineDash=t};case"setFontSize":return function(t){this.state.font=this.state.font.replace(/\d+\.?\d*px/,t+"px"),this.state.fontSize=t,this.actions.push({method:e,data:[t]})};default:return function(...t){this.actions.push({method:e,data:t})}}}(e)}))})),vr=he(0,((e,t)=>{if(mr(),t)return new gr(e,Ft(t));const n=Ft(Wt());if(n)return new gr(e,n);f.emit(De,"createCanvasContext:fail")})),yr=pe("canvasGetImageData",(({canvasId:e,x:t,y:n,width:r,height:i},{resolve:o,reject:a})=>{const s=Ft(Wt());s?or(e,s,"getImageData",{x:t,y:n,width:r,height:i},(function(e){if(e.errMsg&&-1!==e.errMsg.indexOf("fail"))return void a("",e);let t=e.data;t&&t.length&&(e.compressed&&Promise.resolve().then((function(){return ug})).then((n=>{t=n.inflateRaw(t),delete e.compressed,e.data=new Uint8ClampedArray(t),o(e)})),e.data=new Uint8ClampedArray(t)),o(e)})):a()}),0,er),_r=pe("canvasPutImageData",(({canvasId:e,data:n,x:r,y:i,width:o,height:a},{resolve:s,reject:c})=>{var l=Ft(Wt());if(!l)return void c();let u;const d=()=>{or(e,l,"putImageData",{data:n,x:r,y:i,width:o,height:a,compressed:u},(e=>{e.errMsg&&-1!==e.errMsg.indexOf("fail")?c():s(e)}))};if("iOS"!==t.os.name||"boolean"==typeof __WEEX_DEVTOOL__)return Promise.resolve().then((function(){return ug})).then((e=>{n=e.deflateRaw(n,{to:"string"}),u=!0,d()}));n=Array.prototype.slice.call(n),d()}),0,nr),br=pe("canvasToTempFilePath",(({x:e=0,y:t=0,width:n,height:r,destWidth:i,destHeight:o,canvasId:a,fileType:s,quality:c},{resolve:l,reject:u})=>{var d=Ft(Wt());if(!d)return void u();or(a,d,"toTempFilePath",{x:e,y:t,width:n,height:r,destWidth:i,destHeight:o,fileType:s,quality:c,dirname:"/canvas"},(e=>{e.errMsg&&-1!==e.errMsg.indexOf("fail")?u("",e):l(e)}))}),0,ir),wr=["onCanplay","onPlay","onPause","onStop","onEnded","onTimeUpdate","onError","onWaiting","onSeeking","onSeeked"],kr=["offCanplay","offPlay","offPause","offStop","offEnded","offTimeUpdate","offError","offWaiting","offSeeking","offSeeked"],xr={thresholds:[0],initialRatio:0,observeAll:!1},Sr=["top","right","bottom","left"];let Cr=1;function Er(e={}){return Sr.map((t=>`${Number(e[t])||0}px`)).join(" ")}class Ir{constructor(e,t){this._pageId=Ft(e),this._component=e,this._options=g({},xr,t)}relativeTo(e,t){return this._options.relativeToSelector=e,this._options.rootMargin=Er(t),this}relativeToViewport(e){return this._options.relativeToSelector=void 0,this._options.rootMargin=Er(e),this}observe(e,t){_(t)&&(this._options.selector=e,this._reqId=Cr++,function({reqId:e,component:t,options:n,callback:r},i){const o=Tn(e);f.invokeViewMethod("addIntersectionObserver",{reqId:e,component:t.$el.nodeId,options:n,eventName:o},i),f.subscribe(o,r)}({reqId:this._reqId,component:this._component,options:this._options,callback:t},this._pageId))}disconnect(){this._reqId&&function({reqId:e,component:t},n){f.invokeViewMethod("removeIntersectionObserver",{reqId:e,component:t.$el.nodeId},n),f.unsubscribe(Tn(e))}({reqId:this._reqId,component:this._component},this._pageId)}}const Tr=he(0,((e,t)=>(e&&!Ft(e)&&(t=e,e=null),new Ir(e||Wt(),t))));let Ar=1;class Or{constructor(e){this._pageId=e.$page&&e.$page.id,this._component=e}observe(e,t){_(t)&&(this._reqId=Ar++,function({reqId:e,component:t,options:n,callback:r},i){const o=An(e);f.invokeViewMethod("addMediaQueryObserver",{reqId:e,component:t.$el.nodeId,options:n,eventName:o},i),f.subscribe(o,r)}({reqId:this._reqId,component:this._component,options:e,callback:t},this._pageId))}disconnect(){this._reqId&&function({reqId:e,component:t},n){f.invokeViewMethod("removeMediaQueryObserver",{reqId:e,component:t.$el.nodeId},n),f.unsubscribe(An(e))}({reqId:this._reqId,component:this._component},this._pageId)}}const $r=he(0,(e=>(e&&!Ft(e)&&(e=null),new Or(e||Wt()))));let Nr=0,Pr={};const Mr={canvas:gr,map:Xn,video:qn,editor:class{constructor(e,t){this.id=e,this.pageId=t}format(e,t){this._exec("format",{name:e,value:t})}insertDivider(){this._exec("insertDivider")}insertImage(e){this._exec("insertImage",e)}insertText(e){this._exec("insertText",e)}setContents(e){this._exec("setContents",e)}getContents(e){this._exec("getContents",e)}clear(e){this._exec("clear",e)}removeFormat(e){this._exec("removeFormat",e)}undo(e){this._exec("undo",e)}redo(e){this._exec("redo",e)}blur(e){this._exec("blur",e)}getSelectionText(e){this._exec("getSelectionText",e)}scrollIntoView(e){this._exec("scrollIntoView",e)}_exec(e,t){!function(e,t,n,r){const i={options:r},o=r&&("success"in r||"fail"in r||"complete"in r);if(o){const e=String(Nr++);i.callbackId=e,Pr[e]=r}f.invokeViewMethod(`editor.${e}`,{type:n,data:i},t,(({callbackId:e,data:t})=>{o&&(Oe(Pr[e],t),delete Pr[e])}))}(this.id,this.pageId,e,t)}}};function Lr(e){if(e&&e.contextInfo){const{id:t,type:n,page:r}=e.contextInfo,i=Mr[n];e.context=new i(t,r),delete e.contextInfo}}class Rr{constructor(e,t,n,r){this._selectorQuery=e,this._component=t,this._selector=n,this._single=r}boundingClientRect(e){return this._selectorQuery._push(this._selector,this._component,this._single,{id:!0,dataset:!0,rect:!0,size:!0},e),this._selectorQuery}fields(e,t){return this._selectorQuery._push(this._selector,this._component,this._single,e,t),this._selectorQuery}scrollOffset(e){return this._selectorQuery._push(this._selector,this._component,this._single,{id:!0,dataset:!0,scrollOffset:!0},e),this._selectorQuery}context(e){return this._selectorQuery._push(this._selector,this._component,this._single,{context:!0},e),this._selectorQuery}}class Br{constructor(e){this._component=void 0,this._page=e,this._queue=[],this._queueCb=[]}exec(e){return function(e,t,n){f.invokeViewMethod("requestComponentInfo",{reqs:t.map((e=>(e.component&&(e.component=e.component.$el.nodeId),e)))},e.$page.id,n)}(this._page,this._queue,(t=>{const n=this._queueCb;t.forEach(((e,t)=>{Array.isArray(e)?e.forEach(Lr):Lr(e);const r=n[t];"function"==typeof r&&r.call(this,e)})),"function"==typeof e&&e.call(this,t)})),this._nodesRef}in(e){return this._component=e||void 0,this}select(e){return this._nodesRef=new Rr(this,this._component,e,!0)}selectAll(e){return this._nodesRef=new Rr(this,this._component,e,!1)}selectViewport(){return this._nodesRef=new Rr(this,null,"",!0)}_push(e,t,n,r,i){this._queue.push({component:t,selector:e,single:n,fields:r}),this._queueCb.push(i)}}const Dr=he(0,(e=>(e&&!Ft(e)&&(e=null),new Br(e||Wt())))),jr={duration:400,timingFunction:"linear",delay:0,transformOrigin:"50% 50% 0"};class Fr{constructor(e){this.actions=[],this.currentTransform={},this.currentStepAnimates=[],this.option=g({},jr,e)}_getOption(e){const t={transition:g({},this.option,e),transformOrigin:""};return t.transformOrigin=t.transition.transformOrigin,delete t.transition.transformOrigin,t}_pushAnimates(e,t){this.currentStepAnimates.push({type:e,args:t})}_converType(e){return e.replace(/[A-Z]/g,(e=>`-${e.toLowerCase()}`))}_getValue(e){return"number"==typeof e?`${e}px`:e}export(){const e=this.actions;return this.actions=[],{actions:e}}step(e){return this.currentStepAnimates.forEach((e=>{"style"!==e.type?this.currentTransform[e.type]=e:this.currentTransform[`${e.type}.${e.args[0]}`]=e})),this.actions.push({animates:Object.values(this.currentTransform),option:this._getOption(e)}),this.currentStepAnimates=[],this}}const Vr=Ae((()=>{const e=["opacity","backgroundColor"],t=["width","height","left","right","top","bottom"];["matrix","matrix3d","rotate","rotate3d","rotateX","rotateY","rotateZ","scale","scale3d","scaleX","scaleY","scaleZ","skew","skewX","skewY","translate","translate3d","translateX","translateY","translateZ"].concat(e,t).forEach((n=>{Fr.prototype[n]=function(...r){return e.concat(t).includes(n)?this._pushAnimates("style",[this._converType(n),t.includes(n)?this._getValue(r[0]):r[0]]):this._pushAnimates(n,r),this}}))})),Ur=he(0,(e=>(Vr(),new Fr(e))),0,{formatArgs:{}}),zr=le("onTabBarMidButtonTap",(()=>{})),Wr=le("onWindowResize",(()=>{})),Hr=ue("offWindowResize",(()=>{})),qr="setLocale",Yr="onLocaleChange",Jr=he(0,(()=>{const e=h({allowDefault:!0});return e&&e.$vm?e.$vm.$locale:St().getLocale()})),Xr=le(Yr,(()=>{})),Gr=he(0,(t=>{const n=h();if(!n)return!1;if(n.$vm.$locale!==t){n.$vm.$locale=t;p().forEach((e=>{f.publishHandler(qr,t,e.$page.id)})),e.requireModule("plus").setLanguage(t);return f.invokeOnCallback(Yr,{locale:t}),!0}return!1})),Zr=pe("getSelectedTextRange",((e,{resolve:t,reject:n})=>{f.invokeViewMethod("getSelectedTextRange",{},zt(),(e=>{void 0===e.end&&void 0===e.start?n("no focused"):t(e)}))})),Kr=[];const Qr="onAccelerometer",ei="onCompass",ti="onBluetoothDeviceFound",ni="onBluetoothAdapterStateChange",ri="onBLEConnectionStateChange",ii="onBLECharacteristicValueChange",oi="onBeaconUpdate",ai="onBeaconServiceChange",si=["fingerPrint","facial","speech"],ci={formatArgs:{checkAuthMode(e,t){if(!e||!si.includes(e))return"checkAuthMode 填写错误"}}},li={formatArgs:{requestAuthModes(e,t){if(!e.includes("fingerPrint")&&!e.includes("facial"))return"requestAuthModes 填写错误"}}},ui="removeStorage",di={formatArgs:{tempFilePath(e,t){t.tempFilePath=fn(e)}}},hi={formatArgs:{filePath(e,t){t.filePath=fn(e)}}},pi={formatArgs:{filePath(e,t){t.filePath=fn(e)}}},fi=["WGS84","GCJ02"],gi={formatArgs:{type(e,t){e=(e||"").toUpperCase(),-1===fi.indexOf(e)?t.type=fi[0]:t.type=e},altitude(e,t){t.altitude=e||!1}}},mi=(Boolean,{formatArgs:{scale(e,t){e=Math.floor(e),t.scale=e>=5&&e<=18?e:18}}}),vi={formatArgs:{count(e,t){(!e||e<=0)&&(t.count=9)},sizeType(e,t){t.sizeType=L(e,$)},sourceType(e,t){t.sourceType=L(e,N)},extension(e,t){if(e instanceof Array&&0===e.length)return"param extension should not be empty.";e||(t.extension=[""])}}},yi={formatArgs:{sourceType(e,t){t.sourceType=L(e,N)},compressed:!0,maxDuration:60,camera:"back",extension(e,t){if(e instanceof Array&&0===e.length)return"param extension should not be empty.";e||(t.extension=[""])}}},_i=(Boolean,{formatArgs:{src(e,t){t.src=fn(e)}}}),bi={formatArgs:{urls(e,t){t.urls=e.map((e=>"string"==typeof e&&e?fn(e):""))},current(e,t){"number"==typeof e?t.current=e>0&&e<t.urls.length?e:0:"string"==typeof e&&e&&(t.current=fn(e))}}},wi={formatArgs:{src(e,t){t.src=fn(e)}}},ki={formatArgs:{filePath(e,t){t.filePath=fn(e)}}},xi={formatArgs:{filePath(e,t){t.filePath=fn(e)}}},Si={formatArgs:{src(e,t){t.src=fn(e)}}},Ci={formatArgs:{src(e,t){t.src=fn(e)}}},Ei="json",Ii=["text","arraybuffer"],Ti=encodeURIComponent;ArrayBuffer,Boolean;const Ai={formatArgs:{method(e,t){t.method=M((e||"").toUpperCase(),P)},data(e,t){t.data=e||""},url(e,t){t.method===P[0]&&S(t.data)&&Object.keys(t.data).length&&(t.url=function(e,t){let n=e.split("#");const r=n[1]||"";n=n[0].split("?");let i=n[1]||"";e=n[0];const o=i.split("&").filter((e=>e)),a={};o.forEach((e=>{const t=e.split("=");a[t[0]]=t[1]}));for(const e in t)if(v(t,e)){let n=t[e];null==n?n="":S(n)&&(n=JSON.stringify(n)),a[Ti(e)]=Ti(n)}return i=Object.keys(a).map((e=>`${e}=${a[e]}`)).join("&"),e+(i?"?"+i:"")+(r?"#"+r:"")}(e,t.data))},header(e,t){const n=t.header=e||{};t.method!==P[0]&&(Object.keys(n).find((e=>"content-type"===e.toLowerCase()))||(n["Content-Type"]="application/json"))},dataType(e,t){t.dataType=(e||Ei).toLowerCase()},responseType(e,t){t.responseType=(e||"").toLowerCase(),-1===Ii.indexOf(t.responseType)&&(t.responseType="text")}}},Oi={formatArgs:{certificates(e){if(e.some((e=>"String"!==(e=>x(e).slice(8,-1))(e.host))))return"参数配置错误，请确认后重试"}}},$i={formatArgs:{header(e,t){t.header=e||{}}}},Ni={formatArgs:{filePath(e,t){e&&(t.filePath=fn(e))},header(e,t){t.header=e||{}},formData(e,t){t.formData=e||{}}}},Pi={formatArgs:{header(e,t){t.header=e||{}},method(e,t){t.method=M((e||"").toUpperCase(),P)},protocols(e,t){"string"==typeof e&&(t.protocols=[e])}}};const Mi={url:{type:String,required:!0}},Li="navigateTo",Ri="redirectTo",Bi="reLaunch",Di="switchTab",ji="preloadPage",Fi="unPreloadPage",Vi=(qi(["slide-in-right","slide-in-left","slide-in-top","slide-in-bottom","fade-in","zoom-out","zoom-fade-out","pop-in","none"]),qi(["slide-out-right","slide-out-left","slide-out-top","slide-out-bottom","fade-out","zoom-in","zoom-fade-in","pop-out","none"]),Xi(Li)),Ui=Xi(Ri),zi=Xi(Bi),Wi=Xi(Di),Hi={formatArgs:{delta(e,t){e=parseInt(e+"")||1,t.delta=Math.min(p().length-1,e)}}};function qi(e){return{animationType:{type:String,validator(t){if(t&&-1===e.indexOf(t))return"`"+t+"` is not supported for `animationType` (supported values are: `"+e.join("`|`")+"`)"}},animationDuration:{type:Number}}}let Yi;function Ji(){Yi=""}function Xi(e){return{formatArgs:{url:Gi(e)},beforeAll:Ji}}function Gi(e){return function(t,n){if(!t)return'Missing required args: "url"';const r=(t=function(e){if(0===e.indexOf("/"))return e;let t="";const n=p();return n.length&&(t=n[n.length-1].$page.route),Jt(t,e)}(t)).split("?")[0],i=Xt(r,!0);if(!i)return"page `"+t+"` is not found";if(e===Li||e===Ri){if(i.meta.isTabBar)return`can not ${e} a tabbar page`}else if(e===Di&&!i.meta.isTabBar)return"can not switch to no-tabBar page";if(e!==Di&&e!==ji||!i.meta.isTabBar||"appLaunch"===n.openType||(t=r),i.meta.isEntry&&(t=t.replace(i.alias,"/")),n.url=function(e){if("string"!=typeof e)return e;const t=e.indexOf("?");if(-1===t)return e;const n=e.substr(t+1).trim().replace(/^(\?|#|&)/,"");if(!n)return e;e=e.substr(0,t);const r=[];return n.split("&").forEach((e=>{const t=e.replace(/\+/g," ").split("="),n=t.shift(),i=t.length>0?t.join("="):"";r.push(n+"="+encodeURIComponent(i))})),r.length?e+"?"+r.join("&"):e}(t),e!==Fi)if(e!==ji){if(Yi===t&&"appLaunch"!==n.openType)return`${Yi} locked`;c.ready&&(Yi=t)}else{if(!i.meta.isNVue)return"can not preload vue page";if(i.meta.isTabBar){const e=p(),t=i.path.substr(1);if(e.find((e=>e.route===t)))return"tabBar page `"+t+"` already exists"}}}}const Zi="loadFontFace",Ki={formatArgs:{animation(e,t){e||(e={duration:0,timingFunc:"linear"}),t.animation={duration:e.duration||0,timingFunc:e.timingFunc||"linear"}}}},Qi="pageScrollTo",eo={formatArgs:{duration(e,t){t.duration=Math.max(0,parseInt(e+"")||300)}}},to=(Boolean,Boolean,{beforeInvoke(){Tt()},formatArgs:{title:"",content:"",showCancel:!0,cancelText(e,t){if(!v(t,"cancelText")){const{t:e}=St();t.cancelText=e("uni.showModal.cancel")}},cancelColor:"#000",confirmText(e,t){if(!v(t,"confirmText")){const{t:e}=St();t.confirmText=e("uni.showModal.confirm")}},confirmColor:"#007aff"}}),no=["success","loading","none","error"],ro=(Boolean,{formatArgs:{title:"",icon(e,t){t.icon=M(e,no)},image(e,t){t.image=e?fn(e):""},duration:1500,mask:!1}}),io={beforeInvoke(){const e=Ut();if(e&&!e.isTabBar)return"not TabBar page"},formatArgs:{index(e){if(!c.tabBar.list[e])return"tabbar item not found"}}},oo={beforeInvoke:io.beforeInvoke,formatArgs:g({pagePath(e,t){var n;e&&(t.pagePath=0===(n=e).indexOf("/")?n.substr(1):n)}},io.formatArgs)},ao=/^(linear|radial)-gradient\(.+?\);?$/,so={beforeInvoke:io.beforeInvoke,formatArgs:{backgroundImage(e,t){e&&!ao.test(e)&&(t.backgroundImage=fn(e))},borderStyle(e,t){e&&(t.borderStyle="white"===e?"white":"black")}}},co=io,lo=io,uo=io,ho={beforeInvoke:io.beforeInvoke,formatArgs:g({text(e,t){(function(e=""){return(""+e).replace(/[^\x00-\xff]/g,"**").length})(e)>=4&&(t.text="...")}},io.formatArgs)},po={UNIVERIFY:"univerify"},fo={formatArgs:{provider(e,t){if(Object.values(po).indexOf(String(e))<0)return"provider error"}}},go=["WXSceneSession","WXSenceTimeline","WXSceneFavorite"],mo={formatArgs:{scene(e,t){if(!("weixin"!==t.provider||e&&go.includes(e)))return`分享到微信时，scene必须为以下其中一个：${go.join("、")}`},summary(e,t){if(1===t.type&&!e)return"分享纯文本时，summary必填"},href(e,t){if(0===t.type&&!e)return"分享图文时，href必填"},imageUrl(e,t){if([0,2,5].includes(Number(t.type))&&!e)return"分享图文、纯图片、小程序时，imageUrl必填，推荐使用小于20Kb的图片"},mediaUrl(e,t){if([3,4].includes(Number(t.type))&&!e)return"分享音乐、视频时，mediaUrl必填"},miniProgram(e,t){if(5===t.type&&!e)return"分享小程序时，miniProgram必填"}}},vo=["text","image"],yo={formatArgs:{type(e,t){if(e&&!vo.includes(e))return"分享参数 type 不正确。只支持text、image";t.type=M(e,vo)}}},_o={formatArgs:{adpid(e,t){if(!e)return"adpid should not be empty.";e&&(t.adpid=e)},provider(e,t){if(!e)return"provider should not be empty.";e&&(t.provider=e)}}};function bo(e,t){return function(n){delete n.code,delete n.message,"function"==typeof t&&(n=t(n)),e(n)}}function wo(e,t){return function(n){t=(n=n||{}).message||t||"",delete n.message,e(t,g({code:0},n))}}function ko(e,t){return function(){e()((function(e){e&&(delete e.code,delete e.message),f.invokeOnCallback(t,e)}))}}function xo(e,t,n){return function(r,{resolve:i,reject:o}){e()(g({},"function"==typeof t?t(r):r,{success:bo(i,n),fail:wo(o)}))}}function So(e=""){if(!c.tabBar||!Array.isArray(c.tabBar.list))return!1;try{if(!e){const e=p();if(!e.length)return!1;const t=e[e.length-1];return!!t&&t.$page.meta.isTabBar}/^\//.test(e)||(e="/"+e);const t=Xt(e);return t&&t.meta.isTabBar}catch(e){}return!1}const Co="__TYPE";function Eo(e){const t=["object","string","number","boolean","undefined"];try{const n="string"==typeof e?JSON.parse(e):e,r=n.type;if(t.indexOf(r)>=0){const e=Object.keys(n);if(2===e.length&&"data"in n){if(typeof n.data===r)return n.data;if("object"===r&&/^\d{4}-\d{2}-\d{2}T\d{2}\:\d{2}\:\d{2}\.\d{3}Z$/.test(n.data))return new Date(n.data)}else if(1===e.length)return""}}catch(e){}}const Io=he(0,((e,n)=>{const r=typeof n,i="string"===r?n:JSON.stringify({type:r,data:n});try{"string"===r&&void 0!==Eo(i)?t.storage.setItem(e+Co,r):t.storage.removeItem(e+Co),t.storage.setItem(e,i)}catch(e){}})),To=pe("setStorage",(({key:e,data:n},{resolve:r,reject:i})=>{const o=typeof n,a="string"===o?n:JSON.stringify({type:o,data:n});try{const n=t.storage;"string"===o&&void 0!==Eo(a)?n.setItemAsync(e+Co,o):n.removeItemAsync(e+Co),n.setItemAsync(e,a,r,wo(i))}catch(e){i(e.message)}}));function Ao(e,t){let n=t;if("string"!==e||"string"===e&&'{"type":"undefined"}'===t)try{let r=JSON.parse(t);const i=Eo(r);if(void 0!==i)n=i;else if(e&&(n=r,"string"==typeof r)){r=JSON.parse(r);const t=typeof r;"number"===t&&"date"===e?n=new Date(r):t===(["null","array"].indexOf(e)<0?e:"object")&&(n=r)}}catch(e){}return n}const Oo=he(0,((e,n)=>{const r=t.storage.getItem(e),i=(t.storage.getItem(e+Co)||"").toLowerCase();return"string"!=typeof r?"":Ao(i,r)})),$o=pe("getStorage",(({key:e},{resolve:n,reject:r})=>{const i=t.storage;i.getItemAsync(e,(function(t){i.getItemAsync(e+Co,(function(e){const r=(e.data||"").toLowerCase();n({data:Ao(r,t.data)})}),(function(){n({data:Ao("",t.data)})}))}),wo(r))})),No=he(0,(e=>{t.storage.removeItem(e+Co),t.storage.removeItem(e)})),Po=pe(ui,(({key:e},{resolve:n,reject:r})=>{t.storage.removeItemAsync(e+Co),t.storage.removeItemAsync(e,n,wo(r))})),Mo=he(0,(()=>{t.storage.clear()})),Lo=pe("clearStorage",((e,{resolve:n,reject:r})=>{t.storage.clearAsync(n,wo(r))})),Ro=he(0,(()=>{const e=t.storage.getLength()||0,n=[];let r=0;for(let i=0;i<e;i++){const e=t.storage.key(i);if("uni-storage-keys"!==e&&(e.indexOf(Co)<0||e.indexOf(Co)+Co.length!==e.length)){const i=t.storage.getItem(e);r+=e.length+i.length,n.push(e)}}return{keys:n,currentSize:Math.ceil(2*r/1024),limitSize:Number.MAX_VALUE}})),Bo=pe("getStorageInfo",((e,{resolve:t})=>{t(Ro())})),Do=pe("getFileInfo",((e,{resolve:n,reject:r})=>{t.io.getFileInfo(g(e,{success:bo(n),fail:wo(r)}))}),0,hi),jo=pe("openDocument",(({filePath:e,fileType:n},{resolve:r,reject:i})=>{const o=wo(i);t.runtime.openDocument(fn(e),void 0,r,o)}),0,pi);function Fo(e){const t=e.split("/");return t[t.length-1]}let Vo=0;const Uo="uniapp_save";const zo=pe("saveFile",(({tempFilePath:e},{resolve:n,reject:r})=>{const i=wo(r),o=`${Date.now()}${Vo++}${function(e){const t=e.split(".");return t.length>1?"."+t[t.length-1]:""}(e)}`;t.io.resolveLocalFileSystemURL(e,(e=>{var r,a;r=t=>{e.copyTo(t,o,(()=>{n({savedFilePath:"_doc/uniapp_save/"+o})}),i)},a=(a=i)||function(){},t.io.requestFileSystem(t.io.PRIVATE_DOC,(e=>{e.root.getDirectory(Uo,{create:!0},r,a)}),a)}),i)}),0,di),Wo="iOS"===t.os.name;let Ho,qo,Yo=!0;const Jo=[];var Xo={id:"0",init(t,n){t&&t.list.length&&(Ho=t);try{qo=e.requireModule("uni-tabview")}catch(e){console.log(`uni.requireNativePlugin("uni-tabview") error ${e}`)}qo.onMaskClick((()=>{Jo.forEach((e=>{e()}))})),qo&&qo.onClick((({index:e})=>{n(Ho.list[e],e)})),qo&&qo.onMidButtonClick((()=>{}))},indexOf(e){const t=Ho&&Ho.list&&Ho.list.length;if(t)for(let n=0;n<t;n++)if(Ho.list[n].pagePath===e||Ho.list[n].pagePath===`${e}.html`)return n;return-1},switchTab(e){const t=this.indexOf(e);return t>=0&&(qo&&qo.switchSelect({index:t}),!0)},setTabBarBadge:function(e,t,n){qo&&("none"===e?(qo.hideTabBarRedDot({index:t}),qo.removeTabBarBadge({index:t})):"text"===e?qo.setTabBarBadge({index:t,text:n}):"redDot"===e&&qo.showTabBarRedDot({index:t}))},setTabBarItem:function(e,t,n,r){const i={index:e};void 0!==t&&(i.text=t),n&&(i.iconPath=fn(n)),r&&(i.selectedIconPath=fn(r)),qo&&qo.setTabBarItem(i)},setTabBarStyle:function(e){qo&&qo.setTabBarStyle(e)},hideTabBar:function(e){Yo=!1,qo&&qo.hideTabBar({animation:e})},showTabBar:function(e){Yo=!0,qo&&qo.showTabBar({animation:e})},append(e){qo&&qo.append({id:e.id},(({code:t})=>{0!==t&&i((()=>{this.append(e)}),20)}))},get visible(){return Yo},get height(){return(Ho&&Ho.height?parseFloat(Ho.height):50)+t.navigator.getSafeAreaInsets().deviceBottom},get cover(){return Wo&&["extralight","light","dark"].indexOf(Ho.blurEffect)>=0},setStyle({mask:e}){qo.setMask({color:e})},addEventListener(e,t){Jo.push(t)},removeEventListener(e,t){const n=Jo.indexOf(t);Jo.splice(n,1)}};function Go(){const e=Vt();return e?e.$getAppWebview():null}function Zo(e){return e?e.$getAppWebview():Go()}let Ko,Qo=null;function ea(){return Qo}function ta(e){Qo=e}function na(e=""){if(!c.tabBar||!Array.isArray(c.tabBar.list))return!1;try{if(!e){const e=p();if(!e.length)return!1;const t=e[e.length-1];return!!t&&t.$page.meta.isTabBar}/^\//.test(e)||(e="/"+e);const t=l.find((t=>t.path===e));return t&&t.meta.isTabBar}catch(e){}return!1}function ra(){return t.navigator.isImmersedStatusbar()?Math.round("iOS"===t.os.name?t.navigator.getSafeAreaInsets().top:t.navigator.getStatusbarHeight()):0}function ia(){let e=t.navigator.getStatusBarStyle();return"UIStatusBarStyleBlackTranslucent"===e||"UIStatusBarStyleBlackOpaque"===e||"null"===e?e="light":"UIStatusBarStyleDefault"===e&&(e="dark"),e}const oa=he(0,(()=>{const e=t.os.name.toLowerCase(),n="ios"===e,r="android"===e,{screenWidth:i,screenHeight:o}=function(){const{resolutionWidth:e,resolutionHeight:n}=t.screen.getCurrentSize();return{screenWidth:Math.round(e),screenHeight:Math.round(n)}}(),a=ra();let s;const c={height:0,cover:!1},l=Go();if(l){const e=l.getStyle(),t=e&&e.titleNView;t&&t.type&&"none"!==t.type&&(c.height="transparent"===t.type?0:a+44,c.cover="transparent"===t.type||"float"===t.type),s=l.getSafeAreaInsets()}else s=t.navigator.getSafeAreaInsets();const u={height:0,cover:!1};So()&&(u.height=Xo.visible?Xo.height:0,u.cover=Xo.cover);const d=c.cover?c.height:0,h=u.cover?u.height:0;let p=o-c.height-u.height,f=o-(c.cover?0:c.height)-(u.cover?0:u.height);const g=i;u.height&&!u.cover||s.bottom||!s.deviceBottom||(p-=s.deviceBottom,f-=s.deviceBottom),s=n?s:{left:0,right:0,top:c.height&&!c.cover?0:a,bottom:0};const m={left:s.left,right:g-s.right,top:s.top,bottom:f-s.bottom,width:g-s.left-s.right,height:f-s.top-s.bottom};return{brand:t.device.vendor,model:t.device.model,pixelRatio:t.screen.scale,screenWidth:i,screenHeight:o,windowWidth:g,windowHeight:p,statusBarHeight:a,language:t.os.language,system:`${n?"iOS":r?"Android":""} ${t.os.version}`,version:t.runtime.innerVersion,platform:e,SDKVersion:"",windowTop:d,windowBottom:h,safeArea:m,safeAreaInsets:{top:s.top,right:s.right,bottom:s.bottom,left:s.left},deviceId:(Ko=Ko||t.runtime.getDCloudId(),Ko)}})),aa=pe("getSystemInfo",((e,{resolve:t})=>t(oa()))),sa=200,ca=["unknown","none","ethernet","wifi","2g","3g","4g","5g"],la="_doc/uniapp_temp",ua=`_doc/uniapp_temp_${Date.now()}`;let da=null;const ha=le(ei,(()=>{fa()})),pa=ue("offCompass",(()=>{ga()})),fa=pe("startCompass",((e,{resolve:n,reject:r})=>{da||(da=t.orientation.watchOrientation((e=>{f.invokeOnCallback(ei,{direction:e.magneticHeading})}),(e=>{r(e.message),da=null}),{frequency:sa})),i(n,sa)})),ga=pe("stopCompass",((e,{resolve:n})=>{da&&(t.orientation.clearWatch(da),da=null),n()})),ma=pe("vibrateShort",((e,{resolve:n})=>{t.device.vibrate(15),n()})),va=pe("vibrateLong",((e,{resolve:n})=>{t.device.vibrate(400),n()}));let ya=null;const _a=le(Qr,(()=>{wa()})),ba=ue("offAccelerometer",(()=>{ka()})),wa=pe("startAccelerometer",((e,{resolve:n,reject:r})=>{ya||(ya=t.accelerometer.watchAcceleration((e=>{f.invokeOnCallback(Qr,{x:e&&e.xAxis||0,y:e&&e.yAxis||0,z:e&&e.zAxis||0})}),(e=>{ya=null,r(`startAccelerometer:fail ${e.message}`)}),{frequency:sa})),i(n,sa)})),ka=pe("stopAccelerometer",((e,{resolve:n})=>{ya&&(t.accelerometer.clearWatch(ya),ya=null),n()})),xa=le(ti,ko((()=>t.bluetooth.onBluetoothDeviceFound.bind(t.bluetooth)),ti)),Sa=le(ni,ko((()=>t.bluetooth.onBluetoothAdapterStateChange.bind(t.bluetooth)),ni)),Ca=le(ri,ko((()=>t.bluetooth.onBLEConnectionStateChange.bind(t.bluetooth)),ri)),Ea=le(ii,ko((()=>t.bluetooth.onBLECharacteristicValueChange.bind(t.bluetooth)),ii)),Ia=pe("openBluetoothAdapter",xo((()=>t.bluetooth.openBluetoothAdapter.bind(t.bluetooth)))),Ta=pe("closeBluetoothAdapter",xo((()=>t.bluetooth.closeBluetoothAdapter.bind(t.bluetooth)))),Aa=pe("getBluetoothAdapterState",xo((()=>t.bluetooth.getBluetoothAdapterState))),Oa=pe("startBluetoothDevicesDiscovery",xo((()=>t.bluetooth.startBluetoothDevicesDiscovery.bind(t.bluetooth)))),$a=pe("stopBluetoothDevicesDiscovery",xo((()=>t.bluetooth.stopBluetoothDevicesDiscovery.bind(t.bluetooth)))),Na=pe("getBluetoothDevices",xo((()=>t.bluetooth.getBluetoothDevices.bind(t.bluetooth)))),Pa=pe("getConnectedBluetoothDevices",xo((()=>t.bluetooth.getConnectedBluetoothDevices))),Ma=pe("createBLEConnection",xo((()=>t.bluetooth.createBLEConnection.bind(t.bluetooth)))),La=pe("closeBLEConnection",xo((()=>t.bluetooth.closeBLEConnection.bind(t.bluetooth)))),Ra=pe("getBLEDeviceServices",xo((()=>t.bluetooth.getBLEDeviceServices.bind(t.bluetooth)))),Ba=pe("getBLEDeviceCharacteristics",xo((()=>t.bluetooth.getBLEDeviceCharacteristics.bind(t.bluetooth)))),Da=pe("notifyBLECharacteristicValueChange",xo((()=>t.bluetooth.notifyBLECharacteristicValueChange.bind(t.bluetooth)))),ja=pe("readBLECharacteristicValue",xo((()=>t.bluetooth.readBLECharacteristicValue.bind(t.bluetooth)))),Fa=pe("writeBLECharacteristicValue",xo((()=>t.bluetooth.writeBLECharacteristicValue.bind(t.bluetooth)))),Va=pe("setBLEMTU",xo((()=>t.bluetooth.setBLEMTU.bind(t.bluetooth)))),Ua=pe("getBLEDeviceRSSI",xo((()=>t.bluetooth.getBLEDeviceRSSI.bind(t.bluetooth)))),za=le(oi,ko((()=>t.ibeacon.onBeaconUpdate.bind(t.ibeacon)),oi)),Wa=le(ai,ko((()=>t.ibeacon.onBeaconServiceChange.bind(t.ibeacon)),ai)),Ha=pe("getBeacons",xo((()=>t.ibeacon.getBeacons.bind(t.ibeacon)))),qa=pe("startBeaconDiscovery",xo((()=>t.ibeacon.startBeaconDiscovery.bind(t.ibeacon)))),Ya=pe("stopBeaconDiscovery",xo((()=>t.ibeacon.stopBeaconDiscovery.bind(t.ibeacon)))),Ja=pe("makePhoneCall",(({phoneNumber:e},{resolve:n})=>(t.device.dial(e),n()))),Xa=pe("addPhoneContact",(({photoFilePath:e="",nickName:n,lastName:r,middleName:i,firstName:o,remark:a,mobilePhoneNumber:s,weChatNumber:c,addressCountry:l,addressState:u,addressCity:d,addressStreet:h,addressPostalCode:p,organization:f,title:g,workFaxNumber:m,workPhoneNumber:v,hostNumber:y,email:_,url:b,workAddressCountry:w,workAddressState:k,workAddressCity:x,workAddressStreet:S,workAddressPostalCode:C,homeFaxNumber:E,homePhoneNumber:I,homeAddressCountry:T,homeAddressState:A,homeAddressCity:O,homeAddressStreet:$,homeAddressPostalCode:N},{resolve:P,reject:M})=>{t.contacts.getAddressBook(t.contacts.ADDRESSBOOK_PHONE,(t=>{const f=t.create(),g={};r&&(g.familyName=r),o&&(g.givenName=o),i&&(g.middleName=i),f.name=g,n&&(f.nickname=n),e&&(f.photos=[{type:"url",value:e}]),a&&(f.note=a);const I={type:"mobile"},L={type:"work"},R={type:"company"},B={type:"home fax"},D={type:"work fax"};s&&(I.value=s),v&&(L.value=v),y&&(R.value=y),E&&(B.value=E),m&&(D.value=m),f.phoneNumbers=[I,L,R,B,D],_&&(f.emails=[{type:"home",value:_}]),b&&(f.urls=[{type:"other",value:b}]),c&&(f.ims=[{type:"other",value:c}]);const j={type:"other",preferred:!0},F={type:"home"},V={type:"company"};l&&(j.country=l),u&&(j.region=u),d&&(j.locality=d),h&&(j.streetAddress=h),p&&(j.postalCode=p),T&&(F.country=T),A&&(F.region=A),O&&(F.locality=O),$&&(F.streetAddress=$),N&&(F.postalCode=N),w&&(V.country=w),k&&(V.region=k),x&&(V.locality=x),S&&(V.streetAddress=S),C&&(V.postalCode=C),f.addresses=[j,F,V],f.save((()=>{P({errMsg:"addPhoneContact:ok"})}),(e=>{M("addPhoneContact:fail")}))}),(e=>{M("addPhoneContact:fail")}))}));function Ga(t){return void 0!==e?e.requireModule(t):__requireNativePlugin__(t)}const Za=pe("getClipboardData",((e,{resolve:t,reject:n})=>{Ga("clipboard").getString((e=>{"success"===e.result?t({data:e.data}):n("getClipboardData:fail")}))})),Ka=pe("setClipboardData",((e,{resolve:t})=>{Ga("clipboard").setString(e.data),t()})),Qa="onNetworkStatusChange";function es(){rs().then((({networkType:e})=>{f.invokeOnCallback(Qa,{isConnected:"none"!==e,networkType:e})}))}const ts=le(Qa,(()=>{t.globalEvent.addEventListener("netchange",es)})),ns=ue("offNetworkStatusChange",(()=>{t.globalEvent.removeEventListener("netchange",es)})),rs=pe("getNetworkType",((e,{resolve:n})=>n({networkType:ca[t.networkinfo.getCurrentType()]||"unknown"})));function is(){if("ios"!==t.os.name.toLowerCase())return!1;const e=Ga("faceID");return!(!e||!e.isSupport())}function os(){return!(!t.fingerprint||!t.fingerprint.isSupport())}const as=e=>{const t=[];return os()&&t.push("fingerPrint"),is()&&t.push("facial"),e&&e({supportMode:t}),{supportMode:t,errMsg:"checkIsSupportSoterAuthentication:ok"}},ss=pe("soterAuthentication",((e,{resolve:t,reject:n})=>{as(t)})),cs=({checkAuthMode:e,resolve:n,reject:r})=>{const i=(e,t)=>r&&r(e,t),o=e=>n&&n(e);if("fingerPrint"===e){if(os()){const e=t.fingerprint.isKeyguardSecure()&&t.fingerprint.isEnrolledFingerprints();return o({isEnrolled:e}),{isEnrolled:e,errMsg:"checkIsSoterEnrolledInDevice:ok"}}return i("not support",{isEnrolled:!1}),{isEnrolled:!1,errMsg:"checkIsSoterEnrolledInDevice:fail not support"}}if("facial"===e){if(is()){const e=Ga("faceID"),t=e&&e.isKeyguardSecure()&&e.isEnrolledFaceID();return o({isEnrolled:t}),{isEnrolled:t,errMsg:"checkIsSoterEnrolledInDevice:ok"}}return i("not support",{isEnrolled:!1}),{isEnrolled:!1,errMsg:"checkIsSoterEnrolledInDevice:fail not support"}}return i("not support",{isEnrolled:!1}),{isEnrolled:!1,errMsg:"checkIsSoterEnrolledInDevice:fail not support"}},ls=pe("checkIsSoterEnrolledInDevice",(({checkAuthMode:e},{resolve:t,reject:n})=>{cs({checkAuthMode:e,resolve:t,reject:n})}),0,ci),us=pe("checkIsSoterEnrolledInDevice",(({requestAuthModes:e,challenge:n=!1,authContent:r},{resolve:i,reject:o})=>{Nt();const{t:a}=St(),s=as().supportMode;if(0===s.length)return{authMode:"fingerPrint",errCode:90001,errMsg:"startSoterAuthentication:fail"};const c=[];if(e.map(((e,t)=>{s.indexOf(e)>-1&&c.push(e)})),0===c.length)return{authMode:"fingerPrint",errCode:90003,errMsg:"startSoterAuthentication:fail no corresponding mode"};const l=[];if(c.map(((e,t)=>{cs({checkAuthMode:e}).isEnrolled&&l.push(e)})),0===l.length)return{authMode:c[0],errCode:90011,errMsg:`startSoterAuthentication:fail no ${c[0]} enrolled`};const u=l[0];if("fingerPrint"===u)"android"===t.os.name.toLowerCase()&&(t.nativeUI.showWaiting(r||a("uni.startSoterAuthentication.authContent")).onclose=function(){t.fingerprint.cancel()}),t.fingerprint.authenticate((()=>{t.nativeUI.closeWaiting(),i({authMode:u,errCode:0})}),(e=>{const n={authMode:u};switch(e.code){case e.AUTHENTICATE_MISMATCH:break;case e.AUTHENTICATE_OVERLIMIT:t.nativeUI.closeWaiting(),o("authenticate freeze. please try again later",g(n,{errCode:90010}));break;case e.CANCEL:t.nativeUI.closeWaiting(),o("cancel",g(n,{errCode:90008}));break;default:t.nativeUI.closeWaiting(),o("",g(n,{errCode:90007}))}}),{message:r});else if("facial"===u){Ga("faceID").authenticate({message:r},(e=>{const t={authMode:u};if("success"===e.type&&0===e.code)i({authMode:u,errCode:0});else switch(e.code){case 4:o("",g(t,{errCode:90009}));break;case 5:o("authenticate freeze. please try again later",g(t,{errCode:90010}));break;case 6:o("",g(t,{errCode:90008}));break;default:o("",g(t,{errCode:90007}))}}))}}),0,li);let ds,hs,ps,fs,gs;function ms(){return"object"==typeof window&&"object"==typeof navigator&&"object"==typeof document?"webview":"v8"}function vs(){return ds.webview.currentWebview().id}const ys={};function _s(e){const t=e.data&&e.data.__message;if(!t||!t.__page)return;const n=t.__page,r=ys[n];r&&r(t),t.keep||delete ys[n]}class bs{constructor(e){this.webview=e}sendMessage(e){const t=JSON.parse(JSON.stringify({__message:{data:e}})),n=this.webview.id;if(ps){new ps(n).postMessage(t)}else ds.webview.postMessageToUniNView&&ds.webview.postMessageToUniNView(t,n)}close(){this.webview.close()}}function ws({context:n={},url:r,data:i={},style:o={},onMessage:a,onClose:s}){ds=n.plus||t,hs=n.weex||("object"==typeof e?e:null),ps=n.BroadcastChannel||("object"==typeof BroadcastChannel?BroadcastChannel:null);const c={autoBackButton:!0,titleSize:"17px"},l=`page${Date.now()}`;!1!==(o=g({},o)).titleNView&&"none"!==o.titleNView&&(o.titleNView=g(c,o.titleNView));const u={top:0,bottom:0,usingComponents:{},popGesture:"close",scrollIndicator:"none",animationType:"pop-in",animationDuration:200,uniNView:{path:`${"object"==typeof process&&process.env&&process.env.VUE_APP_TEMPLATE_PATH||""}/${r}.js`,defaultFontSize:ds.screen.resolutionWidth/20,viewport:ds.screen.resolutionWidth}};o=g(u,o);const d=ds.webview.create("",l,o,{extras:{from:vs(),runtime:ms(),data:i,useGlobalEvent:!ps}});return d.addEventListener("close",s),function(e,t){"v8"===ms()?ps?(fs&&fs.close(),fs=new ps(vs()),fs.onmessage=_s):gs||(gs=hs.requireModule("globalEvent"),gs.addEventListener("plusMessage",_s)):window.__plusMessage=_s,ys[e]=t}(l,(e=>{"function"==typeof a&&a(e.data),e.keep||d.close("auto")})),d.show(o.animationType,o.animationDuration),new bs(d)}const ks=pe("scanCode",((e,{resolve:n,reject:r})=>{$t();const{t:i}=St(),o="light"!==ia();let a,s=!1;const c=ws({url:"__uniappscan",data:Object.assign({},e,{messages:{fail:i("uni.scanCode.fail"),"flash.on":i("uni.scanCode.flash.on"),"flash.off":i("uni.scanCode.flash.off")}}),style:{animationType:e.animationType||"pop-in",titleNView:{autoBackButton:!0,type:"float",titleText:e.titleText||i("uni.scanCode.title"),titleColor:"#ffffff",backgroundColor:"rgba(0,0,0,0)",buttons:e.onlyFromCamera?[]:[{text:e.albumText||i("uni.scanCode.album"),fontSize:"17px",width:"60px",onclick:()=>{c.sendMessage({type:"gallery"})}}]},popGesture:"close",background:"#000000",backButtonAutoControl:"close"},onMessage({event:e,detail:t}){a=t,s="marked"===e},onClose(){o&&t.navigator.setStatusBarStyle("dark"),a?s?(delete a.message,n(a)):r(a.message):r("cancel")}});o&&(t.navigator.setStatusBarStyle("light"),c.webview.addEventListener("popGesture",(({type:e,result:n})=>{"start"===e?t.navigator.setStatusBarStyle("dark"):"end"!==e||n||t.navigator.setStatusBarStyle("light")})))})),xs=le(je,(()=>{f.on(je,(e=>{f.invokeOnCallback(je,e)}))})),Ss=pe("getScreenBrightness",((e,{resolve:n})=>{n({value:t.screen.getBrightness(!1)})})),Cs=pe("setScreenBrightness",((e,{resolve:n})=>{t.screen.setBrightness(e.value,!1),n()})),Es=pe("setKeepScreenOn",((e,{resolve:n})=>{t.device.setWakelock(!!e.keepScreenOn),n()})),Is=pe("getImageInfo",((e,{resolve:n,reject:r})=>{const i=ua+"/download/";t.io.getImageInfo(g(e,{savePath:i,filename:i,success:bo(n),fail:wo(r)}))}),0,_i),Ts=pe("getVideoInfo",((e,{resolve:n,reject:r})=>{t.io.getVideoInfo({filePath:e.src,success:e=>({orientation:e.orientation,type:e.type,duration:e.duration,size:e.size,height:e.height,width:e.width,fps:e.fps||30,bitrate:e.bitrate}),fail:wo(r)})}),0,wi),As=pe("previewImage",(({current:e=0,indicator:n="number",loop:r=!1,urls:i,longPressActions:o},{resolve:a,reject:s})=>{At();const{t:c}=St();i=i.map((e=>fn(e)));const l=Number(e);e=isNaN(l)?(e=i.indexOf(fn(e)))<0?0:e:l,t.nativeUI.previewImage(i,{current:e,indicator:n,loop:r,onLongPress:function(e){let n=[],r="";const i=o&&S(o);i?(n=o.itemList?o.itemList:[],r=o.itemColor?o.itemColor:"#000000"):(n=[c("uni.previewImage.button.save")],r="#000000");const a={buttons:n.map((e=>({title:e,color:r}))),cancel:c("uni.previewImage.cancel")};t.nativeUI.actionSheet(a,(n=>{if(n.index>0){if(i)return void("function"==typeof o.success&&o.success({tapIndex:n.index-1,index:e.index}));t.gallery.save(e.url,(()=>{t.nativeUI.toast(c("uni.previewImage.save.success"))}),(function(){t.nativeUI.toast(c("uni.previewImage.save.fail"))}))}else i&&"function"==typeof o.fail&&o.fail({errMsg:"showActionSheet:fail cancel"})}))}}),a()}),0,bi);let Os,$s,Ns=!1;const Ps=(e,t={})=>{!function(e){const t=e.state;delete e.state,delete e.errMsg,t&&"function"==typeof Ls[t]&&Ls[t](e)}(g({state:e},t))},Ms={start({duration:e=6e4,sampleRate:n,numberOfChannels:r,encodeBitRate:o,format:a="mp3",frameSize:s}){if(Ns)return Ps("start");Os=t.audio.getRecorder(),Os.record({format:a,samplerate:n?String(n):"",filename:ua+"/recorder/"},(e=>Ps("stop",{tempFilePath:e})),(e=>Ps("error",{errMsg:e.message}))),$s=i((()=>{Ms.stop()}),e),Ps("start"),Ns=!0},stop(){Ns&&(Os.stop(),Ns=!1,$s&&o($s))},pause(){Ns&&Ps("error",{errMsg:"Unsupported operation: pause"})},resume(){Ns&&Ps("error",{errMsg:"Unsupported operation: resume"})}},Ls={pause:null,resume:null,start:null,stop:null,error:null};class Rs{constructor(){}onError(e){Ls.error=e}onFrameRecorded(e){}onInterruptionBegin(e){}onInterruptionEnd(e){}onPause(e){Ls.pause=e}onResume(e){Ls.resume=e}onStart(e){Ls.start=e}onStop(e){Ls.stop=e}pause(){Ms.pause()}resume(){Ms.resume()}start(e){Ms.start(e)}stop(){Ms.stop()}}let Bs;const Ds=he(0,(()=>Bs||(Bs=new Rs))),js=pe("saveVideoToPhotosAlbum",((e,{resolve:n,reject:r})=>{t.gallery.save(e.filePath,bo(n),wo(r))}),0,xi),Fs=pe("saveImageToPhotosAlbum",((e,{resolve:n,reject:r})=>{t.gallery.save(e.filePath,bo(n),wo(r))}),0,ki),Vs=pe("compressImage",((e,{resolve:n,reject:r})=>{const i=`${ua}/compressed/${Date.now()}_${Fo(e.src)}`;t.zip.compressImage(g({},e,{dst:i}),(()=>{n({tempFilePath:i})}),r)}),0,Si),Us=pe("compressVideo",((e,{resolve:n,reject:r})=>{const i=`${ua}/compressed/${Date.now()}_${Fo(e.src)}`;t.zip.compressVideo(g({},e,{filename:i}),(()=>{n({tempFilePath:i})}),r)}),0,Ci);const zs=pe("chooseImage",(({count:e,sizeType:n,sourceType:r,crop:i}={},{resolve:o,reject:a})=>{At();const{t:s}=St(),c=wo(a);function l(e){const n=[],r=[];Promise.all(e.map((e=>{return n=e,new Promise(((e,r)=>{t.io.resolveLocalFileSystemURL(n,(function(t){t.getMetadata(e,r,!1)}),r)}));var n}))).then((t=>{t.forEach(((t,i)=>{const o=e[i];r.push(o),n.push({path:o,size:t.size})})),o({tempFilePaths:r,tempFiles:n})})).catch(c)}function u(){t.camera.getCamera().captureImage((e=>l([e])),c,{filename:ua+"/camera/",resolution:"high",crop:i,sizeType:n})}function d(){t.gallery.pick((({files:e})=>l(e)),c,{maximum:e,multiple:!0,system:!1,filename:ua+"/gallery/",permissionAlert:!0,crop:i,sizeType:n})}if(1===r.length){if(r.includes("album"))return void d();if(r.includes("camera"))return void u()}t.nativeUI.actionSheet({cancel:s("uni.chooseImage.cancel"),buttons:[{title:s("uni.chooseImage.sourceType.camera")},{title:s("uni.chooseImage.sourceType.album")}]},(e=>{switch(e.index){case 1:u();break;case 2:d();break;default:c()}}))}),0,vi),Ws=pe("chooseVideo",(({sourceType:e,compressed:n,maxDuration:r,camera:i},{resolve:o,reject:a})=>{Ot();const{t:s}=St(),c=wo(a);function l(e){t.io.getVideoInfo({filePath:e,success(t){const n={errMsg:"chooseVideo:ok",tempFilePath:e,size:t.size,duration:t.duration,width:t.width,height:t.height};o(n)},fail:c})}function u(){t.gallery.pick((({files:e})=>l(e[0])),c,{filter:"video",system:!1,multiple:!0,maximum:1,filename:ua+"/gallery/",permissionAlert:!0,videoCompress:n})}function d(){t.camera.getCamera().startVideoCapture(l,c,{index:"front"===i?"2":"1",videoMaximumDuration:r,filename:ua+"/camera/",videoCompress:n})}if(1===e.length){if(e.includes("album"))return void u();if(e.includes("camera"))return void d()}t.nativeUI.actionSheet({cancel:s("uni.chooseVideo.cancel"),buttons:[{title:s("uni.chooseVideo.sourceType.camera")},{title:s("uni.chooseVideo.sourceType.album")}]},(e=>{switch(e.index){case 1:d();break;case 2:u();break;default:c()}}))}),0,yi),Hs=pe("showKeyboard",((e,{resolve:n})=>{t.key.showSoftKeybord(),n()})),qs=pe("hideKeyboard",((e,{resolve:n})=>{t.key.hideSoftKeybord(),n()}));function Ys(e){f.invokeOnCallback(Fe,e)}const Js=le(Fe,(()=>{f.on(Fe,Ys)})),Xs=ue(Fe,(()=>{f.off(Fe,Ys)}));class Gs{constructor(e){this._callbacks=[],this._downloader=e,e.addEventListener("statechanged",((e,t)=>{e.downloadedSize&&e.totalSize&&this._callbacks.forEach((t=>{t({progress:Math.round(e.downloadedSize/e.totalSize*100),totalBytesWritten:e.downloadedSize,totalBytesExpectedToWrite:e.totalSize})}))}))}abort(){this._downloader.abort()}onProgressUpdate(e){"function"==typeof e&&this._callbacks.push(e)}offProgressUpdate(e){const t=this._callbacks.indexOf(e);t>=0&&this._callbacks.splice(t,1)}onHeadersReceived(e){throw new Error("Method not implemented.")}offHeadersReceived(e){throw new Error("Method not implemented.")}}const Zs=de("downloadFile",(({url:e,header:n,timeout:r},{resolve:i,reject:o})=>{r=(r||c.networkTimeout&&c.networkTimeout.request||6e4)/1e3;const a=t.downloader.createDownload(e,{timeout:r,filename:ua+"/download/",retry:0,retryInterval:0},((e,t)=>{t?i({tempFilePath:e.filename,statusCode:t}):o(`statusCode: ${t}`)})),s=new Gs(a);for(const e in n)v(n,e)&&a.setRequestHeader(e,n[e]);return a.start(),s}),0,$i),Ks=e=>{let t=e["Set-Cookie"]||e["set-cookie"],n=[];if(!t)return[];"["===t[0]&&"]"===t[t.length-1]&&(t=t.slice(1,-1));const r=t.split(";");for(let e=0;e<r.length;e++)-1!==r[e].indexOf("Expires=")||-1!==r[e].indexOf("expires=")?n.push(r[e].replace(",","")):n.push(r[e]);return n=n.join(";").split(","),n};class Qs{constructor(e){this._requestTask=e}abort(){this._requestTask.abort()}offHeadersReceived(){}onHeadersReceived(){}}const ec=de("request",((e,{resolve:t,reject:n})=>{let r,{header:a,method:s,data:c,timeout:l,url:u,responseType:d,sslVerify:h,firstIpv4:p,tls:f}=e;for(const e in a)if("content-type"===e.toLowerCase()){r=a[e];break}"GET"!==s&&0===r.indexOf("application/json")&&S(c)&&(c=JSON.stringify(c));const g=Ga("stream"),m={};let y,_,b=!1;for(const e in a)if(b||"content-type"!==e.toLowerCase())m[e]=a[e];else if(b=!0,m["Content-Type"]=a[e],"GET"!==s&&0===a[e].indexOf("application/x-www-form-urlencoded")&&"string"!=typeof c&&!(c instanceof ArrayBuffer)){const e=[];for(const t in c)v(c,t)&&e.push(encodeURIComponent(t)+"="+encodeURIComponent(c[t]));c=e.join("&")}b||"POST"!==s||(m["Content-Type"]="application/x-www-form-urlencoded; charset=UTF-8"),l&&(y=i((()=>{_=!0,n("timeout")}),l+200));const w={method:s,url:u.trim(),headers:m,type:"arraybuffer"===d?"base64":"text",timeout:l||6e5,sslVerify:!h,firstIpv4:p,tls:f};return"GET"!==s&&(w.body="string"==typeof c?c:JSON.stringify(c)),g.fetch(w,(({ok:r,status:i,data:a,headers:s,errorMsg:c})=>{if(_)return;y&&o(y);const l=i;if(l>0)t(function(e,t){if("string"==typeof e.data&&65279===e.data.charCodeAt(0)&&(e.data=e.data.substr(1)),e.statusCode=parseInt(String(e.statusCode),10),S(e.header)&&(e.header=Object.keys(e.header).reduce((function(t,n){const r=e.header[n];return Array.isArray(r)?t[n]=r.join(","):"string"==typeof r&&(t[n]=r),t}),{})),t.dataType&&"json"===t.dataType.toLowerCase())try{e.data=JSON.parse(e.data)}catch(e){}return e}({data:r&&"arraybuffer"===d?fe(a):a,statusCode:l,header:s,cookies:Ks(s)},e));else{let e="abort statusCode:"+l;c&&(e=e+" "+c),n(e)}})),new Qs({abort(){_=!0,y&&o(y),n("abort")}})}),0,Ai),tc=pe("configMTLS",(({certificates:e},{resolve:t,reject:n})=>{Ga("stream").configMTLS(e,(({type:e,code:r,message:i})=>{switch(e){case"success":t({code:r});break;case"fail":n(i,{code:r})}}))}),0,Oi),nc=[],rc={},ic={open:"",close:"",error:"",message:""};let oc;function ac(e){const t=String(Date.now());let n;try{oc||(oc=Ga("uni-webSocket"),function(e){e.onopen((e=>{const t=rc[e.id];t&&t._socketOnOpen()})),e.onmessage((e=>{const t=rc[e.id];t&&t._socketOnMessage(e)})),e.onerror((e=>{const t=rc[e.id];t&&t._socketOnError()})),e.onclose((e=>{const t=rc[e.id];t&&t._socketOnClose()}))}(oc)),oc.WebSocket({id:t,url:e.url,protocol:Array.isArray(e.protocols)?e.protocols.join(","):e.protocols,header:e.header})}catch(e){n=e}return{socket:oc,socketId:t,errMsg:n}}class sc{constructor(e,t){this.id=t,this._socket=e,this._callbacks={open:[],close:[],error:[],message:[]},this.CLOSED=3,this.CLOSING=2,this.CONNECTING=0,this.OPEN=1,this.readyState=this.CLOSED,this._socket}_socketOnOpen(){this.readyState=this.OPEN,this.socketStateChange("open")}_socketOnMessage(e){this.socketStateChange("message",{data:"object"==typeof e.data?fe(e.data.base64):e.data})}_socketOnError(){this.socketStateChange("error"),this.onErrorOrClose()}_socketOnClose(){this.socketStateChange("close"),this.onErrorOrClose()}onErrorOrClose(){this.readyState=this.CLOSED,delete rc[this.id];const e=nc.indexOf(this);e>=0&&nc.splice(e,1)}socketStateChange(e,t={}){const n="message"===e?t:{};this===nc[0]&&ic[e]&&f.invokeOnCallback(ic[e],n),this._callbacks[e].forEach((e=>{"function"==typeof e&&e(n)}))}send(e,t=!0){this.readyState!==this.OPEN&&Oe(e,"sendSocketMessage:fail WebSocket is not connected");try{this._socket.send({id:this.id,data:"object"==typeof e.data?{"@type":"binary",base64:ge(e.data)}:e.data}),t&&Oe(e,"sendSocketMessage:ok")}catch(n){t&&Oe(e,`sendSocketMessage:fail ${n}`)}}close(e,t=!0){this.readyState=this.CLOSING;try{this._socket.close(g({id:this.id,args:e})),t&&Oe(e,"closeSocket:ok")}catch(n){t&&Oe(e,`closeSocket:fail ${n}`)}}onOpen(e){this._callbacks.open.push(e)}onClose(e){this._callbacks.close.push(e)}onError(e){this._callbacks.error.push(e)}onMessage(e){this._callbacks.message.push(e)}}const cc=de("connectSocket",(({url:e,protocols:t,header:n,method:r},{resolve:o,reject:a})=>{const{socket:s,socketId:c,errMsg:l}=ac({url:e,protocols:t,header:n,method:r}),u=new sc(s,c);return l?i((()=>{a(l)}),0):(nc.push(u),rc[c]=u),i((()=>{o()}),0),u}),0,Pi),lc=pe("sendSocketMessage",((e,{resolve:t,reject:n})=>{const r=nc[0];r&&r.readyState===r.OPEN?(r.send({data:e.data},!1),t()):n("WebSocket is not connected")})),uc=pe("closeSocket",((e,{resolve:t,reject:n})=>{const r=nc[0];r?(r.readyState=r.CLOSING,r.close(e,!1),t()):n("WebSocket is not connected")}));function dc(e){const t=`onSocket${O(e)}`;return le(t,(()=>{ic[e]=t}))}const hc=dc("open"),pc=dc("error"),fc=dc("message"),gc=dc("close");class mc{constructor(e){this._callbacks=[],this._uploader=e,e.addEventListener("statechanged",((e,t)=>{e.uploadedSize&&e.totalSize&&this._callbacks.forEach((t=>{t({progress:parseInt(String(e.uploadedSize/e.totalSize*100)),totalBytesSent:e.uploadedSize,totalBytesExpectedToSend:e.totalSize})}))}))}abort(){this._uploader.abort()}onProgressUpdate(e){"function"==typeof e&&this._callbacks.push(e)}onHeadersReceived(){}offProgressUpdate(e){const t=this._callbacks.indexOf(e);t>=0&&this._callbacks.splice(t,1)}offHeadersReceived(){}}const vc=de("uploadFile",(({url:e,timeout:n,header:r,formData:i,files:o,filePath:a,name:s},{resolve:c,reject:l})=>{const u=t.uploader.createUpload(e,{timeout:n,retry:0,retryInterval:0},((e,t)=>{t?c({data:e.responseText,statusCode:t}):l(`statusCode: ${t}`)}));for(const e in r)v(r,e)&&u.setRequestHeader(e,String(r[e]));for(const e in i)v(i,e)&&u.addData(e,String(i[e]));o&&o.length?o.forEach((e=>{u.addFile(fn(e.uri),{key:e.name||"file"})})):u.addFile(fn(a),{key:s});const d=new mc(u);return u.start(),d}),0,Ni),yc={},_c=["play","canplay","ended","stop","waiting","seeking","seeked","pause"];function bc({audioId:e,src:t,startTime:n,autoplay:r=!1,loop:i=!1,obeyMuteSwitch:o,volume:a}){const s=yc[e];if(s){const o={loop:i,autoplay:r};t&&(s.src=o.src=fn(t)),n&&(s.startTime=o.startTime=n),"number"==typeof a&&(s.volume=o.volume=a),s.setStyles(o),(e=>{const t=yc[e];t&&(t.initStateChage||(t.initStateChage=!0,t.addEventListener("error",(t=>{kc({state:"error",audioId:e,errMsg:"MediaError",errCode:t.code})})),_c.forEach((n=>{t.addEventListener(n,(()=>{"play"===n?t.isStopped=!1:"stop"===n&&(t.isStopped=!0),kc({state:n,audioId:e})}))}))))})(e)}return{errMsg:"setAudioState:ok"}}const wc=Object.create(null),kc=({state:e,audioId:t,errMsg:n,errCode:r})=>{const i=wc[t];if(i)if(Ec(i,e,n,r),"play"===e){const e=i.currentTime;i.__timing=a((()=>{i.currentTime!==e&&Ec(i,"timeUpdate")}),200)}else"pause"!==e&&"stop"!==e&&"error"!==e||s(i.__timing)},xc=[{name:"src",cache:!0},{name:"startTime",default:0,cache:!0},{name:"autoplay",default:!1,cache:!0},{name:"loop",default:!1,cache:!0},{name:"obeyMuteSwitch",default:!0,readonly:!0,cache:!0},{name:"duration",readonly:!0},{name:"currentTime",readonly:!0},{name:"paused",readonly:!0},{name:"buffered",readonly:!0},{name:"volume"}];class Sc{constructor(e){this.id=e,this._callbacks={},this._options={},wr.forEach((e=>{this._callbacks[e]=[]})),xc.forEach((e=>{const t=e.name;Object.defineProperty(this,t,{get:()=>{const n=e.cache?this._options:function({audioId:e}){const t=yc[e];if(!t)return{errMsg:"getAudioState:fail"};const{src:n,startTime:r,volume:i}=t;return{errMsg:"getAudioState:ok",duration:1e3*(t.getDuration()||0),currentTime:t.isStopped?0:1e3*t.getPosition(),paused:t.isPaused(),src:n,volume:i,startTime:1e3*r,buffered:1e3*t.getBuffered()}}({audioId:this.id}),r=t in n?n[t]:e.default;return"number"==typeof r&&"volume"!==t?r/1e3:r},set:e.readonly?void 0:e=>{this._options[t]=e,bc(g({},this._options,{audioId:this.id}))}})})),Cc()}play(){this._operate("play")}pause(){this._operate("pause")}stop(){this._operate("stop")}seek(e){this._operate("seek",{currentTime:1e3*e})}destroy(){s(this.__timing),yc[this.id]&&(yc[this.id].close(),delete yc[this.id]),delete wc[this.id]}_operate(e,t){!function({operationType:e,audioId:t,currentTime:n}){const r=yc[t];switch(e){case"play":case"pause":case"stop":r["play"===e&&r.isPaused()?"resume":e]();break;case"seek":void 0!==n&&r.seekTo(n/1e3)}}(g({},t,{audioId:this.id,operationType:e}))}}const Cc=Ae((()=>{wr.forEach((e=>{Sc.prototype[e]=function(t){"function"==typeof t&&this._callbacks[e].push(t)}})),kr.forEach((e=>{Sc.prototype[e]=function(t){const n=this._callbacks[e],r=n.indexOf(t);r>=0&&n.splice(r,1)}}))}));function Ec(e,t,n,r){const i=`on${O(t)}`;e._callbacks[i].forEach((e=>{"function"==typeof e&&e("error"===t?{errMsg:n,errCode:r}:{})}))}const Ic=he(0,(()=>{const{audioId:e}=function(){const e=`${Date.now()}${Math.random()}`,n=yc[e]=t.audio.createPlayer("");return n.src="",n.volume=1,n.startTime=0,{errMsg:"createAudioInstance:ok",audioId:e}}(),n=new Sc(e);return wc[e]=n,n})),Tc=["canplay","play","pause","stop","ended","timeUpdate","prev","next","error","waiting"],Ac={canplay:[],play:[],pause:[],stop:[],ended:[],timeUpdate:[],prev:[],next:[],error:[],waiting:[]};let Oc,$c=null;const Nc=["play","pause","ended","stop","canplay"];function Pc(){null!==$c&&s($c)}function Mc(){if(Oc)return;const e=f.invokeOnCallback;Oc=t.audio.createPlayer({autoplay:!0,backgroundControl:!0}),Oc.src=Oc.title=Oc.epname=Oc.singer=Oc.coverImgUrl=Oc.webUrl="",Oc.startTime=0,Nc.forEach((t=>{Oc.addEventListener(t,(()=>{"play"===t?(Oc.isStopped=!1,Pc(),$c=a((()=>{Bc({state:"timeUpdate"})}),250)):"stop"===t&&(Oc.isStopped=!0),"pause"!==t&&"ended"!==t&&"stop"!==t||Pc();const n=`onMusic${t[0].toUpperCase()+t.substr(1)}`;e(n,{dataUrl:Oc.src,errMsg:`${n}:ok`}),Bc({state:t,dataUrl:Oc.src})}))})),Oc.addEventListener("waiting",(()=>{Pc(),Bc({state:"waiting",dataUrl:Oc.src})})),Oc.addEventListener("error",(t=>{Pc(),e("onMusicError",{dataUrl:Oc.src,errMsg:"Error:"+t.message}),Bc({state:"error",dataUrl:Oc.src,errMsg:t.message,errCode:t.code})})),Oc.addEventListener("prev",(()=>e("onBackgroundAudioPrev"))),Oc.addEventListener("next",(()=>e("onBackgroundAudioNext")))}function Lc(e){Mc();const t=["src","startTime","coverImgUrl","webUrl","singer","epname","title"],n={};Object.keys(e).forEach((r=>{if(t.indexOf(r)>=0){let i=e[r];r===t[0]&&i&&(i=fn(i)),Oc[r]=n[r]=i}})),Oc.setStyles(n)}function Rc({operationType:e,src:t,startTime:n,currentTime:r}){return function({operationType:e,src:t,position:n,api:r="operateMusicPlayer",title:i,coverImgUrl:o}){return["resume","pause","stop"].indexOf(e)>0?Oc&&Oc[e]():"play"===e?(Lc({src:t,startTime:n,title:i,coverImgUrl:o}),Oc.play()):"seek"===e&&Oc&&Oc.seekTo(n),{errMsg:`${r}:ok`}}({operationType:e,src:t,position:n||r||0,api:"operateBackgroundAudio"})}function Bc({state:e,errMsg:t,errCode:n,dataUrl:r}){Ac[e].forEach((r=>{"function"==typeof r&&r("error"===e?{errMsg:t,errCode:n}:{})}))}const Dc=Ae((()=>{Tc.forEach((e=>{Fc.prototype[`on${O(e)}`]=function(t){Ac[e].push(t)}}))})),jc=[{name:"duration",readonly:!0},{name:"currentTime",readonly:!0},{name:"paused",readonly:!0},{name:"src",cache:!0},{name:"startTime",default:0,cache:!0},{name:"buffered",readonly:!0},{name:"title",cache:!0},{name:"epname",cache:!0},{name:"singer",cache:!0},{name:"coverImgUrl",cache:!0},{name:"webUrl",cache:!0},{name:"protocol",readonly:!0,default:"http"}];class Fc{constructor(){this._options={},jc.forEach((e=>{const t=e.name;Object.defineProperty(this,t,{get:()=>{const n=e.cache?this._options:function(){let e={duration:0,currentTime:0,paused:!1,src:"",buffered:0,title:"",epname:"",singer:"",coverImgUrl:"",webUrl:"",startTime:0,errMsg:"getBackgroundAudioState:ok"};if(Oc){const t={duration:Oc.getDuration()||0,currentTime:Oc.isStopped?0:Oc.getPosition(),paused:Oc.isPaused(),src:Oc.src,buffered:Oc.getBuffered(),title:Oc.title,epname:Oc.epname,singer:Oc.singer,coverImgUrl:Oc.coverImgUrl,webUrl:Oc.webUrl,startTime:Oc.startTime};e=g(e,t)}return e}();return t in n?n[t]:e.default},set:e.readonly?void 0:e=>{this._options[t]=e,Lc(this._options)}})})),Dc()}play(){this._operate("play")}pause(){this._operate("pause")}stop(){this._operate("stop")}seek(e){this._operate("seek",{currentTime:e})}_operate(e,t){Rc(g({},t,{operationType:e}))}}let Vc;const Uc=he(0,(()=>Vc||(Vc=new Fc)));class zc{constructor(e,t){this.id=e,this.ctx=t}start(e){return _n(this.ctx,"start",e)}stop(e){return _n(this.ctx,"stop",e)}pause(e){return _n(this.ctx,"pause",e)}resume(e){return _n(this.ctx,"resume",e)}switchCamera(e){return _n(this.ctx,"switchCamera",e)}snapshot(e){return _n(this.ctx,"snapshot",e)}toggleTorch(e){return _n(this.ctx,"toggleTorch",e)}playBGM(e){return bn(this.ctx,"playBGM",e)}stopBGM(e){return _n(this.ctx,"stopBGM",e)}pauseBGM(e){return _n(this.ctx,"pauseBGM",e)}resumeBGM(e){return _n(this.ctx,"resumeBGM",e)}setBGMVolume(e){return bn(this.ctx,"setBGMVolume",e)}startPreview(e){return _n(this.ctx,"startPreview",e)}stopPreview(e){return _n(this.ctx,"stopPreview",e)}}const Wc=he(0,((e,t)=>{if(!t)return console.warn("uni.createLivePusherContext: 2 arguments required, but only 1 present");const n=wn(e,t);return n?new zc(e,n):console.warn("Can not find `"+e+"`")})),Hc=3.141592653589793,qc=6378245,Yc=.006693421622965943;const Jc=function(e,t){return e<72.004||e>137.8347||t<.8293||t>55.8271||!1},Xc=function(e,t){let n=2*e-100+3*t+.2*t*t+.1*e*t+.2*Math.sqrt(Math.abs(e));return n+=2*(20*Math.sin(6*e*Hc)+20*Math.sin(2*e*Hc))/3,n+=2*(20*Math.sin(t*Hc)+40*Math.sin(t/3*Hc))/3,n+=2*(160*Math.sin(t/12*Hc)+320*Math.sin(t*Hc/30))/3,n},Gc=function(e,t){let n=300+e+2*t+.1*e*e+.1*e*t+.1*Math.sqrt(Math.abs(e));return n+=2*(20*Math.sin(6*e*Hc)+20*Math.sin(2*e*Hc))/3,n+=2*(20*Math.sin(e*Hc)+40*Math.sin(e/3*Hc))/3,n+=2*(150*Math.sin(e/12*Hc)+300*Math.sin(e/30*Hc))/3,n};function Zc(e,t,n){const r=t.coords;if(e!==t.coordsType){let t;"wgs84"===e?t=function(e,t){if(Jc(e=+e,t=+t))return[e,t];let n=Xc(e-105,t-35),r=Gc(e-105,t-35);const i=t/180*Hc;let o=Math.sin(i);o=1-Yc*o*o;const a=Math.sqrt(o);return n=180*n/(qc*(1-Yc)/(o*a)*Hc),r=180*r/(qc/a*Math.cos(i)*Hc),[2*e-(e+r),2*t-(t+n)]}(r.longitude,r.latitude):"gcj02"===e&&(t=function(e,t){if(Jc(e=+e,t=+t))return[e,t];let n=Xc(e-105,t-35),r=Gc(e-105,t-35);const i=t/180*Hc;let o=Math.sin(i);o=1-Yc*o*o;const a=Math.sqrt(o);return n=180*n/(qc*(1-Yc)/(o*a)*Hc),r=180*r/(qc/a*Math.cos(i)*Hc),[e+r,t+n]}(r.longitude,r.latitude)),t&&(r.longitude=t[0],r.latitude=t[1])}n({type:e,altitude:r.altitude||0,latitude:r.latitude,longitude:r.longitude,speed:r.speed,accuracy:r.accuracy,address:t.address,errMsg:"getLocation:ok"})}const Kc=pe("getLocation",(({type:e="wgs84",geocode:n=!1,altitude:r=!1},{resolve:i,reject:o})=>{t.geolocation.getCurrentPosition((t=>{Zc(e,t,i)}),(t=>{1501!==t.code?o("getLocation:fail "+t.message):Zc(e,t,i)}),{geocode:n,enableHighAccuracy:r})}),0,gi),Qc=pe("chooseLocation",((e,{resolve:n,reject:r})=>{const i="light"!==ia();let o;const a=ws({url:"__uniappchooselocation",data:e,style:{animationType:e.animationType||"slide-in-bottom",titleNView:!1,popGesture:"close",scrollIndicator:"none"},onMessage({event:e,detail:t}){"selected"===e&&(o=t)},onClose(){i&&t.navigator.setStatusBarStyle("dark"),o?n(o):r("cancel")}});i&&(t.navigator.setStatusBarStyle("light"),a.webview.addEventListener("popGesture",(({type:e,result:n})=>{"start"===e?t.navigator.setStatusBarStyle("dark"):"end"!==e||n||t.navigator.setStatusBarStyle("light")})))})),el=pe("openLocation",((e,{resolve:t,reject:n})=>(ws({url:"__uniappopenlocation",data:e,style:{titleNView:{type:"transparent"},popGesture:"close",backButtonAutoControl:"close"},onClose(){n("cancel")}}),t())),0,mi),tl=pe("showModal",(({title:e="",content:n="",showCancel:r=!0,cancelText:i,cancelColor:o,confirmText:a,confirmColor:s}={},{resolve:c})=>{n=n||" ",t.nativeUI.confirm(n,(e=>{c(r?{confirm:1===e.index,cancel:0===e.index||-1===e.index}:{confirm:0===e.index,cancel:!1})}),e,r?[i,a]:[a])}),0,to),nl=pe("showActionSheet",(({itemList:e=[],itemColor:n="#000000",title:r="",alertText:i="",popover:o},{resolve:a,reject:s})=>{It();const{t:c}=St(),l={title:r,cancel:c("uni.showActionSheet.cancel"),buttons:e.map((e=>({title:e,color:n})))};(r||i)&&(l.title=i||r),t.nativeUI.actionSheet(g(l,{popover:o}),(e=>{e.index>0?a({tapIndex:e.index-1}):s("showActionSheet:fail cancel")}))}),0,{formatArgs:{itemColor:"#000"}});let rl,il,ol=!1,al="";const sl=pe("showLoading",((e,t)=>cl(g({},e,{type:"loading",icon:"loading"}),t)),0,{formatArgs:{title:"",mask:!1}}),cl=({title:e="",icon:n="success",image:r="",duration:o=1500,mask:a=!1,position:s,type:c="toast",style:l},{resolve:u,reject:d})=>{if(hl(""),al=c,["top","center","bottom"].includes(String(s)))t.nativeUI.toast(e,{verticalAlign:s}),ol=!0;else{n&&!~["success","loading","error","none"].indexOf(n)&&(n="success");const i={modal:a,back:"transmit",padding:"10px",size:"16px"};r||n&&"none"!==n?(i.width="140px",i.height="112px"):i.loading={display:"none"},r?i.loading={display:"block",height:"55px",icon:r,interval:o}:-1!==["success","error"].indexOf(n)&&(i.loading={display:"block",height:"55px",icon:"success"===n?"__uniappsuccess.png":"__uniapperror.png",interval:o});try{rl=t.nativeUI.showWaiting(e,g(i,l))}catch(e){d(`${e}`)}}return il=i((()=>{hl("")}),o),u()},ll=pe("showToast",cl,0,ro),ul=pe("hideToast",((e,t)=>hl("toast",t))),dl=pe("hideLoading",((e,t)=>hl("loading",t)));function hl(e="toast",n){return e&&e!==al||(il&&(o(il),il=null),ol?t.nativeUI.closeToast():rl&&rl.close&&rl.close(),rl=null,ol=!1,al=""),n&&n.resolve()}const pl=pe("startPullDownRefresh",((e,{resolve:t,reject:n})=>{let r=ea();if(r&&r.endPullToRefresh(),r=Go(),!r)return n();r.beginPullToRefresh(),ta(r),t()})),fl=pe("stopPullDownRefresh",((e,{resolve:t,reject:n})=>{const r=ea()||Go();if(!r)return n();r.endPullToRefresh(),ta(null),t()})),gl=pe(Zi,((e,{resolve:t,reject:n})=>{const r=Ft(Wt());f.invokeViewMethod(Zi,e,r,(e=>{e?n(e):t()}))})),ml=pe(Qi,((e,{resolve:t})=>{const n=Ft(Wt());f.invokeViewMethod(Qi,e,n,t)}),0,eo),vl=pe("setNavigationBarTitle",(({__page__:e,title:t},{resolve:n,reject:r})=>{const i=Zo(e);if(i){const e=i.getStyle();e&&e.titleNView&&i.setStyle({titleNView:{titleText:t}}),n()}else r()})),yl=pe("showNavigationBarLoading",((e,{resolve:n})=>{t.nativeUI.showWaiting("",{modal:!1}),n()})),_l=pe("hideNavigationBarLoading",((e,{resolve:n})=>{t.nativeUI.closeWaiting(),n()}));const bl=pe("setNavigationBarColor",(({__page__:e,frontColor:n,backgroundColor:r},{resolve:i,reject:o})=>{const a=Zo(e);if(a){const e={};n&&(e.titleColor=n),r&&(e.backgroundColor=r);const o="#000000"===n?"dark":"light";t.navigator.setStatusBarStyle(o),function(e){const t=p();t.length&&(t[t.length-1].$page.statusBarStyle=e)}(o);const s=a.getStyle();s&&s.titleNView&&(s.titleNView.autoBackButton&&(e.backButton=e.backButton||{},e.backButton.color=n),a.setStyle({titleNView:e})),i()}else o()}),0,Ki),wl=pe("setTabBarBadge",(({index:e,text:t},{resolve:n,reject:r})=>{Xo.setTabBarBadge("text",e,t),n()}),0,ho),kl=pe("setTabBarItem",(({index:e,text:t,iconPath:n,selectedIconPath:r,pagePath:i},{resolve:o,reject:a})=>{Xo.setTabBarItem(e,t,n,r);const s=i&&l.find((({path:e})=>e===i));if(s){const t=s.meta;t.isTabBar=!0,t.tabBarIndex=e,t.isQuit=!0;const n=c.tabBar;n&&n.list&&n.list[e]&&i&&(n.list[e].pagePath=i.startsWith("/")?i.substring(1):i)}o()}),0,oo),xl=pe("setTabBarStyle",((e={},{resolve:t,reject:n})=>{if(!na())return{errMsg:"setTabBarStyle:fail not TabBar page"};const r={black:"rgba(0,0,0,0.4)",white:"rgba(255,255,255,0.4)"},i=e.borderStyle;i&&i in r&&(e.borderStyle=r[i]),Xo.setTabBarStyle(e),t()}),0,so),Sl=pe("hideTabBar",((e,{resolve:t,reject:n})=>{const r=e&&e.animation;if(!na())return n("not TabBar page");Xo.hideTabBar(Boolean(r)),t()})),Cl=pe("showTabBar",((e,{resolve:t,reject:n})=>{const r=e&&e.animation;if(!na())return n("not TabBar page");Xo.showTabBar(Boolean(r)),t()})),El=pe("showTabBarRedDot",(({index:e},{resolve:t,reject:n})=>{Xo.setTabBarBadge("redDot",e),t()}),0,lo),Il=e=>Xo.setTabBarBadge("none",e),Tl=pe("removeTabBarBadge",(({index:e},{resolve:t,reject:n})=>{Il(e),t()}),0,uo),Al=pe("hideTabBarRedDot",(({index:e},{resolve:t,reject:n})=>{Il(e),t()}),0,co),Ol="vdSync",$l="onWebviewReady",Nl="UniAppSubNVue";class Pl{constructor(e,n){this.callbacks=[];const r=this.webview=t.webview.getWebviewById(e);if(this.isSub=n||!1,r.__uniapp_mask_id){const e=this.maskWebview="0"===r.__uniapp_mask_id?{setStyle({mask:e}){Ga("uni-tabview").setMask({color:e})}}:t.webview.getWebviewById(r.__uniapp_mask_id),n=function(){e.setStyle({mask:"none"})};r.addEventListener("hide",n),r.addEventListener("close",n)}}show(...e){if(this.maskWebview){const e=this.webview.__uniapp_mask;this.maskWebview.setStyle({mask:e})}this.webview.show(...e)}hide(...e){this.webview.hide(...e)}setStyle(e){this.webview.setStyle(e)}initMessage(){if(this.messageReady)return;this.messageReady=!0;Ga("globalEvent").addEventListener("plusMessage",(e=>{if(e.data&&e.data.type===Nl){const t=e.data.target;t.id===this.webview.id&&t.isSub===this.isSub&&this.callbacks.forEach((t=>{t({origin:this.webview.__uniapp_host,data:e.data.data})}))}})),this.webview.addEventListener("close",(()=>{this.callbacks.length=0}))}postMessage(e){t.webview.postMessageToUniNView({type:Nl,data:e,target:{id:this.webview.id,isSub:!this.isSub}},"__uniapp__service")}onMessage(e){this.initMessage(),this.callbacks.push(e)}}const Ml={oauth(e){t.oauth.getServices((t=>{const n=[];(t=t).forEach((({id:e})=>{n.push(e)})),e(null,n)}),(t=>{e(t=t)}))},share(e){t.share.getServices((t=>{const n=[];(t=t).forEach((({id:e})=>{n.push(e)})),e(null,n)}),(t=>{e(t)}))},payment(e){t.payment.getChannels((t=>{const n=[];t.forEach((({id:e})=>{n.push(e)})),e(null,n)}),(t=>{e(t)}))},push(n){n(null,void 0!==e||void 0!==t?[t.push.getClientInfo().id]:[])}},Ll=pe("getProvider",(({service:e},{resolve:t,reject:n})=>{Ml[e]?Ml[e](((r,i)=>{r?n(r.message):t({service:e,provider:i})})):n("service not found")}));function Rl(e){return new Promise(((n,r)=>{t.oauth.getServices((t=>{const i=t.find((({id:t})=>t===e));i?n(i):r(new Error("provider not find"))}),r)}))}const Bl=pe("login",((e,{resolve:t,reject:n})=>{const r=e.provider||"weixin",i=wo(n),o="apple"===r?{scope:"email"}:e.univerifyStyle?{univerifyStyle:Hl(e.univerifyStyle,i)}:{};Rl(r).then((n=>{function a(){e.onlyAuthorize&&"weixin"===r?n.authorize((({code:e})=>{t({code:e,authResult:""})}),i):n.login((e=>{const n=e.target.authResult;t({code:n.code,authResult:n})}),i,o)}"apple"===r||"univerify"===r?a():n.logout(a,a)})).catch(i)})),Dl=(e,{resolve:t,reject:n})=>{const r=e.provider||"weixin",i=wo(n);Rl(r).then((n=>{n.getUserInfo((i=>{let o={nickName:""};if("weixin"===r){const e=n.userInfo;e&&(o={openId:e.openid,nickName:e.nickname,gender:e.sex,city:e.city,province:e.province,country:e.country,avatarUrl:e.headimgurl,unionId:e.unionid})}else if("apple"===r){const e=n.appleInfo;e&&(o={openId:e.user,fullName:e.fullName,email:e.email,authorizationCode:e.authorizationCode,identityToken:e.identityToken,realUserStatus:e.realUserStatus})}else o=n.userInfo,o&&(o.openId=o.openId||o.openid||n.authResult.openid,o.nickName=o.nickName||o.nickname,o.avatarUrl=o.avatarUrl||o.headimgurl);let a={};e.data&&"webapi_getuserinfo"===e.data.api_name?a.data={data:JSON.stringify(o),rawData:"",signature:"",encryptedData:"",iv:""}:a.userInfo=o,t(a)}),i)})).catch((()=>{n("请先调用 uni.login")}))},jl=pe("getUserInfo",Dl),Fl=pe("ggetUserProfilegetUserProfile",Dl),Vl=pe("preLogin",(({provider:e},{resolve:t,reject:n})=>{const r=bo(t),i=wo(n);Rl(e).then((e=>e.preLogin(r,i))).catch(i)}),0,fo),Ul=()=>Rl("univerify").then((e=>e.closeAuthView())),zl=he(0,Ul),Wl=pe("getCheckBoxState",((e,{resolve:t,reject:n})=>{const r=bo(t),i=wo(n);try{Rl("univerify").then((e=>{const t=e.getCheckBoxState();r({state:t})}))}catch(e){i(e)}}));function Hl(e,t){return S(e)&&e.buttons&&"[object Array]"===x(e.buttons.list)&&e.buttons.list.length>0&&e.buttons.list.forEach(((n,r)=>{e.buttons.list[r].onclick=function(){Ul().then((()=>{t({code:"30008",message:"用户点击了自定义按钮",index:r,provider:n.provider})}))}})),e}const ql=he(0,(e=>{g(jsRuntime,e)})),Yl={0:{name:"web",title:"图文"},1:{name:"text",title:"纯文字"},2:{name:"image",title:"纯图片"},3:{name:"music",title:"音乐"},4:{name:"video",title:"视频"},5:{name:"miniProgram",title:"小程序"}},Jl=function(e,t,n,r,i="share"){const o=wo(r);e.send(t,(()=>{n()}),o)},Xl=pe("share",((e,{resolve:n,reject:r})=>{const i=(e=>{e.type=e.type||0;let{provider:t,type:n,title:r,summary:i,href:o,imageUrl:a,mediaUrl:s,scene:c,miniProgram:l}=e;"string"==typeof a&&a&&(a=fn(a));const u=Yl[n];if(u){const e={provider:t,type:u.name,title:r,content:i,href:o,pictures:[a],thumbs:a?[a]:void 0,media:s,miniProgram:l,extra:{scene:c}};return"weixin"!==t||1!==n&&2!==n||delete e.thumbs,e}return"分享参数 type 不正确"})(e),o=wo(r);if("string"==typeof i)return r(i);e=i,t.share.getServices((t=>{const i=t.find((({id:t})=>t===e.provider));i?i.authenticated?Jl(i,e,n,r):i.authorize((()=>Jl(i,e,n,r)),o):r("service not found")}),o)}),0,mo),Gl=pe("shareWithSystem",(({type:e,imageUrl:n,summary:r,href:i},{resolve:o,reject:a})=>{const s=wo(a);"string"==typeof n&&n&&(n=fn(n)),t.share.sendWithSystem({type:e,pictures:n?[n]:void 0,content:r,href:i},(()=>o()),s)}),0,yo),Zl=pe("requestPayment",((e,{resolve:n,reject:r})=>{const i=e.provider,o=wo(r);t.payment.getChannels((a=>{const s=a.find((({id:e})=>e===i));s?t.payment.request(s,e.orderInfo,(e=>{n(e)}),o):r("service not found")}),o)}));function Kl(e,t,r,i){_(t)&&n.injectHook(e,t.bind(r),i)}function Ql(e,t,n={}){if(!y(t))return;const r=e.uid,i=e.$wxsModules||(e.$wxsModules=[]),o=e.ctx;t.forEach((e=>{n[e]&&(o[e]=function(e,t,n){const r={};return new Proxy(r,{get:(i,o)=>r[o]||(r[o]=eu(e,t,n,o))})}(r,n[e],e),i.push(e))}))}function eu(e,t,n,r){const i=()=>{},o=()=>Me+JSON.stringify([e,t,n+"."+r]);return new Proxy(i,{get:(a,s)=>"toJSON"===s?o:i[s]||(i[s]=eu(e,t,n+"."+r,s)),apply:(i,o,a)=>Me+JSON.stringify([e,t,n+"."+r,[...a]])})}function tu(e,t,r){!function(e,t){Ql(t,e.$wxs,e.$wxsModules)}(e,t),function(e,t){Ql(t,e.$renderjs,e.$renderjsModules)}(e,t),function(e,t,r){const i=e.mpType||r.$mpType;if(Object.keys(e).forEach((n=>{if(0===n.indexOf("on")){const i=e[n];y(i)?i.forEach((e=>Kl(n,e,r,t))):Kl(n,i,r,t)}})),"page"===i)try{Yt(r,Ve,t.attrs.__pageQuery),n.nextTick((()=>{Yt(r,Le)}))}catch(e){console.error(e.message+"\n"+e.stack)}}(e,t,r)}function nu(e,t,n){return e[t]=n}function ru(e,t,n){if(!t)throw e;const r=h();if(!r||!r.$vm)throw e;Yt(r.$vm,De,e)}function iu(e,t){return e?[...new Set([].concat(e,t))]:t}function ou(){const e=d.getStorageSync("uni_id_token")||"",t=e.split(".");if(!e||3!==t.length)return{uid:null,role:[],permission:[],tokenExpired:0};let n;try{n=JSON.parse((r=t[1],decodeURIComponent(atob(r).split("").map((function(e){return"%"+("00"+e.charCodeAt(0).toString(16)).slice(-2)})).join(""))))}catch(e){throw new Error("获取当前用户信息出错，详细错误信息为："+e.message)}var r;return n.tokenExpired=1e3*n.exp,delete n.exp,delete n.iat,n}function au(e){const t=e._context.config;var n;_(e._component.onError)&&(t.errorHandler=ru),n=t.optionMergeStrategies,it.forEach((e=>{n[e]=iu}));const r=t.globalProperties;!function(e){e.uniIDHasRole=function(e){const{role:t}=ou();return t.indexOf(e)>-1},e.uniIDHasPermission=function(e){const{permission:t}=ou();return this.uniIDHasRole("admin")||t.indexOf(e)>-1},e.uniIDTokenValid=function(){const{tokenExpired:e}=ou();return e>Date.now()}}(r),r.$set=nu,r.$applyOptions=tu}let su=!1;function cu(){if(su)return;let n,r;su=!0;const i=e.requireModule("plus");if(i.getRedirectInfo){const e=i.getRedirectInfo()||{};n=e.path,r=e.query?"?"+e.query:""}else{const e=t.runtime.arguments;if(!e)return;try{const t=JSON.parse(e);n=t.path||t.pathName,r=t.query?"?"+t.query:""}catch(e){}}if(!n||n===c.entryPagePath)return void(r&&(c.entryPageQuery=r));const o=Xt("/"+n);o&&(o.meta.isTabBar||(c.realEntryPagePath=c.realEntryPagePath||c.entryPagePath),c.entryPagePath=n,c.entryPageQuery=r)}const lu="backbutton";function uu(){d.navigateBack({from:"backbutton",success(){}})}function du({data:e}){e&&e.type&&f.subscribeHandler("plusMessage."+e.type,e.args)}function hu(e,t,n=!1){f.subscribe("plusMessage."+e,t,n)}function pu(t){const r={path:c.entryPagePath,query:{},scene:1001,app:t};var i;i=t.$,Kr.forEach((e=>{n.injectHook(Be,e,i)})),Yt(t,Be,r),Yt(t,Le,r);const o=e.requireModule("plus").getAppState;2===(o&&Number(o()))&&Yt(t,Re,r)}function fu(e){return 0===(e=e.replace(/\/$/,"")).indexOf("_")?t.io.convertLocalFileSystemURL(e):e}function gu(){const e=fu(la),n=fu(ua),r=n.split("/");r.pop();const i=r.join("/");t.io.resolveLocalFileSystemURL(t.io.convertAbsoluteFileSystem(i),(t=>{t.createReader().readEntries((function(t){const r=t;r&&r.length&&r.forEach((function(t){t.isDirectory&&0===t.fullPath.indexOf(e)&&0!==t.fullPath.indexOf(n)&&t.removeRecursively()}))}))}))}let mu;function vu(){return mu}const yu=[];function _u(e){yu.push(e)}function bu(e){return yu.find((t=>t.$page.id===e))}function wu(){return yu}function ku(e){const t=yu.findIndex((t=>t===e));-1!==t&&(e.$page.meta.isNVue||vu().unmountPage(e),yu.splice(t,1))}function xu(e,t){const n=bu(parseInt(t));if(!n)return;const r=n.__page_container__;e.forEach((e=>{switch(e[0]){case 20:!function(e,t,n){n.fireEvent(e,t)}(e[1],e[2],r)}}))}const Su={};function Cu(){en("getAdData",((e,n)=>{!function(e,n,r){const{adpid:i,width:o}=e,a=i+"-"+o,s=Su[a];s&&s.length>0?n(s.splice(0,1)[0]):t.ad.getAds(e,(e=>{const t=e.ads;n(t.splice(0,1)[0]),Su[a]=s?s.concat(t):t}),(e=>{r({errCode:e.code,errMsg:e.message})}))}(e,(e=>{n({code:0,data:e})}),(e=>{n({code:1,message:e})}))}))}const Eu=["switchTab","reLaunch","redirectTo","navigateTo","navigateBack"];const Iu="Android"===t.os.name&&parseInt(t.os.version)<6,Tu=Iu?"slide-in-right":"pop-in",Au=300,Ou=Iu?"slide-out-right":"pop-out";const $u=/^#[a-z0-9]{6}$/i;function Nu(e){return e&&($u.test(e)||"transparent"===e)}function Pu(e,n){if(!n.enablePullDownRefresh)return;const r=function(e){return e.offset&&(e.offset=jt(e.offset)),e.height&&(e.height=jt(e.height)),e.range&&(e.range=jt(e.range)),e}(g({},"Android"===t.os.name?Mu:Lu,n.pullToRefresh));e.pullToRefresh=function(e,n){const r=function(e){if(Pt()){const t="caption";return xt(e,[["contentdown",t],["contentover",t],["contentrefresh",t]])}}(e);if(!r)return e;const[i,o,a]=r;(i||o||a)&&d.onLocaleChange((()=>{const r=t.webview.getWebviewById(n.id+"");if(!r)return;const s={support:!0};i&&(s.contentdown={caption:e.contentdown.caption}),o&&(s.contentover={caption:e.contentover.caption}),a&&(s.contentrefresh={caption:e.contentrefresh.caption}),r.setStyle({pullToRefresh:s})}));return e}(r,n)}const Mu={support:!0,style:"circle"},Lu={support:!0,style:"default",height:"50px",range:"200px",contentdown:{caption:""},contentover:{caption:""},contentrefresh:{caption:""}};function Ru(e,n){const{navigationBar:r}=n;if("custom"===r.style)return!1;let i=!0;n.isQuit&&(i=!1);const o={autoBackButton:i};Object.keys(r).forEach((e=>{const t=r[e];"backgroundColor"===e?o.backgroundColor=Nu(t)?t:"#f7f7f7":"titleImage"===e&&t?o.tags=[{tag:"img",src:t,position:{left:"auto",top:"auto",width:"auto",height:"26px"}}]:"buttons"===e&&y(t)?o.buttons=t.map(((e,t)=>(e.onclick=function(e){return function(t){t.index=e,Yt(Ge,t)}}(t),e))):o[e]=t})),e.titleNView=function(e,n){const r=function(e){if(Pt())return xt(e,[["titleText"],["searchInput","placeholder"]])}(e);if(!r)return e;const[i,o]=r;(i||o)&&d.onLocaleChange((()=>{const r=t.webview.getWebviewById(n.id+"");if(!r)return;const a={};i&&(a.titleText=e.titleText),o&&(a.searchInput={placeholder:e.searchInput.placeholder}),r.setStyle({titleNView:a})}));return e}(o,n)}function Bu(e,n){const r={bounce:"vertical"};return Object.keys(n).forEach((e=>{-1===Du.indexOf(e)&&(r[e]=n[e])})),function(e,t,n){n&&t.isNVue&&(e.uniNView={path:n,defaultFontSize:c.defaultFontSize,viewport:c.viewport})}(r,n,e),function(e,n){"hide"===e.popGesture&&delete e.popGesture,n.isQuit&&(e.popGesture="iOS"===t.os.name?"appback":"none")}(r,n),function(e,t){const{backgroundColor:n}=t;n&&Nu(n)&&(e.background||(e.background=n),e.backgroundColorTop||(e.backgroundColorTop=n))}(r,n),Ru(r,n),Pu(r,n),r}const Du=["id","route","isNVue","isQuit","isEntry","isTabBar","tabBarIndex","windowTop","topWindow","leftWindow","rightWindow","maxWidth","usingComponents","disableScroll","enablePullDownRefresh","navigationBar","pullToRefresh","onReachBottomDistance","pageOrientation","backgroundColor"];let ju,Fu,Vu=2;function Uu(){return Vu}function zu(){return Vu++}function Wu(e){return e}function Hu(e,t){const n=t?ye(t,Wu):"";return{path:e.substr(1),query:n?n.substr(1):n}}function qu(e){ju=e}let Yu=t.navigator.setStatusBarStyle;function Ju(e){Fu=e,Yu(e)}function Xu(e){if(!e){const t=Vt();if(!t)return;if(!(e=t.$page.statusBarStyle)||e===Fu)return}e!==Fu&&(Fu=e,t.navigator.setStatusBarStyle(e))}function Gu(e){let t;e.addEventListener("popGesture",(e=>{if("start"===e.type){const e=p(),n=e[e.length-2];t=Fu;const r=n&&n.$page.statusBarStyle;r&&Xu(r)}else"end"!==e.type||e.result?"end"===e.type&&e.result&&(!function(){const e=Vt();e&&ku(e)}(),Xu(),Yt(Le)):Xu(t)}))}function Zu(e){const{emit:n}=f;e.addEventListener("resize",function(e,t){let n;const r=function(){o(n);n=i((()=>e.apply(this,arguments)),t)};return r.cancel=function(){o(n)},r}((function({width:r,height:i}){const o={deviceOrientation:90===Math.abs(t.navigator.getOrientation())?"landscape":"portrait",size:{windowWidth:Math.ceil(r),windowHeight:Math.ceil(i)}};n(We,o,parseInt(e.id))}),50))}t.navigator.setStatusBarStyle=Ju;const Ku={pullToRefresh:Xe,titleNViewSearchInputChanged:Ke,titleNViewSearchInputConfirmed:Qe,titleNViewSearchInputClicked:Ze,titleNViewSearchInputFocusChanged:et};function Qu(e){const n=parseInt(e.id);Object.keys(Ku).forEach((t=>{const r=Ku[t];e.addEventListener(t,(t=>{r===Xe&&ta(e),Yt(n,r,t)}))})),function(e){const{popupSubNVueWebviews:t}=e;t&&e.addEventListener("close",(()=>{Object.keys(t).forEach((e=>{t[e].close("none")}))}))}(e),Zu(e),"iOS"===t.os.name&&(!function(e){if(e.nvue)return;const t=e.id,{subscribe:n,unsubscribe:r}=f,i=(e,n)=>{if(t!==n)return;r($l,i);const o=bu(parseInt(n));o&&o.__page_container__.restore()};e.addEventListener("recovery",(()=>{n($l,i)}))}(e),Gu(e))}function ed(t,n,r,i){const o=Bu(n,i);o.uniPageUrl=Hu(n,r);const a=!!i.isTabBar;i.isNVue?o.isTab=a:o.debugRefresh=function(e,t,n){const r=n?ye(n,Wu):"";return{isTab:e,arguments:JSON.stringify({path:t.substr(1),query:r?r.substr(1):r})}}(a,n,r),o.locale=e.requireModule("plus").getLanguage(),t.setStyle(o)}function td(e,n,r,i){"1"!==e.id&&i.isNVue||ed(e,"",r,i),function(e,n,r){(r.subNVues||[]).forEach((r=>{if(!r.path)return;const i=r.style||{},o="navigationBar"===r.type,a="popup"===r.type;i.uniNView={path:r.path.replace(".nvue",".js"),defaultFontSize:c.defaultFontSize,viewport:c.viewport};const s={__uniapp_host:n,__uniapp_origin:i.uniNView.path.split("?")[0].replace(".js",""),__uniapp_origin_id:e.id,__uniapp_origin_type:e.__uniapp_type};let l;o?(i.position="dock",i.dock="top",i.top="0",i.width="100%",i.height=String(44+ra()),delete i.left,delete i.right,delete i.bottom,delete i.margin):a&&(i.position="absolute",l=So(n)?Xo:e,s.__uniapp_mask=i.mask||"rgba(0,0,0,0.5)",s.__uniapp_mask_id=l.id),delete i.mask;const u=t.webview.create("",r.id,i,s);if(a){l.popupSubNVueWebviews||(l.popupSubNVueWebviews={}),l.popupSubNVueWebviews[u.id]=u;const e=function(){l.setStyle({mask:"none"}),u.hide("auto")};l.addEventListener("maskClick",e);let n=!1;u.addEventListener("show",(()=>{n||(t.key.removeEventListener("backbutton",uu),t.key.addEventListener("backbutton",e),n=!0)})),u.addEventListener("hide",(()=>{n&&(t.key.removeEventListener("backbutton",e),t.key.addEventListener("backbutton",uu),n=!1)})),u.addEventListener("close",(()=>{delete l.popupSubNVueWebviews[u.id],n&&(t.key.removeEventListener("backbutton",e),t.key.addEventListener("backbutton",uu),n=!1)}))}else e.append(u)}))}(e,n,i),Qu(e)}function nd(e){return e.routeOptions.meta.isNVue?function({path:e,query:n,routeOptions:r,webviewStyle:i}){const o=zu(),a=Bu(e,r.meta);return a.uniPageUrl=Hu(e,n),a.isTab=!!r.meta.isTabBar,t.webview.create("",String(o),a,g({nvue:!0},i))}(e):2===Uu()?t.webview.getLaunchWebview():ju}function rd(e,t){f.once("onWebviewReady."+e,t)}function id(e,t,n){e[e.__preload__?"hide":"close"](t,n)}function od(e,t,n,r,a){void 0===a&&(a=e.nvue?0:100);const s=function(){s._called||(s._called=!0,r&&r(),dd())};s._called=!1,i((()=>{const r=i((()=>{s()}),n+150);e.show(t,n,(()=>{s._called||o(r),s()}))}),a)}let ad=!1;function sd(e,t,n){ad={path:e,nvue:Gt(e).isNVue,callback:t}}function cd(e,t,n){ku(e),id(e.$getAppWebview(),t,n)}function ld(e,t,n=!1){if(!n&&ad)return console.error(`Waiting to navigate to: ${ad.path}, do not operate continuously: ${e}.`);if("native"===c.renderer)return 0===p().length?sd(e,t):t();const r=!ju||ju&&ju.__uniapp_route,i=ju&&!ju.loaded;r||i?sd(e,t):t(),i&&rd(ju.id,ud)}function ud(){if(!ad)return;const{callback:e}=ad;return ad=!1,e()}function dd(){if("native"===c.renderer){if(!ad)return;return ad.nvue?ud():void 0}const e=(ju&&!ju.__uniapp_route||(ju=t.webview.create("_www/__uniappview.html",String(zu()),{contentAdjust:!1})),ju);if(ad)return ad.nvue?ud():void(e.loaded?ad.callback():rd(e.id,ud))}class hd extends class extends class{constructor(){this.listeners=Object.create(null)}dispatchEvent(e){const t=this.listeners[e.type];if(!t)return!1;const n=Ee(e),r=t.length;for(let e=0;e<r&&(t[e].call(this,n),!n._end);e++);return n.cancelable&&n.defaultPrevented}addEventListener(e,t,n){e=Se(e,n),(this.listeners[e]||(this.listeners[e]=[])).push(t)}removeEventListener(e,t,n){e=Se(e,n);const r=this.listeners[e];if(!r)return;const i=r.indexOf(t);i>-1&&r.splice(i,1)}}{constructor(e,t,n){if(super(),this.pageNode=null,this.parentNode=null,this._text=null,n){const{pageNode:e}=n;e&&(this.pageNode=e,this.nodeId=e.genId(),!e.isUnmounted&&e.onCreate(this,t))}this.nodeType=e,this.nodeName=t,this.childNodes=[]}get firstChild(){return this.childNodes[0]||null}get lastChild(){const{childNodes:e}=this,t=e.length;return t?e[t-1]:null}get nextSibling(){return Te(this,"n")}get nodeValue(){return null}set nodeValue(e){}get textContent(){return this._text||""}set textContent(e){this._text=e,this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onTextContent(this,e)}get parentElement(){const{parentNode:e}=this;return e&&1===e.nodeType?e:null}get previousSibling(){return Te(this,"p")}appendChild(e){return this.insertBefore(e,null)}cloneNode(e){const t=g(Object.create(Object.getPrototypeOf(this)),this),{attributes:n}=t;return n&&(t.attributes=g({},n)),e&&(t.childNodes=t.childNodes.map((e=>e.cloneNode(!0)))),t}insertBefore(e,t){var n;!function(e){const{parentNode:t}=e;t&&t.removeChild(e)}(e),e.pageNode=this.pageNode,e.parentNode=this,!(n=e).nodeId&&n.pageNode&&(n.nodeId=n.pageNode.genId());const{childNodes:r}=this;if(t){const n=r.indexOf(t);if(-1===n)throw new xe("Failed to execute 'insertBefore' on 'Node': The node before which the new node is to be inserted is not a child of this node.");r.splice(n,0,e)}else r.push(e);return this.pageNode&&!this.pageNode.isUnmounted?this.pageNode.onInsertBefore(this,e,t):e}removeChild(e){const{childNodes:t}=this,n=t.indexOf(e);if(-1===n)throw new xe("Failed to execute 'removeChild' on 'Node': The node to be removed is not a child of this node.");return e.parentNode=null,t.splice(n,1),this.pageNode&&!this.pageNode.isUnmounted?this.pageNode.onRemoveChild(e):e}}{constructor(e,t,n=!1){super(0,"#page",null),this._id=1,this._created=!1,this._updating=!1,this._createActionMap=new Map,this.updateActions=[],this.dicts=[],this.nodeId=0,this.pageId=e,this.pageNode=this,this.options=t,this.isUnmounted=!1,this.createAction=[1,t],this.createdAction=[2],this.normalizeDict=this._normalizeDict.bind(this),this._update=this.update.bind(this),n&&this.setup()}_normalizeDict(e,t=!0){if(!S(e))return this.addDict(e);const n=[];return Object.keys(e).forEach((r=>{const i=[this.addDict(r)],o=e[r];t?i.push(this.addDict(o)):i.push(o),n.push(i)})),n}addDict(e){const{dicts:t}=this,n=t.indexOf(e);return n>-1?n:t.push(e)-1}onInjectHook(e){e!==qe&&e!==Je||this.scrollAction||(this.scrollAction=[15,this.options.onReachBottomDistance],this.push(this.scrollAction))}onCreate(e,t){return function(e,t,n){e.push([3,t,e.addDict(n),-1,-1])}(this,e.nodeId,t),e}onInsertBefore(e,t,n){return function(e,t,n,r){const i=t.toJSON({attr:!0,normalize:e.normalizeDict});e.push([4,t.nodeId,n,r],Object.keys(i).length?i:void 0)}(this,t,e.nodeId,n&&n.nodeId||-1),t}onRemoveChild(e){var t,n;return t=this,n=e.nodeId,t.push([5,n]),e}onAddEvent(e,t,n){e.parentNode&&function(e,t,n,r){e.push([8,t,e.addDict(n),r])}(this,e.nodeId,t,n)}onAddWxsEvent(e,t,n,r){e.parentNode&&function(e,t,n,r,i){e.push([12,t,e.addDict(n),e.addDict(r),i])}(this,e.nodeId,t,n,r)}onRemoveEvent(e,t){e.parentNode&&function(e,t,n){e.push([9,t,e.addDict(n)])}(this,e.nodeId,t)}onSetAttribute(e,t,n){e.parentNode&&function(e,t,n,r){e.push([6,t,e.addDict(n),gd(e,n,r)])}(this,e.nodeId,t,n)}onRemoveAttribute(e,t){var n,r,i;e.parentNode&&(n=this,r=e.nodeId,i=t,n.push([7,r,n.addDict(i)]))}onTextContent(e,t){e.parentNode&&md(this,e.nodeId,t)}onNodeValue(e,t){e.parentNode&&md(this,e.nodeId,t)}genId(){return this._id++}push(e,t){if(!this.isUnmounted){switch(e[0]){case 3:this._createActionMap.set(e[1],e);break;case 4:const n=this._createActionMap.get(e[1]);n&&(n[3]=e[2],n[4]=e[3],t&&(n[5]=t))}4!==e[0]&&this.updateActions.push(e),this._updating||(this._updating=!0,n.queuePostFlushCb(this._update))}}restore(){this.clear(),this.push(this.createAction),this.scrollAction&&this.push(this.scrollAction);const e=t=>{this.onCreate(t,t.nodeName),this.onInsertBefore(t.parentNode,t,null),t.childNodes.forEach((t=>{e(t)}))};this.childNodes.forEach((t=>e(t))),this.push(this.createdAction)}setup(){this.send([this.createAction])}update(){const{dicts:e,updateActions:t,_createActionMap:n}=this;this._created||(this._created=!0,t.push(this.createdAction)),t.length&&(e.length&&t.unshift([0,e]),this.send(t)),this.clear()}clear(){this.dicts.length=0,this.updateActions.length=0,this._updating=!1,this._createActionMap.clear()}send(e){f.publishHandler(Ol,e,this.pageId)}fireEvent(e,t){const n=fd(e,this);n&&n.dispatchEvent(t)}}function pd(e,t,n){if("number"==typeof n&&(n=function(e){const t=bu(e);return t?t.__page_container__:null}(n)),n[e]===t)return n;const{childNodes:r}=n;for(let n=0;n<r.length;n++){const i=pd(e,t,r[n]);if(i)return i}return null}function fd(e,t){return pd("nodeId",e,t)}function gd(e,t,n){return"style"===t&&S(n)?e.normalizeDict(n):e.addDict(n)}function md(e,t,n){e.push([10,t,e.addDict(n)])}function vd(e){const r=e.setup;return e.inheritAttrs=!1,e.setup=(e,i)=>{const{attrs:{__pageId:o,__pagePath:a,__pageQuery:s,__pageInstance:c}}=i,l=n.getCurrentInstance().proxy;if(un(l,c),_u(function(e,n,r){const i=()=>t.webview.getWebviewById(e+"");return n.$getAppWebview=i,n.$.ctx.$scope={$getAppWebview:i},n.getOpenerEventChannel=()=>(r.eventChannel||(r.eventChannel=new rt(e)),r.eventChannel),n}(o,l,c)),n.onMounted((()=>{n.nextTick((()=>{Yt(l,Ue)}))})),n.onBeforeUnmount((()=>{Yt(l,ze)})),r)return r(s,i)},e}const yd=new Map;function _d(e,t,n,r,i){const o=function(e,t,n){return new hd(e,t,n)}(e,i,!0),a=vu(),s=yd.get(t)(),c=i=>a.mountPage(i,{__pageId:e,__pagePath:t,__pageQuery:n,__pageInstance:r},o);return w(s)?s.then((e=>c(e))):c(s)}const bd={};function wd({url:e,path:n,query:r,openType:i,webview:o,eventChannel:a}){if(o&&cu(),bd[e]){const t=o=bd[e];if(t.__page__){if(!p().find((e=>e===t.__page__)))return a&&(t.__page__.$page.eventChannel=a),_u(t.__page__),t;o=void 0}}const s=function(e,t){const n=JSON.parse(JSON.stringify(Xt(e)));return n.meta=qt(n.meta),"reLaunch"===t||!c.realEntryPagePath&&0===p().length?n.meta.isQuit=!0:n.meta.isTabBar||(n.meta.isQuit=!1),n}(n,i);o?(o=t.webview.getWebviewById(o.id)).nvue=s.meta.isNVue:o=nd({path:n,routeOptions:s,query:r}),s.meta.id=parseInt(o.id);!!s.meta.isTabBar&&Xo.append(o),td(o,n,r,s.meta);const l=n.substr(1);o.__uniapp_route=l;const u=function(e,t,n,r,i){const{id:o,route:a}=r;return{id:o,path:"/"+a,route:a,fullPath:t,options:n,meta:r,openType:e,eventChannel:i,statusBarStyle:"#000000"===r.navigationBar.titleColor?"dark":"light"}}(i,e,r,s.meta,a);if(function(e){"1"===e.id&&e.nvue&&(c.splashscreen&&c.splashscreen.autoclose&&!c.splashscreen.alwaysShowBeforeRender&&t.navigator.closeSplashscreen(),c.onReady((function(){dd()})))}(o),o.nvue){const e=function(e,t,n){return{$:{},onNVuePageCreated(e,r){e.$={},e.$getAppWebview=()=>t,e.getOpenerEventChannel=r.getOpenerEventChannel,un(e,n);const i=wu(),o=i.findIndex((e=>e===r));o>-1&&i.splice(o,1,e),t.__preload__&&(t.__page__=e)},$getAppWebview:()=>t,getOpenerEventChannel:()=>(n.eventChannel||(n.eventChannel=new rt(e)),n.eventChannel)}}(parseInt(o.id),o,u);un(e,u),_u(e)}else _d(parseInt(o.id),l,r,u,function({meta:e}){const t=ra(),{platform:n,pixelRatio:r,windowWidth:i}=me();return{css:!0,route:e.route,version:1,locale:"",platform:n,pixelRatio:r,windowWidth:i,disableScroll:!0===e.disableScroll,onPageScroll:!1,onPageReachBottom:!1,onReachBottomDistance:v(e,"onReachBottomDistance")?e.onReachBottomDistance:50,statusbarHeight:t,windowTop:"float"===e.navigationBar.type?t+44:0,windowBottom:Xo.indexOf(e.route)>=0&&Xo.cover?Xo.height:0}}(s));return o}const kd=(e,{resolve:t,reject:n})=>{const{url:r,events:i,animationType:o,animationDuration:a}=e,{path:s,query:l}=ke(r),[u,d]=function(e,t,n){const{globalStyle:r}=c,i=Gt(e);return[t||i.animationType||r.animationType||Tu,n||i.animationDuration||r.animationDuration||Au]}(s,o,a);ld(s,(()=>{(function({url:e,path:t,query:n,events:r,aniType:i,aniDuration:o}){Yt(Re);const a=new rt(Uu()+1,r);return new Promise((r=>{od(wd({url:e,path:t,query:n,openType:"navigateTo",eventChannel:a}),i,o,(()=>{r({eventChannel:a})})),Xu()}))})({url:r,path:s,query:l,events:i,aniType:u,aniDuration:d}).then(t).catch(n)}),"appLaunch"===e.openType)},xd=pe(Li,kd,0,Vi);const Sd=(e,{resolve:t,reject:n})=>{const{url:r}=e,{path:o,query:a}=ke(r);ld(o,(()=>{(function({url:e,path:t,query:n}){Xo.switchTab(t.slice(1));const r=p(),o=r.length;let a,s,c=!1,l=!1;o>=1&&(a=r[o-1],a&&!a.__isTabBar?(l=!0,r.reverse().forEach((e=>{e.__isTabBar||e===a||cd(e,"none")})),ku(a),i((()=>{"redirectTo"===a.$page.openType?id(a.$getAppWebview(),Ou,Au):id(a.$getAppWebview(),"auto")}),100)):c=!0);wu().forEach((e=>{"/"+e.route===t?(e.$.__isActive||(l=!0),e.$.__isActive=!0,s=e):e.__isTabBar&&(e.$.__isActive=!1)})),a===s&&(c=!1);a&&c&&Yt(a,Re);return new Promise((r=>{if(s){const e=s.$getAppWebview();e.show("none"),l&&!e.__preload__&&Yt(s,Le),Xu(),r(void 0)}else od(wd({url:e,path:t,query:n,openType:"switchTab"}),"none",0,(()=>{Xu(),r(void 0)}),70)}))})({url:r,path:o,query:a}).then(t).catch(n)}),"appLaunch"===e.openType)},Cd=pe(Di,Sd,0,Wi);let Ed=!1;function Id(e,n){const r="1"===n;if(!r||!Ed){if(r?(Ed=!0,qu(t.webview.getLaunchWebview())):ju||qu(t.webview.getWebviewById(n)),ju.id!==n)return console.error(`webviewReady[${ju.id}][${n}] not match`);ju.loaded=!0,f.emit("onWebviewReady."+n),r&&function(){const{autoclose:e,alwaysShowBeforeRender:n}=c.splashscreen;e&&!n&&t.navigator.closeSplashscreen();const r="/"+c.entryPagePath,i=Xt(r);if(!i.meta.isNVue){const e={url:r+(c.entryPageQuery||""),openType:"appLaunch"},t={resolve(){},reject(){}};i.meta.isTabBar?Sd(e,t):kd(e,t)}}()}}function Td(e,t){const n=bu(parseInt(t));n&&(n.__uniapp_webview=!0)}function Ad(e,t){const n=bu(parseInt(t));n&&delete n.__uniapp_webview}const Od=({name:e,arg:t},n)=>{"postMessage"===e?function(e,t){const n=function(e,t){return pd("nodeName",e.toUpperCase(),t)}("web-view",parseInt(e));n&&n.dispatchEvent(Ee({type:"onMessage",target:Object.create(null),currentTarget:Object.create(null),detail:{data:[t]}}))}(n[0],t):d[e](g(t,{fail(e){console.error(e.errMsg)}}))};function $d({nodeId:e,ownerId:t,method:n,args:r},i){const o=fd(e,parseInt(i));if(!o)return;const a=function(e,t){if(!t)return null;if(t.uid===e)return t.proxy;let n=t.parent;for(;n;){if(n.uid===e)return n.proxy;n=n.parent}return t.proxy}(t,o.__vueParentComponent);a&&a[n]&&a[n](r)}function Nd(){const{subscribe:e,subscribeHandler:t}=f;hu("subscribeHandler",(({type:e,data:n,pageId:r})=>{t(e,n,r)})),hu("WEB_INVOKE_APPSERVICE",(({data:e,webviewIds:t})=>{Od(e,t)})),"native"!==c.renderer&&(e($l,Id),e(Ol,xu),f.subscribe(Bt,tn),Cu(),Eu.forEach((e=>{en(e,(t=>{d[e](g(t,{fail(e){console.error(e.errMsg)}}))}))})),e("webviewInserted",Td),e("webviewRemoved",Ad),e("onWxsInvokeCallMethod",$d))}let Pd;const Md={globalData:{}};function Ld(r){!function(e){const t=e.$.appContext;mu=g(t.app,{mountPage(e,r,i){const o=n.createVNode(e,r);o.appContext=t,o.__page_container__=i,n.render(o,i);const a=o.component.proxy;return a.__page_container__=i,a},unmountPage:e=>{const{__page_container__:t}=e;t&&(t.isUnmounted=!0,n.render(null,t))}})}(r),Pd=r,function(e){e.$vm=e,e.$mpType="app";const t=n.ref(St().getLocale());Object.defineProperty(e,"$locale",{get:()=>(d.$nvueState&&d.$nvueState.locale,t.value),set(e){d.$nvueState&&(d.$nvueState.locale=e),t.value=e}})}(Pd),g(Pd,Md);const{$options:o}=r;o&&(Pd.globalData=g(o.globalData||{},Pd.globalData)),ln(),cu(),function(){const{tabBar:e}=c;if(!(e&&e.list&&e.list.length))return;const{entryPagePath:t}=c;e.selectedIndex=0;const n=e.list.findIndex((e=>e.pagePath===t));Xo.init(e,((e,t)=>{d.switchTab({url:"/"+e.pagePath,openType:"switchTab",from:"tabBar",success(){Yt(Ye,{index:t,text:e.text,pagePath:e.pagePath})}})})),-1!==n&&(e.selectedIndex=n,0!==n&&Xo.switchTab(t))}(),function(){const n=t.globalEvent,r=e.requireModule("globalEvent"),i=f.emit;e.config.preload?t.key.addEventListener(lu,uu):n.addEventListener("splashclosed",(()=>{t.key.addEventListener(lu,uu)})),n.addEventListener("pause",(()=>{i(nt)})),n.addEventListener("resume",(()=>{i(tt)})),r.addEventListener("uistylechange",(function(e){const t={theme:e.uistyle};i(je,t)}));let o=0;n.addEventListener("KeyboardHeightChange",(function(e){o!==e.height&&(o=e.height,i(Fe,{height:o}))})),n.addEventListener("plusMessage",du),n.addEventListener("WebviewPostMessage",du)}(),Nd(),pu(r),i(gu,1e4),c.ready=!0}var Rd={install(e){!function(e){const t=e.mount;e.mount=n=>{const r=t.call(e,n);return"#app"===n&&Ld(r),r}}(e),au(e),pn(e)}};const Bd="load",Dd="close",jd="error",Fd="adClicked";class Vd{constructor(){this._callbacks={}}onLoad(e){this._addEventListener(Bd,e)}onClose(e){this._addEventListener(Dd,e)}onError(e){this._addEventListener(jd,e)}offLoad(e){this._removeEventListener(Bd,e)}offClose(e){this._removeEventListener(Dd,e)}offError(e){this._removeEventListener(jd,e)}_addEventListener(e,t){"function"==typeof t&&(this._callbacks[e]||(this._callbacks[e]=[]),this._callbacks[e].push(t))}_removeEventListener(e,t){const n=this._callbacks[e],r=n.indexOf(t);r>-1&&n.splice(r,1)}_dispatchEvent(e,t){this._callbacks[e].forEach((e=>{e(t||{})}))}}class Ud extends Vd{constructor(e,t){super(),this.preload=!0,this._isLoaded=!1,this._isLoading=!1,this._loadPromiseResolve=null,this._loadPromiseReject=null,this._showPromiseResolve=null,this._showPromiseReject=null,this.preload=void 0!==t.preload&&t.preload;const n=this._adInstance=e;n.onLoad((()=>{this._isLoaded=!0,this._isLoading=!1,null!=this._loadPromiseResolve&&(this._loadPromiseResolve(),this._loadPromiseResolve=null),null!=this._showPromiseResolve&&(this._showPromiseResolve(),this._showPromiseResolve=null,this._showAd()),this._dispatchEvent(Bd,{})})),n.onClose((e=>{this._isLoaded=!1,this._isLoading=!1,this._dispatchEvent(Dd,e),!0===this.preload&&this._loadAd()})),n.onError((e=>{this._isLoading=!1;const t={code:e.code,errMsg:e.message};this._dispatchEvent(jd,t);const n=new Error(JSON.stringify(t));null!=this._loadPromiseReject&&(this._loadPromiseReject(n),this._loadPromiseReject=null),null!=this._showPromiseReject&&(this._showPromiseReject(n),this._showPromiseReject=null)})),n.onAdClicked&&n.onAdClicked((()=>{this._dispatchEvent(Fd,{})}))}getProvider(){return this._adInstance.getProvider()}load(){return new Promise(((e,t)=>{this._loadPromiseResolve=e,this._loadPromiseReject=t,this._isLoading||(this._isLoaded?e(""):this._loadAd())}))}show(){return new Promise(((e,t)=>{this._showPromiseResolve=e,this._showPromiseReject=t,this._isLoading||(this._isLoaded?(this._showAd(),e("")):this._loadAd())}))}destroy(){this._adInstance.destroy()}_loadAd(){this._isLoaded=!1,this._isLoading=!0,this._adInstance.load()}_showAd(){this._adInstance.show()}}class zd extends Ud{constructor(e){super(t.ad.createRewardedVideoAd(e),e),this._loadAd()}}const Wd=he(0,(e=>new zd(e)),0,{formatArgs:{adpid:"",adUnitId:""}});class Hd extends Ud{constructor(e){super(t.ad.createFullScreenVideoAd(e),e),this.preload=!1}}const qd=he(0,(e=>new Hd(e)),0,{formatArgs:{adpid:""}});class Yd extends Ud{constructor(e){super(t.ad.createInterstitialAd(e),e),this.preload=!1,this._loadAd()}}const Jd=he(0,(e=>new Yd(e)),0,{formatArgs:{adpid:"",adUnitId:""}}),Xd={},Gd={};class Zd extends Vd{constructor(e){super(),this._adpid="",this._provider="",this._userData=null,this._isLoaded=!1,this._isLoading=!1,this._loadPromiseResolve=null,this._loadPromiseReject=null,this._showPromiseResolve=null,this._showPromiseReject=null,this._adInstance=null,this._adError="",this._adpid=e.adpid,this._provider=e.provider,this._userData=e.userData,i((()=>{this._init()}))}_init(){this._adError="",function(e){const t=e.provider;if(Xd[t]||(Xd[t]={}),"object"==typeof Xd[t].plugin)return void e.success(Xd[t].plugin);if(Gd[t]||(Gd[t]=[]),Gd[t].push(e),!0===Xd[t].status)return void(e.__plugin=Xd[t].plugin);Xd[t].status=!0;const n=Ga(t);if(!n||!n.initSDK)return Gd[t].forEach((e=>{e.fail({code:-1,message:"provider ["+t+"] invalid"})})),Gd[t].length=0,void(Xd[t].status=!1);Xd[t].plugin=n,e.__plugin=n,n.initSDK((e=>{const r=1===e.code||"1"===e.code;r?Xd[t].plugin=n:Xd[t].status=!1,Gd[t].forEach((t=>{r?t.success(t.__plugin):t.fail(e)})),Gd[t].length=0}))}({provider:this._provider,success:e=>{this._adInstance=e,this._userData&&this.bindUserData(this._userData),this._loadAd()},fail:e=>{this._adError=e,null!=this._loadPromiseReject&&(this._loadPromiseReject(this._createError(e)),this._loadPromiseReject=null),this._dispatchEvent(jd,e)}})}getProvider(){return this._provider}load(){return new Promise(((e,t)=>{this._loadPromiseResolve=e,this._loadPromiseReject=t,this._isLoading||(this._adError?this._init():this._isLoaded?e(""):this._loadAd())}))}show(){return new Promise(((e,t)=>{this._showPromiseResolve=e,this._showPromiseReject=t,this._isLoading||(this._adError?this._init():this._isLoaded?(this._showAd(),e("")):this._loadAd())}))}reportExposure(){null!==this._adInstance&&this._adInstance.reportExposure()}bindUserData(e){null!==this._adInstance&&this._adInstance.bindUserData(e)}destroy(){null!==this._adInstance&&this._adInstance.destroy&&this._adInstance.destroy({adpid:this._adpid})}_loadAd(){if(null!==this._adInstance){if(!0===this._isLoading)return;this._isLoading=!0,this._adInstance.loadData({adpid:this._adpid},(e=>{this._isLoaded=!0,this._isLoading=!1,null!=this._loadPromiseResolve&&(this._loadPromiseResolve(),this._loadPromiseResolve=null),null!=this._showPromiseResolve&&(this._showPromiseResolve(),this._showPromiseResolve=null,this._showAd()),this._dispatchEvent(Bd,e)}),(e=>{this._isLoading=!1,null!=this._showPromiseReject&&(this._showPromiseReject(this._createError(e)),this._showPromiseReject=null),this._dispatchEvent(jd,e)}))}}_showAd(){null!==this._adInstance&&!0===this._isLoaded&&this._adInstance.show({adpid:this._adpid},(()=>{this._isLoaded=!1}),(e=>{this._isLoaded=!1,null!=this._showPromiseReject&&(this._showPromiseReject(this._createError(e)),this._showPromiseReject=null),this._dispatchEvent(jd,e)}))}_createError(e){return new Error(JSON.stringify(e))}}const Kd=he(0,(e=>new Zd(e)),0,_o),Qd=pe("navigateBack",((e,{resolve:n,reject:r})=>{const o=Vt();if(!o)return r("getCurrentPages is empty");if(Yt(o,He,{from:e.from}))return n();if(d.hideToast(),d.hideLoading(),o.$page.meta.isQuit)Et(),eh?Date.now()-eh<2e3&&t.runtime.quit():(eh=Date.now(),t.nativeUI.toast(St().t("uni.app.quit")),i((()=>{eh=0}),2e3));else if(1===o.$page.id&&c.realEntryPagePath)c.entryPagePath=c.realEntryPagePath,delete c.realEntryPagePath,d.reLaunch({url:"/"+c.entryPagePath});else{const{delta:n,animationType:r,animationDuration:i}=e;!function(e,n,r){const i=p(),o=i.length,a=i[o-1];e>1&&i.slice(o-e,o-1).reverse().forEach((e=>{id(t.webview.getWebviewById(e.$page.id+""),"none",0)}));const s=function(t){n?id(t,n,r||Au):"redirectTo"===a.$page.openType?id(t,Ou,Au):id(t,"auto"),i.slice(o-e,o).forEach((e=>ku(e))),Xu(),Yt(Le)},c=t.webview.getWebviewById(a.$page.id+"");if(!a.__uniapp_webview)return s(c);!function(e,t){const n=e.children();if(!n||!n.length)return t();const r=n.find((e=>0===e.id.indexOf("webviewId")))||n[0];r.canBack((({canBack:e})=>{e?r.back():t()}))}(c,(()=>{s(c)}))}(n,r,i)}return n()}),0,Hi);let eh=0;const th=pe(Ri,(({url:e},{resolve:t,reject:n})=>{const{path:r,query:i}=ke(e);ld(r,(()=>{(function({url:e,path:t,query:n}){const r=Vt();return r&&ku(r),new Promise((i=>{od(wd({url:e,path:t,query:n,openType:"redirectTo"}),"none",0,(()=>{if(r){const e=r.$getAppWebview();e.__preload__&&function(e){const t=Object.keys(bd).find((t=>bd[t].id===e.id));t&&delete bd[t]}(e),e.close("none")}i(void 0)})),Xu()}))})({url:e,path:r,query:i}).then(t).catch(n)}))}),0,Ui);const nh=pe(Bi,(({url:e},{resolve:t,reject:n})=>{const{path:r,query:i}=ke(e);ld(r,(()=>{(function({url:e,path:t,query:n}){return new Promise((r=>{const i=wu().slice(0);l.find((e=>e.path===t)).meta.isTabBar&&Xo.switchTab(t.slice(1)),od(wd({url:e,path:t,query:n,openType:"reLaunch"}),"none",0,(()=>{i.forEach((e=>cd(e,"none"))),r(void 0)})),Xu()}))})({url:e,path:r,query:i}).then(t).catch(n)}))}),0,zi);const rh=he(0,(({url:e})=>{const t=function({url:e}){const t=bd[e];return t&&(t.__page__&&p().find((e=>e===t.__page__))?t.__preload__=!1:t.close("none"),delete bd[e]),t}({url:e});return t?{id:t.id,url:e,errMsg:"unPreloadPage:ok"}:{url:e,errMsg:"unPreloadPage:fail not found"}})),ih=pe(ji,(({url:e},{resolve:t,reject:n})=>{const r=e.split("?");t({id:function({url:e,path:t,query:n}){if(!bd[e]){const r=JSON.parse(JSON.stringify(l.find((e=>e.path===t))));bd[e]=nd({path:t,routeOptions:r,query:n,webviewStyle:{__preload__:!0,__query__:JSON.stringify(n)}})}return bd[e]}({url:e,path:r[0],query:we(r[1]||"")}).id,url:e,errMsg:"preloadPage:ok"})}));var oh={uni:{__proto__:null,navigateTo:xd,switchTab:Cd,upx2px:Mn,addInterceptor:Bn,removeInterceptor:Dn,promiseInterceptor:jn,arrayBufferToBase64:ge,base64ToArrayBuffer:fe,createIntersectionObserver:Tr,createMediaQueryObserver:$r,createSelectorQuery:Dr,createVideoContext:Yn,createMapContext:Gn,createAnimation:Ur,onWindowResize:Wr,offWindowResize:Hr,onTabBarMidButtonTap:zr,createCanvasContext:vr,canvasGetImageData:yr,canvasPutImageData:_r,canvasToTempFilePath:br,getSelectedTextRange:Zr,getLocale:Jr,setLocale:Gr,$on:Vn,$off:zn,$once:Un,$emit:Wn,onAppLaunch:function(e){const t=h({allowDefault:!0});if(t&&t.$vm)return n.injectHook(Be,e,t.$vm.$);Kr.push(e)},onLocaleChange:Xr,setStorageSync:Io,setStorage:To,getStorageSync:Oo,getStorage:$o,removeStorageSync:No,removeStorage:Po,clearStorageSync:Mo,clearStorage:Lo,getStorageInfoSync:Ro,getStorageInfo:Bo,getFileInfo:Do,openDocument:jo,saveFile:zo,getSystemInfoSync:oa,getSystemInfo:aa,onCompassChange:ha,offCompassChange:pa,startCompass:fa,stopCompass:ga,vibrateShort:ma,vibrateLong:va,onAccelerometerChange:_a,offAccelerometerChange:ba,startAccelerometer:wa,stopAccelerometer:ka,onBluetoothDeviceFound:xa,onBluetoothAdapterStateChange:Sa,onBLEConnectionStateChange:Ca,onBLECharacteristicValueChange:Ea,openBluetoothAdapter:Ia,closeBluetoothAdapter:Ta,getBluetoothAdapterState:Aa,startBluetoothDevicesDiscovery:Oa,stopBluetoothDevicesDiscovery:$a,getBluetoothDevices:Na,getConnectedBluetoothDevices:Pa,createBLEConnection:Ma,closeBLEConnection:La,getBLEDeviceServices:Ra,getBLEDeviceCharacteristics:Ba,notifyBLECharacteristicValueChange:Da,readBLECharacteristicValue:ja,writeBLECharacteristicValue:Fa,setBLEMTU:Va,getBLEDeviceRSSI:Ua,onBeaconUpdate:za,onBeaconServiceChange:Wa,getBeacons:Ha,startBeaconDiscovery:qa,stopBeaconDiscovery:Ya,makePhoneCall:Ja,addPhoneContact:Xa,getClipboardData:Za,setClipboardData:Ka,onNetworkStatusChange:ts,offNetworkStatusChange:ns,getNetworkType:rs,checkIsSupportSoterAuthentication:ss,checkIsSoterEnrolledInDevice:ls,startSoterAuthentication:us,scanCode:ks,onThemeChange:xs,getScreenBrightness:Ss,setScreenBrightness:Cs,setKeepScreenOn:Es,getImageInfo:Is,getVideoInfo:Ts,previewImage:As,getRecorderManager:Ds,saveVideoToPhotosAlbum:js,saveImageToPhotosAlbum:Fs,compressImage:Vs,compressVideo:Us,chooseImage:zs,chooseVideo:Ws,showKeyboard:Hs,hideKeyboard:qs,onKeyboardHeightChange:Js,offKeyboardHeightChange:Xs,downloadFile:Zs,request:ec,configMTLS:tc,connectSocket:cc,sendSocketMessage:lc,closeSocket:uc,onSocketOpen:hc,onSocketError:pc,onSocketMessage:fc,onSocketClose:gc,uploadFile:vc,createInnerAudioContext:Ic,getBackgroundAudioManager:Uc,createLivePusherContext:Wc,getLocation:Kc,chooseLocation:Qc,openLocation:el,showModal:tl,showActionSheet:nl,showLoading:sl,showToast:ll,hideToast:ul,hideLoading:dl,startPullDownRefresh:pl,stopPullDownRefresh:fl,loadFontFace:gl,pageScrollTo:ml,setNavigationBarTitle:vl,showNavigationBarLoading:yl,hideNavigationBarLoading:_l,setNavigationBarColor:bl,setTabBarBadge:wl,setTabBarItem:kl,setTabBarStyle:xl,hideTabBar:Sl,showTabBar:Cl,showTabBarRedDot:El,removeTabBarBadge:Tl,hideTabBarRedDot:Al,getSubNVueById:function(e,t){return new Pl(e,t)},getProvider:Ll,login:Bl,getUserInfo:jl,getUserProfile:Fl,preLogin:Vl,closeAuthView:zl,getCheckBoxState:Wl,registerRuntime:ql,share:Xl,shareWithSystem:Gl,requestPayment:Zl,requireNativePlugin:Ga,__vuePlugin:Rd,restoreGlobal:function(r,l,u,d,h,p,f){n=r,t!==u&&(e=l,function(e){Yu=e}((t=u).navigator.setStatusBarStyle),t.navigator.setStatusBarStyle=Ju,i=d,o=h,a=p,s=f),c.serviceReady=!0},createRewardedVideoAd:Wd,createFullScreenVideoAd:qd,createInterstitialAd:Jd,createInteractiveAd:Kd,navigateBack:Qd,redirectTo:th,reLaunch:nh,unPreloadPage:rh,preloadPage:ih},getApp:function({allowDefault:e=!1}={}){return Pd||(e?Md:void console.error("[warn]: getApp() failed. Learn more: https://uniapp.dcloud.io/collocation/frame/window?id=getapp."))},getCurrentPages:function(){const e=[];return yu.forEach((t=>{t.__isTabBar?t.$.__isActive&&e.push(t):e.push(t)})),e},__definePage:function(e,t){var n;yd.set(e,Ae((n=t,()=>function(e){return _(e)}(n)?n().then((e=>vd(e))):vd(n))))},__registerApp:Ld,__registerPage:wd,UniServiceJSBridge:g(nn,{publishHandler:function(e,n,r){n=JSON.stringify(n),y(r)||(r=[r]);const i=`typeof UniViewJSBridge !== 'undefined' && UniViewJSBridge.subscribeHandler("${e}",${n},__PAGE_ID__)`;r.forEach((e=>{const n=String(e),r=t.webview.getWebviewById(n);r&&r.evalJS(i.replace("__PAGE_ID__",n))}))}})};function ah(e){let t=e.length;for(;--t>=0;)e[t]=0}const sh=256,ch=286,lh=30,uh=15,dh=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]),hh=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),ph=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]),fh=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),gh=new Array(576);ah(gh);const mh=new Array(60);ah(mh);const vh=new Array(512);ah(vh);const yh=new Array(256);ah(yh);const _h=new Array(29);ah(_h);const bh=new Array(lh);function wh(e,t,n,r,i){this.static_tree=e,this.extra_bits=t,this.extra_base=n,this.elems=r,this.max_length=i,this.has_stree=e&&e.length}let kh,xh,Sh;function Ch(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}ah(bh);const Eh=e=>e<256?vh[e]:vh[256+(e>>>7)],Ih=(e,t)=>{e.pending_buf[e.pending++]=255&t,e.pending_buf[e.pending++]=t>>>8&255},Th=(e,t,n)=>{e.bi_valid>16-n?(e.bi_buf|=t<<e.bi_valid&65535,Ih(e,e.bi_buf),e.bi_buf=t>>16-e.bi_valid,e.bi_valid+=n-16):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=n)},Ah=(e,t,n)=>{Th(e,n[2*t],n[2*t+1])},Oh=(e,t)=>{let n=0;do{n|=1&e,e>>>=1,n<<=1}while(--t>0);return n>>>1},$h=(e,t,n)=>{const r=new Array(16);let i,o,a=0;for(i=1;i<=uh;i++)r[i]=a=a+n[i-1]<<1;for(o=0;o<=t;o++){let t=e[2*o+1];0!==t&&(e[2*o]=Oh(r[t]++,t))}},Nh=e=>{let t;for(t=0;t<ch;t++)e.dyn_ltree[2*t]=0;for(t=0;t<lh;t++)e.dyn_dtree[2*t]=0;for(t=0;t<19;t++)e.bl_tree[2*t]=0;e.dyn_ltree[512]=1,e.opt_len=e.static_len=0,e.last_lit=e.matches=0},Ph=e=>{e.bi_valid>8?Ih(e,e.bi_buf):e.bi_valid>0&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0},Mh=(e,t,n,r)=>{const i=2*t,o=2*n;return e[i]<e[o]||e[i]===e[o]&&r[t]<=r[n]},Lh=(e,t,n)=>{const r=e.heap[n];let i=n<<1;for(;i<=e.heap_len&&(i<e.heap_len&&Mh(t,e.heap[i+1],e.heap[i],e.depth)&&i++,!Mh(t,r,e.heap[i],e.depth));)e.heap[n]=e.heap[i],n=i,i<<=1;e.heap[n]=r},Rh=(e,t,n)=>{let r,i,o,a,s=0;if(0!==e.last_lit)do{r=e.pending_buf[e.d_buf+2*s]<<8|e.pending_buf[e.d_buf+2*s+1],i=e.pending_buf[e.l_buf+s],s++,0===r?Ah(e,i,t):(o=yh[i],Ah(e,o+sh+1,t),a=dh[o],0!==a&&(i-=_h[o],Th(e,i,a)),r--,o=Eh(r),Ah(e,o,n),a=hh[o],0!==a&&(r-=bh[o],Th(e,r,a)))}while(s<e.last_lit);Ah(e,256,t)},Bh=(e,t)=>{const n=t.dyn_tree,r=t.stat_desc.static_tree,i=t.stat_desc.has_stree,o=t.stat_desc.elems;let a,s,c,l=-1;for(e.heap_len=0,e.heap_max=573,a=0;a<o;a++)0!==n[2*a]?(e.heap[++e.heap_len]=l=a,e.depth[a]=0):n[2*a+1]=0;for(;e.heap_len<2;)c=e.heap[++e.heap_len]=l<2?++l:0,n[2*c]=1,e.depth[c]=0,e.opt_len--,i&&(e.static_len-=r[2*c+1]);for(t.max_code=l,a=e.heap_len>>1;a>=1;a--)Lh(e,n,a);c=o;do{a=e.heap[1],e.heap[1]=e.heap[e.heap_len--],Lh(e,n,1),s=e.heap[1],e.heap[--e.heap_max]=a,e.heap[--e.heap_max]=s,n[2*c]=n[2*a]+n[2*s],e.depth[c]=(e.depth[a]>=e.depth[s]?e.depth[a]:e.depth[s])+1,n[2*a+1]=n[2*s+1]=c,e.heap[1]=c++,Lh(e,n,1)}while(e.heap_len>=2);e.heap[--e.heap_max]=e.heap[1],((e,t)=>{const n=t.dyn_tree,r=t.max_code,i=t.stat_desc.static_tree,o=t.stat_desc.has_stree,a=t.stat_desc.extra_bits,s=t.stat_desc.extra_base,c=t.stat_desc.max_length;let l,u,d,h,p,f,g=0;for(h=0;h<=uh;h++)e.bl_count[h]=0;for(n[2*e.heap[e.heap_max]+1]=0,l=e.heap_max+1;l<573;l++)u=e.heap[l],h=n[2*n[2*u+1]+1]+1,h>c&&(h=c,g++),n[2*u+1]=h,u>r||(e.bl_count[h]++,p=0,u>=s&&(p=a[u-s]),f=n[2*u],e.opt_len+=f*(h+p),o&&(e.static_len+=f*(i[2*u+1]+p)));if(0!==g){do{for(h=c-1;0===e.bl_count[h];)h--;e.bl_count[h]--,e.bl_count[h+1]+=2,e.bl_count[c]--,g-=2}while(g>0);for(h=c;0!==h;h--)for(u=e.bl_count[h];0!==u;)d=e.heap[--l],d>r||(n[2*d+1]!==h&&(e.opt_len+=(h-n[2*d+1])*n[2*d],n[2*d+1]=h),u--)}})(e,t),$h(n,l,e.bl_count)},Dh=(e,t,n)=>{let r,i,o=-1,a=t[1],s=0,c=7,l=4;for(0===a&&(c=138,l=3),t[2*(n+1)+1]=65535,r=0;r<=n;r++)i=a,a=t[2*(r+1)+1],++s<c&&i===a||(s<l?e.bl_tree[2*i]+=s:0!==i?(i!==o&&e.bl_tree[2*i]++,e.bl_tree[32]++):s<=10?e.bl_tree[34]++:e.bl_tree[36]++,s=0,o=i,0===a?(c=138,l=3):i===a?(c=6,l=3):(c=7,l=4))},jh=(e,t,n)=>{let r,i,o=-1,a=t[1],s=0,c=7,l=4;for(0===a&&(c=138,l=3),r=0;r<=n;r++)if(i=a,a=t[2*(r+1)+1],!(++s<c&&i===a)){if(s<l)do{Ah(e,i,e.bl_tree)}while(0!=--s);else 0!==i?(i!==o&&(Ah(e,i,e.bl_tree),s--),Ah(e,16,e.bl_tree),Th(e,s-3,2)):s<=10?(Ah(e,17,e.bl_tree),Th(e,s-3,3)):(Ah(e,18,e.bl_tree),Th(e,s-11,7));s=0,o=i,0===a?(c=138,l=3):i===a?(c=6,l=3):(c=7,l=4)}};let Fh=!1;const Vh=(e,t,n,r)=>{Th(e,0+(r?1:0),3),((e,t,n,r)=>{Ph(e),r&&(Ih(e,n),Ih(e,~n)),e.pending_buf.set(e.window.subarray(t,t+n),e.pending),e.pending+=n})(e,t,n,!0)};var Uh={_tr_init:e=>{Fh||((()=>{let e,t,n,r,i;const o=new Array(16);for(n=0,r=0;r<28;r++)for(_h[r]=n,e=0;e<1<<dh[r];e++)yh[n++]=r;for(yh[n-1]=r,i=0,r=0;r<16;r++)for(bh[r]=i,e=0;e<1<<hh[r];e++)vh[i++]=r;for(i>>=7;r<lh;r++)for(bh[r]=i<<7,e=0;e<1<<hh[r]-7;e++)vh[256+i++]=r;for(t=0;t<=uh;t++)o[t]=0;for(e=0;e<=143;)gh[2*e+1]=8,e++,o[8]++;for(;e<=255;)gh[2*e+1]=9,e++,o[9]++;for(;e<=279;)gh[2*e+1]=7,e++,o[7]++;for(;e<=287;)gh[2*e+1]=8,e++,o[8]++;for($h(gh,287,o),e=0;e<lh;e++)mh[2*e+1]=5,mh[2*e]=Oh(e,5);kh=new wh(gh,dh,257,ch,uh),xh=new wh(mh,hh,0,lh,uh),Sh=new wh(new Array(0),ph,0,19,7)})(),Fh=!0),e.l_desc=new Ch(e.dyn_ltree,kh),e.d_desc=new Ch(e.dyn_dtree,xh),e.bl_desc=new Ch(e.bl_tree,Sh),e.bi_buf=0,e.bi_valid=0,Nh(e)},_tr_stored_block:Vh,_tr_flush_block:(e,t,n,r)=>{let i,o,a=0;e.level>0?(2===e.strm.data_type&&(e.strm.data_type=(e=>{let t,n=4093624447;for(t=0;t<=31;t++,n>>>=1)if(1&n&&0!==e.dyn_ltree[2*t])return 0;if(0!==e.dyn_ltree[18]||0!==e.dyn_ltree[20]||0!==e.dyn_ltree[26])return 1;for(t=32;t<sh;t++)if(0!==e.dyn_ltree[2*t])return 1;return 0})(e)),Bh(e,e.l_desc),Bh(e,e.d_desc),a=(e=>{let t;for(Dh(e,e.dyn_ltree,e.l_desc.max_code),Dh(e,e.dyn_dtree,e.d_desc.max_code),Bh(e,e.bl_desc),t=18;t>=3&&0===e.bl_tree[2*fh[t]+1];t--);return e.opt_len+=3*(t+1)+5+5+4,t})(e),i=e.opt_len+3+7>>>3,o=e.static_len+3+7>>>3,o<=i&&(i=o)):i=o=n+5,n+4<=i&&-1!==t?Vh(e,t,n,r):4===e.strategy||o===i?(Th(e,2+(r?1:0),3),Rh(e,gh,mh)):(Th(e,4+(r?1:0),3),((e,t,n,r)=>{let i;for(Th(e,t-257,5),Th(e,n-1,5),Th(e,r-4,4),i=0;i<r;i++)Th(e,e.bl_tree[2*fh[i]+1],3);jh(e,e.dyn_ltree,t-1),jh(e,e.dyn_dtree,n-1)})(e,e.l_desc.max_code+1,e.d_desc.max_code+1,a+1),Rh(e,e.dyn_ltree,e.dyn_dtree)),Nh(e),r&&Ph(e)},_tr_tally:(e,t,n)=>(e.pending_buf[e.d_buf+2*e.last_lit]=t>>>8&255,e.pending_buf[e.d_buf+2*e.last_lit+1]=255&t,e.pending_buf[e.l_buf+e.last_lit]=255&n,e.last_lit++,0===t?e.dyn_ltree[2*n]++:(e.matches++,t--,e.dyn_ltree[2*(yh[n]+sh+1)]++,e.dyn_dtree[2*Eh(t)]++),e.last_lit===e.lit_bufsize-1),_tr_align:e=>{Th(e,2,3),Ah(e,256,gh),(e=>{16===e.bi_valid?(Ih(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=255&e.bi_buf,e.bi_buf>>=8,e.bi_valid-=8)})(e)}};var zh=(e,t,n,r)=>{let i=65535&e|0,o=e>>>16&65535|0,a=0;for(;0!==n;){a=n>2e3?2e3:n,n-=a;do{i=i+t[r++]|0,o=o+i|0}while(--a);i%=65521,o%=65521}return i|o<<16|0};const Wh=new Uint32Array((()=>{let e,t=[];for(var n=0;n<256;n++){e=n;for(var r=0;r<8;r++)e=1&e?3988292384^e>>>1:e>>>1;t[n]=e}return t})());var Hh=(e,t,n,r)=>{const i=Wh,o=r+n;e^=-1;for(let n=r;n<o;n++)e=e>>>8^i[255&(e^t[n])];return-1^e},qh={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"},Yh={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const{_tr_init:Jh,_tr_stored_block:Xh,_tr_flush_block:Gh,_tr_tally:Zh,_tr_align:Kh}=Uh,{Z_NO_FLUSH:Qh,Z_PARTIAL_FLUSH:ep,Z_FULL_FLUSH:tp,Z_FINISH:np,Z_BLOCK:rp,Z_OK:ip,Z_STREAM_END:op,Z_STREAM_ERROR:ap,Z_DATA_ERROR:sp,Z_BUF_ERROR:cp,Z_DEFAULT_COMPRESSION:lp,Z_FILTERED:up,Z_HUFFMAN_ONLY:dp,Z_RLE:hp,Z_FIXED:pp,Z_DEFAULT_STRATEGY:fp,Z_UNKNOWN:gp,Z_DEFLATED:mp}=Yh,vp=258,yp=262,_p=103,bp=113,wp=666,kp=(e,t)=>(e.msg=qh[t],t),xp=e=>(e<<1)-(e>4?9:0),Sp=e=>{let t=e.length;for(;--t>=0;)e[t]=0};let Cp=(e,t,n)=>(t<<e.hash_shift^n)&e.hash_mask;const Ep=e=>{const t=e.state;let n=t.pending;n>e.avail_out&&(n=e.avail_out),0!==n&&(e.output.set(t.pending_buf.subarray(t.pending_out,t.pending_out+n),e.next_out),e.next_out+=n,t.pending_out+=n,e.total_out+=n,e.avail_out-=n,t.pending-=n,0===t.pending&&(t.pending_out=0))},Ip=(e,t)=>{Gh(e,e.block_start>=0?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,Ep(e.strm)},Tp=(e,t)=>{e.pending_buf[e.pending++]=t},Ap=(e,t)=>{e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=255&t},Op=(e,t,n,r)=>{let i=e.avail_in;return i>r&&(i=r),0===i?0:(e.avail_in-=i,t.set(e.input.subarray(e.next_in,e.next_in+i),n),1===e.state.wrap?e.adler=zh(e.adler,t,i,n):2===e.state.wrap&&(e.adler=Hh(e.adler,t,i,n)),e.next_in+=i,e.total_in+=i,i)},$p=(e,t)=>{let n,r,i=e.max_chain_length,o=e.strstart,a=e.prev_length,s=e.nice_match;const c=e.strstart>e.w_size-yp?e.strstart-(e.w_size-yp):0,l=e.window,u=e.w_mask,d=e.prev,h=e.strstart+vp;let p=l[o+a-1],f=l[o+a];e.prev_length>=e.good_match&&(i>>=2),s>e.lookahead&&(s=e.lookahead);do{if(n=t,l[n+a]===f&&l[n+a-1]===p&&l[n]===l[o]&&l[++n]===l[o+1]){o+=2,n++;do{}while(l[++o]===l[++n]&&l[++o]===l[++n]&&l[++o]===l[++n]&&l[++o]===l[++n]&&l[++o]===l[++n]&&l[++o]===l[++n]&&l[++o]===l[++n]&&l[++o]===l[++n]&&o<h);if(r=vp-(h-o),o=h-vp,r>a){if(e.match_start=t,a=r,r>=s)break;p=l[o+a-1],f=l[o+a]}}}while((t=d[t&u])>c&&0!=--i);return a<=e.lookahead?a:e.lookahead},Np=e=>{const t=e.w_size;let n,r,i,o,a;do{if(o=e.window_size-e.lookahead-e.strstart,e.strstart>=t+(t-yp)){e.window.set(e.window.subarray(t,t+t),0),e.match_start-=t,e.strstart-=t,e.block_start-=t,r=e.hash_size,n=r;do{i=e.head[--n],e.head[n]=i>=t?i-t:0}while(--r);r=t,n=r;do{i=e.prev[--n],e.prev[n]=i>=t?i-t:0}while(--r);o+=t}if(0===e.strm.avail_in)break;if(r=Op(e.strm,e.window,e.strstart+e.lookahead,o),e.lookahead+=r,e.lookahead+e.insert>=3)for(a=e.strstart-e.insert,e.ins_h=e.window[a],e.ins_h=Cp(e,e.ins_h,e.window[a+1]);e.insert&&(e.ins_h=Cp(e,e.ins_h,e.window[a+3-1]),e.prev[a&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=a,a++,e.insert--,!(e.lookahead+e.insert<3)););}while(e.lookahead<yp&&0!==e.strm.avail_in)},Pp=(e,t)=>{let n,r;for(;;){if(e.lookahead<yp){if(Np(e),e.lookahead<yp&&t===Qh)return 1;if(0===e.lookahead)break}if(n=0,e.lookahead>=3&&(e.ins_h=Cp(e,e.ins_h,e.window[e.strstart+3-1]),n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!==n&&e.strstart-n<=e.w_size-yp&&(e.match_length=$p(e,n)),e.match_length>=3)if(r=Zh(e,e.strstart-e.match_start,e.match_length-3),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=3){e.match_length--;do{e.strstart++,e.ins_h=Cp(e,e.ins_h,e.window[e.strstart+3-1]),n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart}while(0!=--e.match_length);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=Cp(e,e.ins_h,e.window[e.strstart+1]);else r=Zh(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(r&&(Ip(e,!1),0===e.strm.avail_out))return 1}return e.insert=e.strstart<2?e.strstart:2,t===np?(Ip(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(Ip(e,!1),0===e.strm.avail_out)?1:2},Mp=(e,t)=>{let n,r,i;for(;;){if(e.lookahead<yp){if(Np(e),e.lookahead<yp&&t===Qh)return 1;if(0===e.lookahead)break}if(n=0,e.lookahead>=3&&(e.ins_h=Cp(e,e.ins_h,e.window[e.strstart+3-1]),n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=2,0!==n&&e.prev_length<e.max_lazy_match&&e.strstart-n<=e.w_size-yp&&(e.match_length=$p(e,n),e.match_length<=5&&(e.strategy===up||3===e.match_length&&e.strstart-e.match_start>4096)&&(e.match_length=2)),e.prev_length>=3&&e.match_length<=e.prev_length){i=e.strstart+e.lookahead-3,r=Zh(e,e.strstart-1-e.prev_match,e.prev_length-3),e.lookahead-=e.prev_length-1,e.prev_length-=2;do{++e.strstart<=i&&(e.ins_h=Cp(e,e.ins_h,e.window[e.strstart+3-1]),n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart)}while(0!=--e.prev_length);if(e.match_available=0,e.match_length=2,e.strstart++,r&&(Ip(e,!1),0===e.strm.avail_out))return 1}else if(e.match_available){if(r=Zh(e,0,e.window[e.strstart-1]),r&&Ip(e,!1),e.strstart++,e.lookahead--,0===e.strm.avail_out)return 1}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(r=Zh(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<2?e.strstart:2,t===np?(Ip(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(Ip(e,!1),0===e.strm.avail_out)?1:2};function Lp(e,t,n,r,i){this.good_length=e,this.max_lazy=t,this.nice_length=n,this.max_chain=r,this.func=i}const Rp=[new Lp(0,0,0,0,((e,t)=>{let n=65535;for(n>e.pending_buf_size-5&&(n=e.pending_buf_size-5);;){if(e.lookahead<=1){if(Np(e),0===e.lookahead&&t===Qh)return 1;if(0===e.lookahead)break}e.strstart+=e.lookahead,e.lookahead=0;const r=e.block_start+n;if((0===e.strstart||e.strstart>=r)&&(e.lookahead=e.strstart-r,e.strstart=r,Ip(e,!1),0===e.strm.avail_out))return 1;if(e.strstart-e.block_start>=e.w_size-yp&&(Ip(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,t===np?(Ip(e,!0),0===e.strm.avail_out?3:4):(e.strstart>e.block_start&&(Ip(e,!1),e.strm.avail_out),1)})),new Lp(4,4,8,4,Pp),new Lp(4,5,16,8,Pp),new Lp(4,6,32,32,Pp),new Lp(4,4,16,16,Mp),new Lp(8,16,32,32,Mp),new Lp(8,16,128,128,Mp),new Lp(8,32,128,256,Mp),new Lp(32,128,258,1024,Mp),new Lp(32,258,258,4096,Mp)];function Bp(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=mp,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Uint16Array(1146),this.dyn_dtree=new Uint16Array(122),this.bl_tree=new Uint16Array(78),Sp(this.dyn_ltree),Sp(this.dyn_dtree),Sp(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Uint16Array(16),this.heap=new Uint16Array(573),Sp(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Uint16Array(573),Sp(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}const Dp=e=>{if(!e||!e.state)return kp(e,ap);e.total_in=e.total_out=0,e.data_type=gp;const t=e.state;return t.pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=t.wrap?42:bp,e.adler=2===t.wrap?0:1,t.last_flush=Qh,Jh(t),ip},jp=e=>{const t=Dp(e);var n;return t===ip&&((n=e.state).window_size=2*n.w_size,Sp(n.head),n.max_lazy_match=Rp[n.level].max_lazy,n.good_match=Rp[n.level].good_length,n.nice_match=Rp[n.level].nice_length,n.max_chain_length=Rp[n.level].max_chain,n.strstart=0,n.block_start=0,n.lookahead=0,n.insert=0,n.match_length=n.prev_length=2,n.match_available=0,n.ins_h=0),t},Fp=(e,t,n,r,i,o)=>{if(!e)return ap;let a=1;if(t===lp&&(t=6),r<0?(a=0,r=-r):r>15&&(a=2,r-=16),i<1||i>9||n!==mp||r<8||r>15||t<0||t>9||o<0||o>pp)return kp(e,ap);8===r&&(r=9);const s=new Bp;return e.state=s,s.strm=e,s.wrap=a,s.gzhead=null,s.w_bits=r,s.w_size=1<<s.w_bits,s.w_mask=s.w_size-1,s.hash_bits=i+7,s.hash_size=1<<s.hash_bits,s.hash_mask=s.hash_size-1,s.hash_shift=~~((s.hash_bits+3-1)/3),s.window=new Uint8Array(2*s.w_size),s.head=new Uint16Array(s.hash_size),s.prev=new Uint16Array(s.w_size),s.lit_bufsize=1<<i+6,s.pending_buf_size=4*s.lit_bufsize,s.pending_buf=new Uint8Array(s.pending_buf_size),s.d_buf=1*s.lit_bufsize,s.l_buf=3*s.lit_bufsize,s.level=t,s.strategy=o,s.method=n,jp(e)};var Vp={deflateInit:(e,t)=>Fp(e,t,mp,15,8,fp),deflateInit2:Fp,deflateReset:jp,deflateResetKeep:Dp,deflateSetHeader:(e,t)=>e&&e.state?2!==e.state.wrap?ap:(e.state.gzhead=t,ip):ap,deflate:(e,t)=>{let n,r;if(!e||!e.state||t>rp||t<0)return e?kp(e,ap):ap;const i=e.state;if(!e.output||!e.input&&0!==e.avail_in||i.status===wp&&t!==np)return kp(e,0===e.avail_out?cp:ap);i.strm=e;const o=i.last_flush;if(i.last_flush=t,42===i.status)if(2===i.wrap)e.adler=0,Tp(i,31),Tp(i,139),Tp(i,8),i.gzhead?(Tp(i,(i.gzhead.text?1:0)+(i.gzhead.hcrc?2:0)+(i.gzhead.extra?4:0)+(i.gzhead.name?8:0)+(i.gzhead.comment?16:0)),Tp(i,255&i.gzhead.time),Tp(i,i.gzhead.time>>8&255),Tp(i,i.gzhead.time>>16&255),Tp(i,i.gzhead.time>>24&255),Tp(i,9===i.level?2:i.strategy>=dp||i.level<2?4:0),Tp(i,255&i.gzhead.os),i.gzhead.extra&&i.gzhead.extra.length&&(Tp(i,255&i.gzhead.extra.length),Tp(i,i.gzhead.extra.length>>8&255)),i.gzhead.hcrc&&(e.adler=Hh(e.adler,i.pending_buf,i.pending,0)),i.gzindex=0,i.status=69):(Tp(i,0),Tp(i,0),Tp(i,0),Tp(i,0),Tp(i,0),Tp(i,9===i.level?2:i.strategy>=dp||i.level<2?4:0),Tp(i,3),i.status=bp);else{let t=mp+(i.w_bits-8<<4)<<8,n=-1;n=i.strategy>=dp||i.level<2?0:i.level<6?1:6===i.level?2:3,t|=n<<6,0!==i.strstart&&(t|=32),t+=31-t%31,i.status=bp,Ap(i,t),0!==i.strstart&&(Ap(i,e.adler>>>16),Ap(i,65535&e.adler)),e.adler=1}if(69===i.status)if(i.gzhead.extra){for(n=i.pending;i.gzindex<(65535&i.gzhead.extra.length)&&(i.pending!==i.pending_buf_size||(i.gzhead.hcrc&&i.pending>n&&(e.adler=Hh(e.adler,i.pending_buf,i.pending-n,n)),Ep(e),n=i.pending,i.pending!==i.pending_buf_size));)Tp(i,255&i.gzhead.extra[i.gzindex]),i.gzindex++;i.gzhead.hcrc&&i.pending>n&&(e.adler=Hh(e.adler,i.pending_buf,i.pending-n,n)),i.gzindex===i.gzhead.extra.length&&(i.gzindex=0,i.status=73)}else i.status=73;if(73===i.status)if(i.gzhead.name){n=i.pending;do{if(i.pending===i.pending_buf_size&&(i.gzhead.hcrc&&i.pending>n&&(e.adler=Hh(e.adler,i.pending_buf,i.pending-n,n)),Ep(e),n=i.pending,i.pending===i.pending_buf_size)){r=1;break}r=i.gzindex<i.gzhead.name.length?255&i.gzhead.name.charCodeAt(i.gzindex++):0,Tp(i,r)}while(0!==r);i.gzhead.hcrc&&i.pending>n&&(e.adler=Hh(e.adler,i.pending_buf,i.pending-n,n)),0===r&&(i.gzindex=0,i.status=91)}else i.status=91;if(91===i.status)if(i.gzhead.comment){n=i.pending;do{if(i.pending===i.pending_buf_size&&(i.gzhead.hcrc&&i.pending>n&&(e.adler=Hh(e.adler,i.pending_buf,i.pending-n,n)),Ep(e),n=i.pending,i.pending===i.pending_buf_size)){r=1;break}r=i.gzindex<i.gzhead.comment.length?255&i.gzhead.comment.charCodeAt(i.gzindex++):0,Tp(i,r)}while(0!==r);i.gzhead.hcrc&&i.pending>n&&(e.adler=Hh(e.adler,i.pending_buf,i.pending-n,n)),0===r&&(i.status=_p)}else i.status=_p;if(i.status===_p&&(i.gzhead.hcrc?(i.pending+2>i.pending_buf_size&&Ep(e),i.pending+2<=i.pending_buf_size&&(Tp(i,255&e.adler),Tp(i,e.adler>>8&255),e.adler=0,i.status=bp)):i.status=bp),0!==i.pending){if(Ep(e),0===e.avail_out)return i.last_flush=-1,ip}else if(0===e.avail_in&&xp(t)<=xp(o)&&t!==np)return kp(e,cp);if(i.status===wp&&0!==e.avail_in)return kp(e,cp);if(0!==e.avail_in||0!==i.lookahead||t!==Qh&&i.status!==wp){let n=i.strategy===dp?((e,t)=>{let n;for(;;){if(0===e.lookahead&&(Np(e),0===e.lookahead)){if(t===Qh)return 1;break}if(e.match_length=0,n=Zh(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,n&&(Ip(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,t===np?(Ip(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(Ip(e,!1),0===e.strm.avail_out)?1:2})(i,t):i.strategy===hp?((e,t)=>{let n,r,i,o;const a=e.window;for(;;){if(e.lookahead<=vp){if(Np(e),e.lookahead<=vp&&t===Qh)return 1;if(0===e.lookahead)break}if(e.match_length=0,e.lookahead>=3&&e.strstart>0&&(i=e.strstart-1,r=a[i],r===a[++i]&&r===a[++i]&&r===a[++i])){o=e.strstart+vp;do{}while(r===a[++i]&&r===a[++i]&&r===a[++i]&&r===a[++i]&&r===a[++i]&&r===a[++i]&&r===a[++i]&&r===a[++i]&&i<o);e.match_length=vp-(o-i),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=3?(n=Zh(e,1,e.match_length-3),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(n=Zh(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),n&&(Ip(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,t===np?(Ip(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(Ip(e,!1),0===e.strm.avail_out)?1:2})(i,t):Rp[i.level].func(i,t);if(3!==n&&4!==n||(i.status=wp),1===n||3===n)return 0===e.avail_out&&(i.last_flush=-1),ip;if(2===n&&(t===ep?Kh(i):t!==rp&&(Xh(i,0,0,!1),t===tp&&(Sp(i.head),0===i.lookahead&&(i.strstart=0,i.block_start=0,i.insert=0))),Ep(e),0===e.avail_out))return i.last_flush=-1,ip}return t!==np?ip:i.wrap<=0?op:(2===i.wrap?(Tp(i,255&e.adler),Tp(i,e.adler>>8&255),Tp(i,e.adler>>16&255),Tp(i,e.adler>>24&255),Tp(i,255&e.total_in),Tp(i,e.total_in>>8&255),Tp(i,e.total_in>>16&255),Tp(i,e.total_in>>24&255)):(Ap(i,e.adler>>>16),Ap(i,65535&e.adler)),Ep(e),i.wrap>0&&(i.wrap=-i.wrap),0!==i.pending?ip:op)},deflateEnd:e=>{if(!e||!e.state)return ap;const t=e.state.status;return 42!==t&&69!==t&&73!==t&&91!==t&&t!==_p&&t!==bp&&t!==wp?kp(e,ap):(e.state=null,t===bp?kp(e,sp):ip)},deflateSetDictionary:(e,t)=>{let n=t.length;if(!e||!e.state)return ap;const r=e.state,i=r.wrap;if(2===i||1===i&&42!==r.status||r.lookahead)return ap;if(1===i&&(e.adler=zh(e.adler,t,n,0)),r.wrap=0,n>=r.w_size){0===i&&(Sp(r.head),r.strstart=0,r.block_start=0,r.insert=0);let e=new Uint8Array(r.w_size);e.set(t.subarray(n-r.w_size,n),0),t=e,n=r.w_size}const o=e.avail_in,a=e.next_in,s=e.input;for(e.avail_in=n,e.next_in=0,e.input=t,Np(r);r.lookahead>=3;){let e=r.strstart,t=r.lookahead-2;do{r.ins_h=Cp(r,r.ins_h,r.window[e+3-1]),r.prev[e&r.w_mask]=r.head[r.ins_h],r.head[r.ins_h]=e,e++}while(--t);r.strstart=e,r.lookahead=2,Np(r)}return r.strstart+=r.lookahead,r.block_start=r.strstart,r.insert=r.lookahead,r.lookahead=0,r.match_length=r.prev_length=2,r.match_available=0,e.next_in=a,e.input=s,e.avail_in=o,r.wrap=i,ip},deflateInfo:"pako deflate (from Nodeca project)"};const Up=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var zp=function(e){const t=Array.prototype.slice.call(arguments,1);for(;t.length;){const n=t.shift();if(n){if("object"!=typeof n)throw new TypeError(n+"must be non-object");for(const t in n)Up(n,t)&&(e[t]=n[t])}}return e},Wp=e=>{let t=0;for(let n=0,r=e.length;n<r;n++)t+=e[n].length;const n=new Uint8Array(t);for(let t=0,r=0,i=e.length;t<i;t++){let i=e[t];n.set(i,r),r+=i.length}return n};let Hp=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){Hp=!1}const qp=new Uint8Array(256);for(let e=0;e<256;e++)qp[e]=e>=252?6:e>=248?5:e>=240?4:e>=224?3:e>=192?2:1;qp[254]=qp[254]=1;var Yp=e=>{if("function"==typeof TextEncoder&&TextEncoder.prototype.encode)return(new TextEncoder).encode(e);let t,n,r,i,o,a=e.length,s=0;for(i=0;i<a;i++)n=e.charCodeAt(i),55296==(64512&n)&&i+1<a&&(r=e.charCodeAt(i+1),56320==(64512&r)&&(n=65536+(n-55296<<10)+(r-56320),i++)),s+=n<128?1:n<2048?2:n<65536?3:4;for(t=new Uint8Array(s),o=0,i=0;o<s;i++)n=e.charCodeAt(i),55296==(64512&n)&&i+1<a&&(r=e.charCodeAt(i+1),56320==(64512&r)&&(n=65536+(n-55296<<10)+(r-56320),i++)),n<128?t[o++]=n:n<2048?(t[o++]=192|n>>>6,t[o++]=128|63&n):n<65536?(t[o++]=224|n>>>12,t[o++]=128|n>>>6&63,t[o++]=128|63&n):(t[o++]=240|n>>>18,t[o++]=128|n>>>12&63,t[o++]=128|n>>>6&63,t[o++]=128|63&n);return t},Jp=(e,t)=>{const n=t||e.length;if("function"==typeof TextDecoder&&TextDecoder.prototype.decode)return(new TextDecoder).decode(e.subarray(0,t));let r,i;const o=new Array(2*n);for(i=0,r=0;r<n;){let t=e[r++];if(t<128){o[i++]=t;continue}let a=qp[t];if(a>4)o[i++]=65533,r+=a-1;else{for(t&=2===a?31:3===a?15:7;a>1&&r<n;)t=t<<6|63&e[r++],a--;a>1?o[i++]=65533:t<65536?o[i++]=t:(t-=65536,o[i++]=55296|t>>10&1023,o[i++]=56320|1023&t)}}return((e,t)=>{if(t<65534&&e.subarray&&Hp)return String.fromCharCode.apply(null,e.length===t?e:e.subarray(0,t));let n="";for(let r=0;r<t;r++)n+=String.fromCharCode(e[r]);return n})(o,i)},Xp=(e,t)=>{(t=t||e.length)>e.length&&(t=e.length);let n=t-1;for(;n>=0&&128==(192&e[n]);)n--;return n<0||0===n?t:n+qp[e[n]]>t?n:t};var Gp=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0};const Zp=Object.prototype.toString,{Z_NO_FLUSH:Kp,Z_SYNC_FLUSH:Qp,Z_FULL_FLUSH:ef,Z_FINISH:tf,Z_OK:nf,Z_STREAM_END:rf,Z_DEFAULT_COMPRESSION:of,Z_DEFAULT_STRATEGY:af,Z_DEFLATED:sf}=Yh;function cf(e){this.options=zp({level:of,method:sf,chunkSize:16384,windowBits:15,memLevel:8,strategy:af},e||{});let t=this.options;t.raw&&t.windowBits>0?t.windowBits=-t.windowBits:t.gzip&&t.windowBits>0&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new Gp,this.strm.avail_out=0;let n=Vp.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(n!==nf)throw new Error(qh[n]);if(t.header&&Vp.deflateSetHeader(this.strm,t.header),t.dictionary){let e;if(e="string"==typeof t.dictionary?Yp(t.dictionary):"[object ArrayBuffer]"===Zp.call(t.dictionary)?new Uint8Array(t.dictionary):t.dictionary,n=Vp.deflateSetDictionary(this.strm,e),n!==nf)throw new Error(qh[n]);this._dict_set=!0}}function lf(e,t){const n=new cf(t);if(n.push(e,!0),n.err)throw n.msg||qh[n.err];return n.result}cf.prototype.push=function(e,t){const n=this.strm,r=this.options.chunkSize;let i,o;if(this.ended)return!1;for(o=t===~~t?t:!0===t?tf:Kp,"string"==typeof e?n.input=Yp(e):"[object ArrayBuffer]"===Zp.call(e)?n.input=new Uint8Array(e):n.input=e,n.next_in=0,n.avail_in=n.input.length;;)if(0===n.avail_out&&(n.output=new Uint8Array(r),n.next_out=0,n.avail_out=r),(o===Qp||o===ef)&&n.avail_out<=6)this.onData(n.output.subarray(0,n.next_out)),n.avail_out=0;else{if(i=Vp.deflate(n,o),i===rf)return n.next_out>0&&this.onData(n.output.subarray(0,n.next_out)),i=Vp.deflateEnd(this.strm),this.onEnd(i),this.ended=!0,i===nf;if(0!==n.avail_out){if(o>0&&n.next_out>0)this.onData(n.output.subarray(0,n.next_out)),n.avail_out=0;else if(0===n.avail_in)break}else this.onData(n.output)}return!0},cf.prototype.onData=function(e){this.chunks.push(e)},cf.prototype.onEnd=function(e){e===nf&&(this.result=Wp(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};var uf={Deflate:cf,deflate:lf,deflateRaw:function(e,t){return(t=t||{}).raw=!0,lf(e,t)},gzip:function(e,t){return(t=t||{}).gzip=!0,lf(e,t)},constants:Yh};var df=function(e,t){let n,r,i,o,a,s,c,l,u,d,h,p,f,g,m,v,y,_,b,w,k,x,S,C;const E=e.state;n=e.next_in,S=e.input,r=n+(e.avail_in-5),i=e.next_out,C=e.output,o=i-(t-e.avail_out),a=i+(e.avail_out-257),s=E.dmax,c=E.wsize,l=E.whave,u=E.wnext,d=E.window,h=E.hold,p=E.bits,f=E.lencode,g=E.distcode,m=(1<<E.lenbits)-1,v=(1<<E.distbits)-1;e:do{p<15&&(h+=S[n++]<<p,p+=8,h+=S[n++]<<p,p+=8),y=f[h&m];t:for(;;){if(_=y>>>24,h>>>=_,p-=_,_=y>>>16&255,0===_)C[i++]=65535&y;else{if(!(16&_)){if(0==(64&_)){y=f[(65535&y)+(h&(1<<_)-1)];continue t}if(32&_){E.mode=12;break e}e.msg="invalid literal/length code",E.mode=30;break e}b=65535&y,_&=15,_&&(p<_&&(h+=S[n++]<<p,p+=8),b+=h&(1<<_)-1,h>>>=_,p-=_),p<15&&(h+=S[n++]<<p,p+=8,h+=S[n++]<<p,p+=8),y=g[h&v];n:for(;;){if(_=y>>>24,h>>>=_,p-=_,_=y>>>16&255,!(16&_)){if(0==(64&_)){y=g[(65535&y)+(h&(1<<_)-1)];continue n}e.msg="invalid distance code",E.mode=30;break e}if(w=65535&y,_&=15,p<_&&(h+=S[n++]<<p,p+=8,p<_&&(h+=S[n++]<<p,p+=8)),w+=h&(1<<_)-1,w>s){e.msg="invalid distance too far back",E.mode=30;break e}if(h>>>=_,p-=_,_=i-o,w>_){if(_=w-_,_>l&&E.sane){e.msg="invalid distance too far back",E.mode=30;break e}if(k=0,x=d,0===u){if(k+=c-_,_<b){b-=_;do{C[i++]=d[k++]}while(--_);k=i-w,x=C}}else if(u<_){if(k+=c+u-_,_-=u,_<b){b-=_;do{C[i++]=d[k++]}while(--_);if(k=0,u<b){_=u,b-=_;do{C[i++]=d[k++]}while(--_);k=i-w,x=C}}}else if(k+=u-_,_<b){b-=_;do{C[i++]=d[k++]}while(--_);k=i-w,x=C}for(;b>2;)C[i++]=x[k++],C[i++]=x[k++],C[i++]=x[k++],b-=3;b&&(C[i++]=x[k++],b>1&&(C[i++]=x[k++]))}else{k=i-w;do{C[i++]=C[k++],C[i++]=C[k++],C[i++]=C[k++],b-=3}while(b>2);b&&(C[i++]=C[k++],b>1&&(C[i++]=C[k++]))}break}}break}}while(n<r&&i<a);b=p>>3,n-=b,p-=b<<3,h&=(1<<p)-1,e.next_in=n,e.next_out=i,e.avail_in=n<r?r-n+5:5-(n-r),e.avail_out=i<a?a-i+257:257-(i-a),E.hold=h,E.bits=p};const hf=15,pf=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),ff=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),gf=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),mf=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]);var vf=(e,t,n,r,i,o,a,s)=>{const c=s.bits;let l,u,d,h,p,f,g=0,m=0,v=0,y=0,_=0,b=0,w=0,k=0,x=0,S=0,C=null,E=0;const I=new Uint16Array(16),T=new Uint16Array(16);let A,O,$,N=null,P=0;for(g=0;g<=hf;g++)I[g]=0;for(m=0;m<r;m++)I[t[n+m]]++;for(_=c,y=hf;y>=1&&0===I[y];y--);if(_>y&&(_=y),0===y)return i[o++]=20971520,i[o++]=20971520,s.bits=1,0;for(v=1;v<y&&0===I[v];v++);for(_<v&&(_=v),k=1,g=1;g<=hf;g++)if(k<<=1,k-=I[g],k<0)return-1;if(k>0&&(0===e||1!==y))return-1;for(T[1]=0,g=1;g<hf;g++)T[g+1]=T[g]+I[g];for(m=0;m<r;m++)0!==t[n+m]&&(a[T[t[n+m]]++]=m);if(0===e?(C=N=a,f=19):1===e?(C=pf,E-=257,N=ff,P-=257,f=256):(C=gf,N=mf,f=-1),S=0,m=0,g=v,p=o,b=_,w=0,d=-1,x=1<<_,h=x-1,1===e&&x>852||2===e&&x>592)return 1;for(;;){A=g-w,a[m]<f?(O=0,$=a[m]):a[m]>f?(O=N[P+a[m]],$=C[E+a[m]]):(O=96,$=0),l=1<<g-w,u=1<<b,v=u;do{u-=l,i[p+(S>>w)+u]=A<<24|O<<16|$|0}while(0!==u);for(l=1<<g-1;S&l;)l>>=1;if(0!==l?(S&=l-1,S+=l):S=0,m++,0==--I[g]){if(g===y)break;g=t[n+a[m]]}if(g>_&&(S&h)!==d){for(0===w&&(w=_),p+=v,b=g-w,k=1<<b;b+w<y&&(k-=I[b+w],!(k<=0));)b++,k<<=1;if(x+=1<<b,1===e&&x>852||2===e&&x>592)return 1;d=S&h,i[d]=_<<24|b<<16|p-o|0}}return 0!==S&&(i[p+S]=g-w<<24|64<<16|0),s.bits=_,0};const{Z_FINISH:yf,Z_BLOCK:_f,Z_TREES:bf,Z_OK:wf,Z_STREAM_END:kf,Z_NEED_DICT:xf,Z_STREAM_ERROR:Sf,Z_DATA_ERROR:Cf,Z_MEM_ERROR:Ef,Z_BUF_ERROR:If,Z_DEFLATED:Tf}=Yh,Af=12,Of=30,$f=e=>(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24);function Nf(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const Pf=e=>{if(!e||!e.state)return Sf;const t=e.state;return e.total_in=e.total_out=t.total=0,e.msg="",t.wrap&&(e.adler=1&t.wrap),t.mode=1,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new Int32Array(852),t.distcode=t.distdyn=new Int32Array(592),t.sane=1,t.back=-1,wf},Mf=e=>{if(!e||!e.state)return Sf;const t=e.state;return t.wsize=0,t.whave=0,t.wnext=0,Pf(e)},Lf=(e,t)=>{let n;if(!e||!e.state)return Sf;const r=e.state;return t<0?(n=0,t=-t):(n=1+(t>>4),t<48&&(t&=15)),t&&(t<8||t>15)?Sf:(null!==r.window&&r.wbits!==t&&(r.window=null),r.wrap=n,r.wbits=t,Mf(e))},Rf=(e,t)=>{if(!e)return Sf;const n=new Nf;e.state=n,n.window=null;const r=Lf(e,t);return r!==wf&&(e.state=null),r};let Bf,Df,jf=!0;const Ff=e=>{if(jf){Bf=new Int32Array(512),Df=new Int32Array(32);let t=0;for(;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(vf(1,e.lens,0,288,Bf,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;vf(2,e.lens,0,32,Df,0,e.work,{bits:5}),jf=!1}e.lencode=Bf,e.lenbits=9,e.distcode=Df,e.distbits=5},Vf=(e,t,n,r)=>{let i;const o=e.state;return null===o.window&&(o.wsize=1<<o.wbits,o.wnext=0,o.whave=0,o.window=new Uint8Array(o.wsize)),r>=o.wsize?(o.window.set(t.subarray(n-o.wsize,n),0),o.wnext=0,o.whave=o.wsize):(i=o.wsize-o.wnext,i>r&&(i=r),o.window.set(t.subarray(n-r,n-r+i),o.wnext),(r-=i)?(o.window.set(t.subarray(n-r,n),0),o.wnext=r,o.whave=o.wsize):(o.wnext+=i,o.wnext===o.wsize&&(o.wnext=0),o.whave<o.wsize&&(o.whave+=i))),0};var Uf={inflateReset:Mf,inflateReset2:Lf,inflateResetKeep:Pf,inflateInit:e=>Rf(e,15),inflateInit2:Rf,inflate:(e,t)=>{let n,r,i,o,a,s,c,l,u,d,h,p,f,g,m,v,y,_,b,w,k,x,S=0;const C=new Uint8Array(4);let E,I;const T=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(!e||!e.state||!e.output||!e.input&&0!==e.avail_in)return Sf;n=e.state,n.mode===Af&&(n.mode=13),a=e.next_out,i=e.output,c=e.avail_out,o=e.next_in,r=e.input,s=e.avail_in,l=n.hold,u=n.bits,d=s,h=c,x=wf;e:for(;;)switch(n.mode){case 1:if(0===n.wrap){n.mode=13;break}for(;u<16;){if(0===s)break e;s--,l+=r[o++]<<u,u+=8}if(2&n.wrap&&35615===l){n.check=0,C[0]=255&l,C[1]=l>>>8&255,n.check=Hh(n.check,C,2,0),l=0,u=0,n.mode=2;break}if(n.flags=0,n.head&&(n.head.done=!1),!(1&n.wrap)||(((255&l)<<8)+(l>>8))%31){e.msg="incorrect header check",n.mode=Of;break}if((15&l)!==Tf){e.msg="unknown compression method",n.mode=Of;break}if(l>>>=4,u-=4,k=8+(15&l),0===n.wbits)n.wbits=k;else if(k>n.wbits){e.msg="invalid window size",n.mode=Of;break}n.dmax=1<<n.wbits,e.adler=n.check=1,n.mode=512&l?10:Af,l=0,u=0;break;case 2:for(;u<16;){if(0===s)break e;s--,l+=r[o++]<<u,u+=8}if(n.flags=l,(255&n.flags)!==Tf){e.msg="unknown compression method",n.mode=Of;break}if(57344&n.flags){e.msg="unknown header flags set",n.mode=Of;break}n.head&&(n.head.text=l>>8&1),512&n.flags&&(C[0]=255&l,C[1]=l>>>8&255,n.check=Hh(n.check,C,2,0)),l=0,u=0,n.mode=3;case 3:for(;u<32;){if(0===s)break e;s--,l+=r[o++]<<u,u+=8}n.head&&(n.head.time=l),512&n.flags&&(C[0]=255&l,C[1]=l>>>8&255,C[2]=l>>>16&255,C[3]=l>>>24&255,n.check=Hh(n.check,C,4,0)),l=0,u=0,n.mode=4;case 4:for(;u<16;){if(0===s)break e;s--,l+=r[o++]<<u,u+=8}n.head&&(n.head.xflags=255&l,n.head.os=l>>8),512&n.flags&&(C[0]=255&l,C[1]=l>>>8&255,n.check=Hh(n.check,C,2,0)),l=0,u=0,n.mode=5;case 5:if(1024&n.flags){for(;u<16;){if(0===s)break e;s--,l+=r[o++]<<u,u+=8}n.length=l,n.head&&(n.head.extra_len=l),512&n.flags&&(C[0]=255&l,C[1]=l>>>8&255,n.check=Hh(n.check,C,2,0)),l=0,u=0}else n.head&&(n.head.extra=null);n.mode=6;case 6:if(1024&n.flags&&(p=n.length,p>s&&(p=s),p&&(n.head&&(k=n.head.extra_len-n.length,n.head.extra||(n.head.extra=new Uint8Array(n.head.extra_len)),n.head.extra.set(r.subarray(o,o+p),k)),512&n.flags&&(n.check=Hh(n.check,r,p,o)),s-=p,o+=p,n.length-=p),n.length))break e;n.length=0,n.mode=7;case 7:if(2048&n.flags){if(0===s)break e;p=0;do{k=r[o+p++],n.head&&k&&n.length<65536&&(n.head.name+=String.fromCharCode(k))}while(k&&p<s);if(512&n.flags&&(n.check=Hh(n.check,r,p,o)),s-=p,o+=p,k)break e}else n.head&&(n.head.name=null);n.length=0,n.mode=8;case 8:if(4096&n.flags){if(0===s)break e;p=0;do{k=r[o+p++],n.head&&k&&n.length<65536&&(n.head.comment+=String.fromCharCode(k))}while(k&&p<s);if(512&n.flags&&(n.check=Hh(n.check,r,p,o)),s-=p,o+=p,k)break e}else n.head&&(n.head.comment=null);n.mode=9;case 9:if(512&n.flags){for(;u<16;){if(0===s)break e;s--,l+=r[o++]<<u,u+=8}if(l!==(65535&n.check)){e.msg="header crc mismatch",n.mode=Of;break}l=0,u=0}n.head&&(n.head.hcrc=n.flags>>9&1,n.head.done=!0),e.adler=n.check=0,n.mode=Af;break;case 10:for(;u<32;){if(0===s)break e;s--,l+=r[o++]<<u,u+=8}e.adler=n.check=$f(l),l=0,u=0,n.mode=11;case 11:if(0===n.havedict)return e.next_out=a,e.avail_out=c,e.next_in=o,e.avail_in=s,n.hold=l,n.bits=u,xf;e.adler=n.check=1,n.mode=Af;case Af:if(t===_f||t===bf)break e;case 13:if(n.last){l>>>=7&u,u-=7&u,n.mode=27;break}for(;u<3;){if(0===s)break e;s--,l+=r[o++]<<u,u+=8}switch(n.last=1&l,l>>>=1,u-=1,3&l){case 0:n.mode=14;break;case 1:if(Ff(n),n.mode=20,t===bf){l>>>=2,u-=2;break e}break;case 2:n.mode=17;break;case 3:e.msg="invalid block type",n.mode=Of}l>>>=2,u-=2;break;case 14:for(l>>>=7&u,u-=7&u;u<32;){if(0===s)break e;s--,l+=r[o++]<<u,u+=8}if((65535&l)!=(l>>>16^65535)){e.msg="invalid stored block lengths",n.mode=Of;break}if(n.length=65535&l,l=0,u=0,n.mode=15,t===bf)break e;case 15:n.mode=16;case 16:if(p=n.length,p){if(p>s&&(p=s),p>c&&(p=c),0===p)break e;i.set(r.subarray(o,o+p),a),s-=p,o+=p,c-=p,a+=p,n.length-=p;break}n.mode=Af;break;case 17:for(;u<14;){if(0===s)break e;s--,l+=r[o++]<<u,u+=8}if(n.nlen=257+(31&l),l>>>=5,u-=5,n.ndist=1+(31&l),l>>>=5,u-=5,n.ncode=4+(15&l),l>>>=4,u-=4,n.nlen>286||n.ndist>30){e.msg="too many length or distance symbols",n.mode=Of;break}n.have=0,n.mode=18;case 18:for(;n.have<n.ncode;){for(;u<3;){if(0===s)break e;s--,l+=r[o++]<<u,u+=8}n.lens[T[n.have++]]=7&l,l>>>=3,u-=3}for(;n.have<19;)n.lens[T[n.have++]]=0;if(n.lencode=n.lendyn,n.lenbits=7,E={bits:n.lenbits},x=vf(0,n.lens,0,19,n.lencode,0,n.work,E),n.lenbits=E.bits,x){e.msg="invalid code lengths set",n.mode=Of;break}n.have=0,n.mode=19;case 19:for(;n.have<n.nlen+n.ndist;){for(;S=n.lencode[l&(1<<n.lenbits)-1],m=S>>>24,v=S>>>16&255,y=65535&S,!(m<=u);){if(0===s)break e;s--,l+=r[o++]<<u,u+=8}if(y<16)l>>>=m,u-=m,n.lens[n.have++]=y;else{if(16===y){for(I=m+2;u<I;){if(0===s)break e;s--,l+=r[o++]<<u,u+=8}if(l>>>=m,u-=m,0===n.have){e.msg="invalid bit length repeat",n.mode=Of;break}k=n.lens[n.have-1],p=3+(3&l),l>>>=2,u-=2}else if(17===y){for(I=m+3;u<I;){if(0===s)break e;s--,l+=r[o++]<<u,u+=8}l>>>=m,u-=m,k=0,p=3+(7&l),l>>>=3,u-=3}else{for(I=m+7;u<I;){if(0===s)break e;s--,l+=r[o++]<<u,u+=8}l>>>=m,u-=m,k=0,p=11+(127&l),l>>>=7,u-=7}if(n.have+p>n.nlen+n.ndist){e.msg="invalid bit length repeat",n.mode=Of;break}for(;p--;)n.lens[n.have++]=k}}if(n.mode===Of)break;if(0===n.lens[256]){e.msg="invalid code -- missing end-of-block",n.mode=Of;break}if(n.lenbits=9,E={bits:n.lenbits},x=vf(1,n.lens,0,n.nlen,n.lencode,0,n.work,E),n.lenbits=E.bits,x){e.msg="invalid literal/lengths set",n.mode=Of;break}if(n.distbits=6,n.distcode=n.distdyn,E={bits:n.distbits},x=vf(2,n.lens,n.nlen,n.ndist,n.distcode,0,n.work,E),n.distbits=E.bits,x){e.msg="invalid distances set",n.mode=Of;break}if(n.mode=20,t===bf)break e;case 20:n.mode=21;case 21:if(s>=6&&c>=258){e.next_out=a,e.avail_out=c,e.next_in=o,e.avail_in=s,n.hold=l,n.bits=u,df(e,h),a=e.next_out,i=e.output,c=e.avail_out,o=e.next_in,r=e.input,s=e.avail_in,l=n.hold,u=n.bits,n.mode===Af&&(n.back=-1);break}for(n.back=0;S=n.lencode[l&(1<<n.lenbits)-1],m=S>>>24,v=S>>>16&255,y=65535&S,!(m<=u);){if(0===s)break e;s--,l+=r[o++]<<u,u+=8}if(v&&0==(240&v)){for(_=m,b=v,w=y;S=n.lencode[w+((l&(1<<_+b)-1)>>_)],m=S>>>24,v=S>>>16&255,y=65535&S,!(_+m<=u);){if(0===s)break e;s--,l+=r[o++]<<u,u+=8}l>>>=_,u-=_,n.back+=_}if(l>>>=m,u-=m,n.back+=m,n.length=y,0===v){n.mode=26;break}if(32&v){n.back=-1,n.mode=Af;break}if(64&v){e.msg="invalid literal/length code",n.mode=Of;break}n.extra=15&v,n.mode=22;case 22:if(n.extra){for(I=n.extra;u<I;){if(0===s)break e;s--,l+=r[o++]<<u,u+=8}n.length+=l&(1<<n.extra)-1,l>>>=n.extra,u-=n.extra,n.back+=n.extra}n.was=n.length,n.mode=23;case 23:for(;S=n.distcode[l&(1<<n.distbits)-1],m=S>>>24,v=S>>>16&255,y=65535&S,!(m<=u);){if(0===s)break e;s--,l+=r[o++]<<u,u+=8}if(0==(240&v)){for(_=m,b=v,w=y;S=n.distcode[w+((l&(1<<_+b)-1)>>_)],m=S>>>24,v=S>>>16&255,y=65535&S,!(_+m<=u);){if(0===s)break e;s--,l+=r[o++]<<u,u+=8}l>>>=_,u-=_,n.back+=_}if(l>>>=m,u-=m,n.back+=m,64&v){e.msg="invalid distance code",n.mode=Of;break}n.offset=y,n.extra=15&v,n.mode=24;case 24:if(n.extra){for(I=n.extra;u<I;){if(0===s)break e;s--,l+=r[o++]<<u,u+=8}n.offset+=l&(1<<n.extra)-1,l>>>=n.extra,u-=n.extra,n.back+=n.extra}if(n.offset>n.dmax){e.msg="invalid distance too far back",n.mode=Of;break}n.mode=25;case 25:if(0===c)break e;if(p=h-c,n.offset>p){if(p=n.offset-p,p>n.whave&&n.sane){e.msg="invalid distance too far back",n.mode=Of;break}p>n.wnext?(p-=n.wnext,f=n.wsize-p):f=n.wnext-p,p>n.length&&(p=n.length),g=n.window}else g=i,f=a-n.offset,p=n.length;p>c&&(p=c),c-=p,n.length-=p;do{i[a++]=g[f++]}while(--p);0===n.length&&(n.mode=21);break;case 26:if(0===c)break e;i[a++]=n.length,c--,n.mode=21;break;case 27:if(n.wrap){for(;u<32;){if(0===s)break e;s--,l|=r[o++]<<u,u+=8}if(h-=c,e.total_out+=h,n.total+=h,h&&(e.adler=n.check=n.flags?Hh(n.check,i,h,a-h):zh(n.check,i,h,a-h)),h=c,(n.flags?l:$f(l))!==n.check){e.msg="incorrect data check",n.mode=Of;break}l=0,u=0}n.mode=28;case 28:if(n.wrap&&n.flags){for(;u<32;){if(0===s)break e;s--,l+=r[o++]<<u,u+=8}if(l!==(4294967295&n.total)){e.msg="incorrect length check",n.mode=Of;break}l=0,u=0}n.mode=29;case 29:x=kf;break e;case Of:x=Cf;break e;case 31:return Ef;case 32:default:return Sf}return e.next_out=a,e.avail_out=c,e.next_in=o,e.avail_in=s,n.hold=l,n.bits=u,(n.wsize||h!==e.avail_out&&n.mode<Of&&(n.mode<27||t!==yf))&&Vf(e,e.output,e.next_out,h-e.avail_out),d-=e.avail_in,h-=e.avail_out,e.total_in+=d,e.total_out+=h,n.total+=h,n.wrap&&h&&(e.adler=n.check=n.flags?Hh(n.check,i,h,e.next_out-h):zh(n.check,i,h,e.next_out-h)),e.data_type=n.bits+(n.last?64:0)+(n.mode===Af?128:0)+(20===n.mode||15===n.mode?256:0),(0===d&&0===h||t===yf)&&x===wf&&(x=If),x},inflateEnd:e=>{if(!e||!e.state)return Sf;let t=e.state;return t.window&&(t.window=null),e.state=null,wf},inflateGetHeader:(e,t)=>{if(!e||!e.state)return Sf;const n=e.state;return 0==(2&n.wrap)?Sf:(n.head=t,t.done=!1,wf)},inflateSetDictionary:(e,t)=>{const n=t.length;let r,i,o;return e&&e.state?(r=e.state,0!==r.wrap&&11!==r.mode?Sf:11===r.mode&&(i=1,i=zh(i,t,n,0),i!==r.check)?Cf:(o=Vf(e,t,n,n),o?(r.mode=31,Ef):(r.havedict=1,wf))):Sf},inflateInfo:"pako inflate (from Nodeca project)"};var zf=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1};const Wf=Object.prototype.toString,{Z_NO_FLUSH:Hf,Z_FINISH:qf,Z_OK:Yf,Z_STREAM_END:Jf,Z_NEED_DICT:Xf,Z_STREAM_ERROR:Gf,Z_DATA_ERROR:Zf,Z_MEM_ERROR:Kf}=Yh;function Qf(e){this.options=zp({chunkSize:65536,windowBits:15,to:""},e||{});const t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),!(t.windowBits>=0&&t.windowBits<16)||e&&e.windowBits||(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&0==(15&t.windowBits)&&(t.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new Gp,this.strm.avail_out=0;let n=Uf.inflateInit2(this.strm,t.windowBits);if(n!==Yf)throw new Error(qh[n]);if(this.header=new zf,Uf.inflateGetHeader(this.strm,this.header),t.dictionary&&("string"==typeof t.dictionary?t.dictionary=Yp(t.dictionary):"[object ArrayBuffer]"===Wf.call(t.dictionary)&&(t.dictionary=new Uint8Array(t.dictionary)),t.raw&&(n=Uf.inflateSetDictionary(this.strm,t.dictionary),n!==Yf)))throw new Error(qh[n])}function eg(e,t){const n=new Qf(t);if(n.push(e),n.err)throw n.msg||qh[n.err];return n.result}Qf.prototype.push=function(e,t){const n=this.strm,r=this.options.chunkSize,i=this.options.dictionary;let o,a,s;if(this.ended)return!1;for(a=t===~~t?t:!0===t?qf:Hf,"[object ArrayBuffer]"===Wf.call(e)?n.input=new Uint8Array(e):n.input=e,n.next_in=0,n.avail_in=n.input.length;;){for(0===n.avail_out&&(n.output=new Uint8Array(r),n.next_out=0,n.avail_out=r),o=Uf.inflate(n,a),o===Xf&&i&&(o=Uf.inflateSetDictionary(n,i),o===Yf?o=Uf.inflate(n,a):o===Zf&&(o=Xf));n.avail_in>0&&o===Jf&&n.state.wrap>0&&0!==e[n.next_in];)Uf.inflateReset(n),o=Uf.inflate(n,a);switch(o){case Gf:case Zf:case Xf:case Kf:return this.onEnd(o),this.ended=!0,!1}if(s=n.avail_out,n.next_out&&(0===n.avail_out||o===Jf))if("string"===this.options.to){let e=Xp(n.output,n.next_out),t=n.next_out-e,i=Jp(n.output,e);n.next_out=t,n.avail_out=r-t,t&&n.output.set(n.output.subarray(e,e+t),0),this.onData(i)}else this.onData(n.output.length===n.next_out?n.output:n.output.subarray(0,n.next_out));if(o!==Yf||0!==s){if(o===Jf)return o=Uf.inflateEnd(this.strm),this.onEnd(o),this.ended=!0,!0;if(0===n.avail_in)break}}return!0},Qf.prototype.onData=function(e){this.chunks.push(e)},Qf.prototype.onEnd=function(e){e===Yf&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=Wp(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};var tg={Inflate:Qf,inflate:eg,inflateRaw:function(e,t){return(t=t||{}).raw=!0,eg(e,t)},ungzip:eg,constants:Yh};const{Deflate:ng,deflate:rg,deflateRaw:ig,gzip:og}=uf,{Inflate:ag,inflate:sg,inflateRaw:cg,ungzip:lg}=tg;var ug={__proto__:null,Deflate:ng,Inflate:ag,constants:Yh,default:{Deflate:ng,deflate:rg,deflateRaw:ig,gzip:og,Inflate:ag,inflate:sg,inflateRaw:cg,ungzip:lg,constants:Yh},deflate:rg,deflateRaw:ig,gzip:og,inflate:sg,inflateRaw:cg,ungzip:lg};return oh}(r);const d=u.uni,h=u.getApp,p=u.getCurrentPages,f=u.UniServiceJSBridge;return u}let __definePage,__registerApp,__registerPage,uni,getApp,getCurrentPages,UniServiceJSBridge;function createInstanceContext$2(e){const{weex:t,WeexPlus:n}=e,r=new n(t);if(!uni){({__definePage:__definePage,__registerApp:__registerApp,__registerPage:__registerPage,uni:uni,getApp:getApp,getCurrentPages:getCurrentPages,UniServiceJSBridge:UniServiceJSBridge}=createServiceContext(t,r,e));const n=(e.Vue2||e.Vue).observable({locale:r.weexBridge.getLanguage()});uni.$nvueState=n}return{__definePage:__definePage,__registerApp:__registerApp,__registerPage:__registerPage,plus:r,uni:uni,wx:uni,getApp:getApp,getCurrentPages:getCurrentPages,UniServiceJSBridge:UniServiceJSBridge}}function styleMixin(e){e.prototype.__merge_style=function(e={},t){if(!e)return;const n=t||this.$options.style;Object.keys(e).forEach((t=>{const r=n[t];if(r){const n=e[t];Object.keys(n).forEach((e=>{const t=n[e];let i=r[e];"object"==typeof t?("object"!=typeof i&&(i=r[e]={}),Object.keys(t).forEach((e=>{let n=!0;if(i[e]){const r=t[e].slice(1,3),o=i[e].slice(1,3);for(let e=0;e<o.length;e++){const t=r[e]-o[e];if(0!==t){n=t>0;break}}}n&&(i[e]=t[e])}))):r[e]=t}))}else n[t]=Object.assign({},e[t])})),t||(this.$options.style=n)}}function b64DecodeUnicode(e){return decodeURIComponent(atob(e).split("").map((function(e){return"%"+("00"+e.charCodeAt(0).toString(16)).slice(-2)})).join(""))}function getCurrentUserInfo(){const e=this.uni.getStorageSync("uni_id_token")||"",t=e.split(".");if(!e||3!==t.length)return{uid:null,role:[],permission:[],tokenExpired:0};let n;try{n=JSON.parse(b64DecodeUnicode(t[1]))}catch(e){throw new Error("获取当前用户信息出错，详细错误信息为："+e.message)}return n.tokenExpired=1e3*n.exp,delete n.exp,delete n.iat,n}function uniIdMixin(e,t){e.prototype.uniIDHasRole=function(e){const{role:n}=getCurrentUserInfo.bind(t)();return n.indexOf(e)>-1},e.prototype.uniIDHasPermission=function(e){const{permission:n}=getCurrentUserInfo.bind(t)();return this.uniIDHasRole("admin")||n.indexOf(e)>-1},e.prototype.uniIDTokenValid=function(){const{tokenExpired:e}=getCurrentUserInfo.bind(t)();return e>Date.now()}}const decode=decodeURIComponent;function parseQuery(e){const t={};return(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((e=>{const n=e.replace(/\+/g," ").split("="),r=decode(n.shift()),i=n.length>0?decode(n.join("=")):null;void 0===t[r]?t[r]=i:Array.isArray(t[r])?t[r].push(i):t[r]=[t[r],i]})),t):t}const LIFECYCLE_HOOKS=["onLaunch","onShow","onHide","onUniNViewMessage","onPageNotFound","onThemeChange","onError","onUnhandledRejection","onLoad","onReady","onUnload","onPullDownRefresh","onReachBottom","onTabItemTap","onAddToFavorites","onShareTimeline","onShareAppMessage","onResize","onPageScroll","onNavigationBarButtonTap","onBackPress","onNavigationBarSearchInputChanged","onNavigationBarSearchInputConfirmed","onNavigationBarSearchInputClicked","onPageShow","onPageHide","onPageResize"];function parseQueryByBundleUrl(e){let t={};if(e&&"string"==typeof e){const n=e.indexOf("?");if(-1!==n){let r=e.substr(n+1);".js"===r.substr(-3)&&(r=r.substr(0,r.length-3)),t=parseQuery(r)}}return t}const INSTANCE_ID="[[CurrentInstanceId]]";function getId(e){return e[INSTANCE_ID]}function initScope(e,t){const n=t.getCurrentPages(),r=n[n.length-1];if(this.$options.route===r.route)this[INSTANCE_ID]||(this[INSTANCE_ID]=getId(e),r.onNVuePageCreated&&r.onNVuePageCreated(this,r));else if(e.config.oldInstanceId){const n=t.getCurrentPages(!0).find((t=>getId(t)===e.config.oldInstanceId));n&&(n.$vm=this)}this.$scope=r}function lifecycleMixin(e,t,n){const r=e.config.optionMergeStrategies,i=r.created;LIFECYCLE_HOOKS.forEach((e=>{r[e]=i}));const o=parseQueryByBundleUrl(t.config.bundleUrl);e.mixin({beforeCreate(){this._$weex=t;try{const e=n.getApp({allowDefault:!0});e&&!this.$store&&(e.$store||e.$vm&&e.$vm.$store)&&(this.$store=e.$store||e.$vm.$store)}catch(e){}switch(this.$options.mpType){case"app":if(this.mpType="app",this.$options.render=function(){},n.weex.config.preload){n.weex.requireModule("globalEvent").addEventListener("launchApp",(()=>{n.plus.updateConfigInfo&&n.plus.updateConfigInfo(),n.__registerApp(this,e)}))}else n.__registerApp(this,e);break;case"page":this.mpType="page";const r=n.plus.webview.currentWebview();r.__preload__?(r.addEventListener("show",(()=>{!this.$scope&&initScope.call(this,t,n),this.__call_hook("onShow")})),r.addEventListener("hide",(()=>{this.__call_hook("onHide")}))):(0===n.getCurrentPages().length&&n.__registerPage({path:"/"+this.$options.route,webview:r,vm:this}),initScope.call(this,t,n))}},created(){if("page"===this.$options.mpType){const e=n.plus.webview.currentWebview();if(e.__preload__){const t=Object.assign(Object.create(null),o);if(e.__query__)try{Object.assign(t,JSON.parse(e.__query__))}catch(e){}this.__call_hook("onLoad",t)}else{const e=Object.assign(Object.create(null),o);{const t=n.getCurrentPages();Object.assign(e,t[t.length-1].$page.options)}this.__call_hook("onLoad",e),this.__call_hook("onShow")}}},mounted(){"page"===this.$options.mpType&&(this.__call_hook("onReady"),this.$options.onPageScroll&&this.$el.addEvent("scroll",(e=>{e.scrollTop=e.detail.scrollTop,this.__call_hook("onPageScroll",e)})),this.$options.onReachBottom&&this.$el.addEvent("scrolltolower",(e=>{this.__call_hook("onReachBottom",e)})))},beforeDestroy(){"page"===this.$options.mpType&&this.__call_hook("onUnload")}})}function broadcast(e,t,...n){const r=this.$children,i=r.length;for(let o=0;o<i;o++){const i=r[o],a=i.$options.name;if(~e.indexOf(a))return i.$emit.apply(i,[t].concat(n)),!1;if(!1===broadcast.apply(i,[e,t].concat([n])))return!1}}var emitter={methods:{$trigger(e,t){this.$emit(e,processCustomEvent.call(this,e,t,this.$el))},$dispatch(e,t,...n){"string"==typeof e&&(e=[e]);let r=this.$parent||this.$root,i=r.$options.name;for(;r&&(!i||!~e.indexOf(i));)r=r.$parent,r&&(i=r.$options.name);r&&r.$emit.apply(r,[t].concat(n))},$broadcast(e,t,...n){"string"==typeof e&&(e=[e]),broadcast.apply(this,[e,t].concat(n))}}},listeners={props:{id:{type:String,default:""}},created(){this._addListeners(this.id),this.$watch("id",((e,t)=>{this._removeListeners(t,!0),this._addListeners(e,!0)}))},beforeDestroy(){this._removeListeners(this.id)},methods:{_addListeners(e,t){if(t&&!e)return;const{listeners:n}=this.$options;"Object"===typof(n)&&Object.keys(n).forEach((r=>{t?0!==r.indexOf("@")&&0!==r.indexOf("uni-")&&this._$bus.on(`uni-${r}-${e}`,this[n[r]]):0===r.indexOf("@")?this.$on(`uni-${r.substr(1)}`,this[n[r]]):0===r.indexOf("uni-")?this._$bus.on(r,this[n[r]]):e&&this._$bus.on(`uni-${r}-${e}`,this[n[r]])}))},_removeListeners(e,t){if(t&&!e)return;const{listeners:n}=this.$options;"Object"===typof(n)&&Object.keys(n).forEach((r=>{t?0!==r.indexOf("@")&&0!==r.indexOf("uni-")&&this._$bus.off(`uni-${r}-${e}`,this[n[r]]):0===r.indexOf("@")?this.$off(`uni-${r.substr(1)}`,this[n[r]]):0===r.indexOf("uni-")?this._$bus.off(r,this[n[r]]):e&&this._$bus.off(`uni-${r}-${e}`,this[n[r]])}))}}};const _adDataCache$1={};function getAdData$1(e,t,n,r,i,o){const a=t+"-"+n,s=_adDataCache$1[a];s&&s.length>0?i(s.splice(0,1)[0]):e.ad.getAds({adpid:t,count:5,width:n,ext:{channel:r}},(e=>{const t=e.ads;i(t.splice(0,1)[0]),_adDataCache$1[a]=s?s.concat(t):t}),(e=>{o({errCode:e.code,errMsg:e.message})}))}function getAd$1(e,t){return{name:"Ad",isReserved:!0,mixins:[emitter,listeners],props:{adpid:{type:[Number,String],default:""},data:{type:Object},width:{type:String,default:""},channel:{type:String,default:""}},data:()=>({adWidth:0,adData:{}}),mounted(){if(this.data)this._fillData(this.data);else if(this.adpid){if(this.width&&this.width.length>0){const e=parseFloat(this.width);return/\d+[ur]px$/i.test(this.width)?this.adWidth=upx2px(e):this.adWidth=e,void this._loadData()}setTimeout((()=>{e.requireModule("dom").getComponentRect(this.$refs.ad,(e=>{this.adWidth=0===e.size.width?-1:e.size.width,this._loadData()}))}),50)}},watch:{adpid(e){e&&this._loadData(e)},data(e){e&&this._fillData(e)}},methods:{_ondownloadchange(e){this.$trigger("downloadchange",e.detail)},_ondislike(e){this.$trigger("close",e.detail)},_loadData(e){getAdData$1(t.plus||new t.WeexPlus(t.weex),e||this.adpid,this.adWidth,this.channel,(e=>{this._fillData(e)}),(e=>{this.$trigger("error",e)}))},_fillData(e){this.adData=e,this.$trigger("load",{})}},render(e){const t={},n=this.$listeners;return n.downloadchange&&(t.downloadchange=this._ondownloadchange),n.close&&(t.dislike=this._ondislike),e("u-ad",this._g({ref:"ad",attrs:{data:this.adData,rendering:!0},on:t},n),[],1)}}}function init$n(e,t,n){e.component("ad",getAd$1(t,n))}const _adDataCache={};function getAdData(e,t,n,r,i,o){const a=t+"-"+n,s=_adDataCache[a];s&&s.length>0?i(s.splice(0,1)[0]):e.ad.getDrawAds({adpid:t,count:3,width:n,height:r},(e=>{const t=e.ads;i(t.splice(0,1)[0]),_adDataCache[a]=s?s.concat(t):t}),(e=>{o({errCode:e.code,errMsg:e.message})}))}function getAd(e,t){return{name:"AdDraw",isReserved:!0,mixins:[emitter,listeners],props:{adpid:{type:[Number,String],default:""},data:{type:Object},width:{type:String,default:""}},data:()=>({adWidth:0,adHeight:0,adData:{}}),mounted(){this.data?this._fillData(this.data):this.adpid&&setTimeout((()=>{e.requireModule("dom").getComponentRect(this.$refs.ad,(e=>{this.adWidth=0===e.size.width?-1:e.size.width,this.adHeight=0===e.size.height?-1:e.size.height,this._loadData()}))}),100)},watch:{adpid(e){e&&this._loadData(e)},data(e){e&&this._fillData(e)}},beforeDestroy(){(t.plus||new t.WeexPlus(t.weex)).ad.releaseAdData(this.adData)},methods:{_ondislike(e){this.$trigger("close",e.detail)},_loadData(e){getAdData(t.plus||new t.WeexPlus(t.weex),e||this.adpid,this.adWidth,this.adHeight,(e=>{this._fillData(e)}),(e=>{this.$trigger("error",e)}))},_fillData(e){this.adData=e,this.$trigger("load",{})}},render(e){const t={},n=this.$listeners;return n.close&&(t.dislike=this._ondislike),e("u-ad-draw",this._g({ref:"ad",attrs:{data:this.adData,rendering:!0},on:t},n),[],1)}}}function init$m(e,t,n){e.component("ad-draw",getAd(t,n))}const OPEN_TYPES$1=["agreePrivacy","disagreePrivacy"];function getButton(e,t){return{name:"Button",isReserved:!0,mixins:[emitter,listeners],props:{hoverClass:{type:String,default:"button-hover"},disabled:{type:[Boolean,String],default:!1},id:{type:String,default:""},type:{type:String,default:"default"},size:{type:String,default:"default"},plain:{type:[Boolean,String],default:!1},loading:{type:[Boolean,String],default:!1},hoverStopPropagation:{type:Boolean,default:!1},hoverStartTime:{type:Number,default:20},hoverStayTime:{type:Number,default:70},openType:{type:String,default:""},formType:{type:String,default:"",validator:function(e){return~["","submit","reset"].indexOf(e)}}},data:function(){return{TYPES:{default:"d",primary:"p",warn:"w"},clickFunction:null}},methods:{_onClick(e,n){if(!this.disabled&&(n&&this.$el.click(),this.formType&&this.$dispatch("Form","submit"===this.formType?"uni-form-submit":"uni-form-reset",{type:this.formType},this),this.openType.length>0&&OPEN_TYPES$1.indexOf(this.openType)>=0)){const e=t.plus||new t.WeexPlus(t.weex);this["_"+this.openType](e),this.$trigger(this.openType.toLowerCase(),{})}},_agreePrivacy(e){e.runtime.agreePrivacy()},_disagreePrivacy(e){e.runtime.disagreePrivacy()},_getClass(e){let t="ub-"+this.TYPES[this.type]+e;return this.disabled&&(t+="-d"),this.plain&&(t+="-plain"),"-t"===e&&"mini"===this.size&&(t+=" ub-mini"),t},_getHoverClass(e){if(this.disabled)return"";let t="ub-"+this.TYPES[this.type]+e+"-hover";return this.plain&&(t+="-plain"),t}},render(e){const t=this;let n=Array.isArray(this.$slots.default)?this.$slots.default:[];return 1===n.length&&n[0].text&&(n=[e("u-text",{staticClass:["ub-t"],class:t._getClass("-t")},[t._t("default")],2)]),e("view",t._g({staticClass:["ub"],class:t._getClass(""),attrs:{hoverClass:t._getHoverClass(""),hoverStartTime:t.hoverStartTime,hoverStayTime:t.hoverStayTime},on:{click:t._onClick}},t.$listeners),[t.loading?e("loading-indicator",{staticClass:["ub-loading"],class:["ub-"+t.TYPES[t.type]+"-loading"],attrs:{arrow:"false",animating:"true"}}):t._e(),...n],1)},style:{ub:{flexDirection:"row",alignItems:"center",justifyContent:"center",position:"relative",paddingLeft:"5",paddingRight:"5",overflow:"hidden",color:"#000000",backgroundColor:"#f8f8f8",borderRadius:"5",borderStyle:"solid",borderWidth:"1",borderColor:"#dbdbdb"},"ub-t":{color:"#000000",fontSize:"18",textDecoration:"none",lineHeight:"46"},"ub-d":{backgroundColor:"#f8f8f8"},"ub-p":{backgroundColor:"#007aff",borderColor:"#0062cc"},"ub-w":{backgroundColor:"#e64340",borderColor:"#b83633"},"ub-d-t":{color:"#000000"},"ub-p-t":{color:"#ffffff"},"ub-w-t":{color:"#ffffff"},"ub-d-d":{backgroundColor:"#f7f7f7"},"ub-p-d":{backgroundColor:"#63acfc",borderColor:"#4f8aca"},"ub-w-d":{backgroundColor:"#ec8b89",borderColor:"#bd6f6e"},"ub-d-t-d":{color:"#cccccc"},"ub-p-t-d":{color:"rgba(255,255,255,0.6)"},"ub-w-t-d":{color:"rgba(255,255,255,0.6)"},"ub-d-plain":{borderColor:"#353535",backgroundColor:"rgba(0,0,0,0)"},"ub-p-plain":{borderColor:"#007aff",backgroundColor:"rgba(0,0,0,0)"},"ub-w-plain":{borderColor:"#e64340",backgroundColor:"rgba(0,0,0,0)"},"ub-d-t-plain":{color:"#353535"},"ub-p-t-plain":{color:"#007aff"},"ub-w-t-plain":{color:"#e64340"},"ub-d-d-plain":{borderColor:"#c6c6c6",backgroundColor:"rgba(0,0,0,0)"},"ub-p-d-plain":{borderColor:"#c6c6c6",backgroundColor:"rgba(0,0,0,0)"},"ub-w-d-plain":{borderColor:"#c6c6c6",backgroundColor:"rgba(0,0,0,0)"},"ub-d-t-d-plain":{color:"rgba(0,0,0,0.2)"},"ub-p-t-d-plain":{color:"rgba(0,0,0,0.2)"},"ub-w-t-d-plain":{color:"rgba(0,0,0,0.2)"},"ub-mini":{lineHeight:"30",fontSize:"13",paddingTop:0,paddingRight:"17.5",paddingBottom:0,paddingLeft:"17.5"},"ub-loading":{width:"18",height:"18",marginRight:"10"},"ub-d-loading":{color:"rgba(255,255,255,0.6)",backgroundColor:"rgba(0,0,0,0)"},"ub-p-loading":{color:"rgba(255,255,255,0.6)",backgroundColor:"rgba(0,0,0,0)"},"ub-w-loading":{color:"rgba(255,255,255,0.6)",backgroundColor:"rgba(0,0,0,0)"},"ub-d-loading-plain":{color:"#353535"},"ub-p-loading-plain":{color:"#007aff",backgroundColor:"#0062cc"},"ub-w-loading-plain":{color:"#e64340",backgroundColor:"rgba(0,0,0,0)"},"ub-d-hover":{opacity:.8,backgroundColor:"#dedede"},"ub-p-hover":{opacity:.8,backgroundColor:"#0062cc"},"ub-w-hover":{opacity:.8,backgroundColor:"#ce3c39"},"ub-d-t-hover":{color:"rgba(0,0,0,0.6)"},"ub-p-t-hover":{color:"rgba(255,255,255,0.6)"},"ub-w-t-hover":{color:"rgba(255,255,255,0.6)"},"ub-d-hover-plain":{color:"rgba(53,53,53,0.6)",borderColor:"rgba(53,53,53,0.6)",backgroundColor:"rgba(0,0,0,0)"},"ub-p-hover-plain":{color:"rgba(26,173,25,0.6)",borderColor:"rgba(0,122,255,0.6)",backgroundColor:"rgba(0,0,0,0)"},"ub-w-hover-plain":{color:"rgba(230,67,64,0.6)",borderColor:"rgba(230,67,64,0.6)",backgroundColor:"rgba(0,0,0,0)"}}}}function init$l(e,t,n){e.component("button",getButton(t,n))}function getCheckboxGroup(e){return{name:"CheckboxGroup",isReserved:!0,mixins:[emitter,listeners],props:{name:{type:String,default:""}},data:()=>({checkboxList:[]}),listeners:{"@checkbox-change":"_changeHandler","@checkbox-group-update":"_checkboxGroupUpdateHandler"},created(){this.$dispatch("Form","uni-form-group-update",{type:"add",vm:this})},beforeDestroy(){this.$dispatch("Form","uni-form-group-update",{type:"remove",vm:this})},methods:{_changeHandler(e){const t=[];this.checkboxList.forEach((function(e){e.checkboxChecked&&t.push(e.value)})),this.$trigger("change",{value:t})},_checkboxGroupUpdateHandler(e){if("add"===e.type)this.checkboxList.push(e.vm);else{const t=this.checkboxList.indexOf(e.vm);this.checkboxList.splice(t,1)}},_getFormData(){const e={};if(""!==this.name){const t=[];this.checkboxList.forEach((function(e){e.checkboxChecked&&t.push(e.value)})),e.value=t,e.key=this.name}return e}},render(e){const t=this;return e("div",t._g({staticClass:["uni-checkbox-group"]},t.$listeners),[t._t("default")],2)},style:{}}}function init$k(e,t){e.component("checkbox-group",getCheckboxGroup())}function getCheckbox(e){return{name:"Checkbox",isReserved:!0,mixins:[emitter,listeners],props:{checked:{type:[Boolean,String],default:!1},id:{type:String,default:""},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#007aff"},value:{type:String,default:""}},data(){return{checkboxChecked:this.checked,checkboxValue:this.value}},watch:{checked:function(e){this.checkboxChecked=e},value:function(e){this.checkboxValue=e}},listeners:{"label-click":"_onClick","@label-click":"_onClick"},computed:{checkboxColor:function(){return this.disabled?"#adadad":this.color}},created(){this.$dispatch("CheckboxGroup","uni-checkbox-group-update",{type:"add",vm:this}),this.$dispatch("Form","uni-form-group-update",{type:"add",vm:this})},beforeDestroy(){this.$dispatch("CheckboxGroup","uni-checkbox-group-update",{type:"remove",vm:this}),this.$dispatch("Form","uni-form-group-update",{type:"remove",vm:this})},methods:{_onClick(e){this.disabled||(this.checkboxChecked=!this.checkboxChecked,this.$dispatch("CheckboxGroup","uni-checkbox-change",e))},_resetFormData(){this.checkboxChecked=!1}},render(e){const t=this;return e("div",t._g({attrs:{dataUncType:"uni-checkbox"},on:{click:t._onClick}},t.$listeners),[e("div",{staticClass:["uni-checkbox"]},[e("div",{staticClass:["uni-checkbox-input"],class:[t.disabled?"uni-checkbox-input-disabled":""]},[t.checkboxChecked?e("u-text",{staticClass:["uni-icon"],style:{color:t.checkboxColor}},[t._v(t._s(""))]):t._e()]),e("u-text",{staticClass:["uni-slot"]},[t._t("default")],2)])])},style:{"uni-checkbox":{flexDirection:"row",alignItems:"center"},"uni-checkbox-input":{justifyContent:"center",alignItems:"center",position:"relative",borderWidth:"1",borderColor:"#d1d1d1",borderStyle:"solid",backgroundColor:"#ffffff",borderRadius:"3",width:"22",height:"22"},"uni-icon":{fontFamily:"unincomponents",fontSize:"16",marginLeft:"2",marginTop:"2",color:"#007aff"},"uni-checkbox-input-disabled":{backgroundColor:"#e1e1e1"},"uni-checkbox-input-disabled-before":{color:"#adadad"},"uni-slot":{fontSize:"16",marginLeft:"5"},"uni-checkbox-group":{display:"block"}}}}function init$j(e,t){e.component("checkbox",getCheckbox())}const NATIVE_COMPONENT_TYPES=["u-input","u-textarea"];function getForm(e){const t=e.requireModule("plus");return{name:"Form",isReserved:!0,mixins:[emitter,listeners],data:function(){return{childrenList:[]}},listeners:{"@form-submit":"_onSubmit","@form-reset":"_onReset","@form-group-update":"_formGroupUpdateHandler"},methods:{_onSubmit(e){const t=this._getNativeFormData()||{};this.childrenList.forEach((function(e){e._getFormData&&e._getFormData().key&&(t[e._getFormData().key]=e._getFormData().value)})),this.$trigger("submit",{value:t})},_onReset(e){this.$trigger("reset",{}),this._getNativeFormData(!0),this.childrenList.forEach((function(e){e._resetFormData&&e._resetFormData()}))},_formGroupUpdateHandler(e){if("add"===e.type)this.childrenList.push(e.vm);else{const t=this.childrenList.indexOf(e.vm);this.childrenList.splice(t,1)}},_getNativeFormData(e){const n={};return function r(i){i.forEach((function(i){NATIVE_COMPONENT_TYPES.indexOf(i.tag)>=0&&i.data.attrs&&i.data.attrs.name&&(e?i.elm.setValue(""):n[i.data.attrs.name]=t.getValue(i.elm.nodeId)),i.children&&r(i.children)}))}(this.$vnode.componentOptions.children),n}},render(e){const t=this;return e("view",t._g({},t.$listeners),[t._t("default")],2)}}}function init$i(e,t){e.component("form",getForm(t))}const iconChars={success:"",info:"",warn:"",waiting:"",safe_success:"",safe_warn:"",success_circle:"",success_no_circle:"",waiting_circle:"",circle:"",download:"",info_circle:"",cancel:"",search:"",clear:""},iconColors={success:"#09bb07",info:"#10aeff",warn:"#f76260",waiting:"#10aeff",safe_success:"#09bb07",safe_warn:"#ffbe00",success_circle:"#09bb07",success_no_circle:"#09bb07",waiting_circle:"#10aeff",circle:"#c9c9c9",download:"#09bb07",info_circle:"#09bb07",cancel:"#f43530",search:"#b2b2b2",clear:"#b2b2b2"};function getIcon(e){return{name:"Icon",isReserved:!0,props:{type:{type:String,default:""},size:{type:[String,Number],default:23},color:{type:String,default:""}},data:()=>({iconChars:iconChars}),beforeCreate(){},computed:{styles(){return{color:this.color||iconColors[this.type],fontSize:this.size}}},render(e){const t=this;return e("u-text",t._g({staticClass:["uni-icon"],style:t.styles},t.$listeners),[t.iconChars[t.type]])},style:{"uni-icon":{fontFamily:"unincomponents"}}}}function init$h(e,t){e.component("icon",getIcon())}function getLabel(e){return{name:"Label",isReserved:!0,mixins:[emitter,listeners],props:{for:{type:String,default:""}},methods:{_onClick:function(e){const t=e.target.attr.dataUncType||"";let n=/^uni-(checkbox|radio|switch)-/.test(t);n||(n=/^uni-(checkbox|radio|switch|button)$/i.test(t)),n||(this.for?this.$emit("uni-label-click-"+this.$page.id+"-"+this.for,e,!0):this.$broadcast(["Checkbox","Radio","Switch","Button"],"uni-label-click",e,!0))}},render(e){const t=this;return e("div",t._g({on:{click:t._onClick}},t.$listeners),[t._t("default")],2)}}}function init$g(e,t){e.component("label",getLabel())}function getMovableArea(e){const t=e.requireModule("dom");return{name:"MovableArea",isReserved:!0,props:{scaleArea:{type:Boolean,default:!1}},data:()=>({width:0,height:0,items:[]}),methods:{_resize(){this._getWH().then((()=>{this.items.forEach((function(e){e.componentInstance.setParent()}))}))},_panstart(e){this.touchItem&&this.touchItem.touchstart(e)},_panmove(e){e.stopPropagation(),this.touchItem&&this.touchItem.touchmove(e)},_panend(e){this.touchItem&&(this.touchItem.touchend(e),this.touchItem=null)},_getWH(){return this._getComponentSize(this.$refs.el).then((({width:e,height:t,top:n,left:r})=>{this.width=e,this.height=t,this.top=n,this.left=r}))},_getComponentSize:e=>new Promise((n=>{t.getComponentRect(e,(({size:e})=>{n(e)}))}))},created(){this.items=[],this.gapV={x:null,y:null},this.pinchStartLen=null},mounted(){setTimeout((()=>{this.__isMounted=!0,this._resize()}),200)},render(e){const t=[];(Array.isArray(this.$slots.default)?deepClone(this.$slots.default,e):[]).forEach((e=>{e.componentOptions&&"movable-view"===e.componentOptions.tag&&t.push(e)})),this.items=t;const n={};return["panstart","panmove","panend"].forEach((e=>{n[e]=this[`_${e}`]})),e("div",this._g({ref:"el",on:n,staticClass:["uni-movable-area"]},this.$listeners),t,2)},style:{"uni-movable-area":{width:"10px",height:"10px"}}}}function init$f(e,t){e.component("movable-area",getMovableArea(t))}var touchtrack={methods:{touchtrack:function(e){const t=this;let n=0,r=0,i=0,o=0;const a=function(a,s,c,l){if(!1===t[e]({target:a.target,currentTarget:a.currentTarget,stopPropagation:a.stopPropagation.bind(a),touches:a.touches,changedTouches:a.changedTouches,detail:{state:s,x0:c,y0:l,dx:c-n,dy:l-r,ddx:c-i,ddy:l-o,timeStamp:a.timeStamp||Date.now()}}))return!1};let s=null;this.addListener("touchstart",(function(e){if(!s)return s=e,n=i=e.touches[0].pageX,r=o=e.touches[0].pageY,a(e,"start",n,r)})),this.addListener("touchmove",(function(e){if(s){const t=a(e,"move",e.touches[0].pageX,e.touches[0].pageY);return i=e.touches[0].pageX,o=e.touches[0].pageY,t}})),this.addListener("touchend",(function(e){if(s)return s=null,a(e,"end",e.changedTouches[0].pageX,e.changedTouches[0].pageY)}))},touchstart(e){this.callback("touchstart",e)},touchmove(e){this.callback("touchmove",e)},touchend(e){this.callback("touchend",e)},addListener(e,t){this.__event[e]=function(e){"function"==typeof t&&(e.touches=e.changedTouches,!1===t(e)&&e.stopPropagation())}},callback(e,t){this.__event[e]&&this.__event[e](t)}},created(){this.__event={}}};function e(e,t,n){return e>t-n&&e<t+n}function t(t,n){return e(t,0,n)}function Decline(){}function Friction(e,t){this._m=e,this._f=1e3*t,this._startTime=0,this._v=0}function Spring(e,t,n){this._m=e,this._k=t,this._c=n,this._solution=null,this._endPosition=0,this._startTime=0}function STD(e,t,n){this._springX=new Spring(e,t,n),this._springY=new Spring(e,t,n),this._springScale=new Spring(e,t,n),this._startTime=0}Decline.prototype.x=function(e){return Math.sqrt(e)},Friction.prototype.setV=function(e,t){const n=Math.pow(Math.pow(e,2)+Math.pow(t,2),.5);this._x_v=e,this._y_v=t,this._x_a=-this._f*this._x_v/n,this._y_a=-this._f*this._y_v/n,this._t=Math.abs(e/this._x_a)||Math.abs(t/this._y_a),this._lastDt=null,this._startTime=(new Date).getTime()},Friction.prototype.setS=function(e,t){this._x_s=e,this._y_s=t},Friction.prototype.s=function(e){void 0===e&&(e=((new Date).getTime()-this._startTime)/1e3),e>this._t&&(e=this._t,this._lastDt=e);let t=this._x_v*e+.5*this._x_a*Math.pow(e,2)+this._x_s,n=this._y_v*e+.5*this._y_a*Math.pow(e,2)+this._y_s;return(this._x_a>0&&t<this._endPositionX||this._x_a<0&&t>this._endPositionX)&&(t=this._endPositionX),(this._y_a>0&&n<this._endPositionY||this._y_a<0&&n>this._endPositionY)&&(n=this._endPositionY),{x:t,y:n}},Friction.prototype.ds=function(e){return void 0===e&&(e=((new Date).getTime()-this._startTime)/1e3),e>this._t&&(e=this._t),{dx:this._x_v+this._x_a*e,dy:this._y_v+this._y_a*e}},Friction.prototype.delta=function(){return{x:-1.5*Math.pow(this._x_v,2)/this._x_a||0,y:-1.5*Math.pow(this._y_v,2)/this._y_a||0}},Friction.prototype.dt=function(){return-this._x_v/this._x_a},Friction.prototype.done=function(){const t=e(this.s().x,this._endPositionX)||e(this.s().y,this._endPositionY)||this._lastDt===this._t;return this._lastDt=null,t},Friction.prototype.setEnd=function(e,t){this._endPositionX=e,this._endPositionY=t},Friction.prototype.reconfigure=function(e,t){this._m=e,this._f=1e3*t},Spring.prototype._solve=function(e,t){const n=this._c,r=this._m,i=this._k,o=n*n-4*r*i;if(0===o){const i=-n/(2*r),o=e,a=t/(i*e);return{x:function(e){return(o+a*e)*Math.pow(Math.E,i*e)},dx:function(e){const t=Math.pow(Math.E,i*e);return i*(o+a*e)*t+a*t}}}if(o>0){const i=(-n-Math.sqrt(o))/(2*r),a=(-n+Math.sqrt(o))/(2*r),s=(t-i*e)/(a-i),c=e-s;return{x:function(e){let t,n;return e===this._t&&(t=this._powER1T,n=this._powER2T),this._t=e,t||(t=this._powER1T=Math.pow(Math.E,i*e)),n||(n=this._powER2T=Math.pow(Math.E,a*e)),c*t+s*n},dx:function(e){let t,n;return e===this._t&&(t=this._powER1T,n=this._powER2T),this._t=e,t||(t=this._powER1T=Math.pow(Math.E,i*e)),n||(n=this._powER2T=Math.pow(Math.E,a*e)),c*i*t+s*a*n}}}const a=Math.sqrt(4*r*i-n*n)/(2*r),s=-n/2*r,c=e,l=(t-s*e)/a;return{x:function(e){return Math.pow(Math.E,s*e)*(c*Math.cos(a*e)+l*Math.sin(a*e))},dx:function(e){const t=Math.pow(Math.E,s*e),n=Math.cos(a*e),r=Math.sin(a*e);return t*(l*a*n-c*a*r)+s*t*(l*r+c*n)}}},Spring.prototype.x=function(e){return void 0===e&&(e=((new Date).getTime()-this._startTime)/1e3),this._solution?this._endPosition+this._solution.x(e):0},Spring.prototype.dx=function(e){return void 0===e&&(e=((new Date).getTime()-this._startTime)/1e3),this._solution?this._solution.dx(e):0},Spring.prototype.setEnd=function(e,n,r){if(r||(r=(new Date).getTime()),e!==this._endPosition||!t(n,.1)){n=n||0;let i=this._endPosition;this._solution&&(t(n,.1)&&(n=this._solution.dx((r-this._startTime)/1e3)),i=this._solution.x((r-this._startTime)/1e3),t(n,.1)&&(n=0),t(i,.1)&&(i=0),i+=this._endPosition),this._solution&&t(i-e,.1)&&t(n,.1)||(this._endPosition=e,this._solution=this._solve(i-this._endPosition,n),this._startTime=r)}},Spring.prototype.snap=function(e){this._startTime=(new Date).getTime(),this._endPosition=e,this._solution={x:function(){return 0},dx:function(){return 0}}},Spring.prototype.done=function(n){return n||(n=(new Date).getTime()),e(this.x(),this._endPosition,.1)&&t(this.dx(),.1)},Spring.prototype.reconfigure=function(e,t,n){this._m=e,this._k=t,this._c=n,this.done()||(this._solution=this._solve(this.x()-this._endPosition,this.dx()),this._startTime=(new Date).getTime())},Spring.prototype.springConstant=function(){return this._k},Spring.prototype.damping=function(){return this._c},Spring.prototype.configuration=function(){return[{label:"Spring Constant",read:this.springConstant.bind(this),write:function(e,t){e.reconfigure(1,t,e.damping())}.bind(this,this),min:100,max:1e3},{label:"Damping",read:this.damping.bind(this),write:function(e,t){e.reconfigure(1,e.springConstant(),t)}.bind(this,this),min:1,max:500}]},STD.prototype.setEnd=function(e,t,n,r){const i=(new Date).getTime();this._springX.setEnd(e,r,i),this._springY.setEnd(t,r,i),this._springScale.setEnd(n,r,i),this._startTime=i},STD.prototype.x=function(){const e=((new Date).getTime()-this._startTime)/1e3;return{x:this._springX.x(e),y:this._springY.x(e),scale:this._springScale.x(e)}},STD.prototype.done=function(){const e=(new Date).getTime();return this._springX.done(e)&&this._springY.done(e)&&this._springScale.done(e)},STD.prototype.reconfigure=function(e,t,n){this._springX.reconfigure(e,t,n),this._springY.reconfigure(e,t,n),this._springScale.reconfigure(e,t,n)};let requesting=!1;function requestAnimationFrame$1(e){return setTimeout(e,16)}function cancelAnimationFrame(e){clearTimeout(e)}function _requestAnimationFrame(e){requesting||(requesting=!0,requestAnimationFrame$1((function(){e(),requesting=!1})))}function v(e,t){return+((1e3*e-1e3*t)/1e3).toFixed(1)}function g(e,t,n){const r={id:0,cancelled:!1};return function t(n,r,i,o){if(!n||!n.cancelled){i(r);const a=e.done();a||n.cancelled||(n.id=requestAnimationFrame$1(t.bind(null,n,r,i,o))),a&&o&&o(r)}}(r,e,t,n),{cancel:function(e){e&&e.id&&cancelAnimationFrame(e.id),e&&(e.cancelled=!0)}.bind(null,r),model:e}}function getMovableView(e){const t=e.requireModule("dom"),n=e.requireModule("animation");return{name:"MovableView",isReserved:!0,mixins:[touchtrack,emitter],props:{direction:{type:String,default:"none"},inertia:{type:[Boolean,String],default:!1},outOfBounds:{type:[Boolean,String],default:!1},x:{type:[Number,String],default:0},y:{type:[Number,String],default:0},damping:{type:[Number,String],default:20},friction:{type:[Number,String],default:2},disabled:{type:[Boolean,String],default:!1},scale:{type:[Boolean,String],default:!1},scaleMin:{type:[Number,String],default:.5},scaleMax:{type:[Number,String],default:10},scaleValue:{type:[Number,String],default:1},animation:{type:[Boolean,String],default:!0}},data(){return{xSync:this._getPx(this.x),ySync:this._getPx(this.y),scaleValueSync:this._getScaleNumber(this.scaleValue),width:0,height:0,minX:0,minY:0,maxX:0,maxY:0}},computed:{dampingNumber(){const e=Number(this.damping);return isNaN(e)?20:e},frictionNumber(){const e=Number(this.friction);return isNaN(e)||e<=0?2:e},scaleMinNumber(){const e=Number(this.scaleMin);return isNaN(e)?.5:e},scaleMaxNumber(){const e=Number(this.scaleMax);return isNaN(e)?10:e},xMove(){return"all"===this.direction||"horizontal"===this.direction},yMove(){return"all"===this.direction||"vertical"===this.direction}},watch:{x(e){this.xSync=this._getPx(e)},xSync(e){this._setX(e)},y(e){this.ySync=this._getPx(e)},ySync(e){this._setY(e)},scaleValue(e){this._setScaleValue(this._getScaleNumber(e))},scaleValueSync(e){this._setScaleValue(e)},scaleMinNumber(){this._setScaleMinOrMax()},scaleMaxNumber(){this._setScaleMinOrMax()}},created:function(){this._offset={x:0,y:0},this._scaleOffset={x:0,y:0},this._translateX=0,this._translateY=0,this._scale=1,this._oldScale=1,this._STD=new STD(1,9*Math.pow(this.dampingNumber,2)/40,this.dampingNumber),this._friction=new Friction(1,this.frictionNumber),this._declineX=new Decline,this._declineY=new Decline,this.__touchInfo={historyX:[0,0],historyY:[0,0],historyT:[0,0]},this._rect={top:0,left:0,width:0,height:0}},mounted:function(){this.touchtrack("_onTrack"),setTimeout((()=>{this._updateRect().then((()=>{this.setParent()}))}),100),this._friction.reconfigure(1,this.frictionNumber),this._STD.reconfigure(1,9*Math.pow(this.dampingNumber,2)/40,this.dampingNumber)},methods:{_getPx:e=>Number(e)||0,_getScaleNumber:e=>(e=Number(e),isNaN(e)?1:e),_setX:function(e){if(this.xMove){if(e+this._scaleOffset.x===this._translateX)return this._translateX;this._SFA&&this._SFA.cancel(),this._animationTo(e+this._scaleOffset.x,this.ySync+this._scaleOffset.y,this._scale)}return e},_setY:function(e){if(this.yMove){if(e+this._scaleOffset.y===this._translateY)return this._translateY;this._SFA&&this._SFA.cancel(),this._animationTo(this.xSync+this._scaleOffset.x,e+this._scaleOffset.y,this._scale)}return e},_setScaleMinOrMax:function(){if(!this.scale)return!1;this._updateScale(this._scale,!0),this._updateOldScale(this._scale)},_setScaleValue:function(e){return!!this.scale&&(e=this._adjustScale(e),this._updateScale(e,!0),this._updateOldScale(e),e)},__handleTouchStart:function(){this._isScaling||this.disabled||(this._FA&&this._FA.cancel(),this._SFA&&this._SFA.cancel(),this.__touchInfo.historyX=[0,0],this.__touchInfo.historyY=[0,0],this.__touchInfo.historyT=[0,0],this.xMove&&(this.__baseX=this._translateX),this.yMove&&(this.__baseY=this._translateY),this._checkCanMove=null,this._firstMoveDirection=null,this._isTouching=!0)},__handleTouchMove:function(e){const t=this;if(!this._isScaling&&!this.disabled&&this._isTouching){let n=this._translateX,r=this._translateY;if(null===this._firstMoveDirection&&(this._firstMoveDirection=Math.abs(e.detail.dx/e.detail.dy)>1?"htouchmove":"vtouchmove"),this.xMove&&(n=e.detail.dx+this.__baseX,this.__touchInfo.historyX.shift(),this.__touchInfo.historyX.push(n),this.yMove||null!==this._checkCanMove||(this._checkCanMove=Math.abs(e.detail.dx/e.detail.dy)<1)),this.yMove&&(r=e.detail.dy+this.__baseY,this.__touchInfo.historyY.shift(),this.__touchInfo.historyY.push(r),this.xMove||null!==this._checkCanMove||(this._checkCanMove=Math.abs(e.detail.dy/e.detail.dx)<1)),this.__touchInfo.historyT.shift(),this.__touchInfo.historyT.push(e.detail.timeStamp),!this._checkCanMove){let e="touch";n<this.minX?this.outOfBounds?(e="touch-out-of-bounds",n=this.minX-this._declineX.x(this.minX-n)):n=this.minX:n>this.maxX&&(this.outOfBounds?(e="touch-out-of-bounds",n=this.maxX+this._declineX.x(n-this.maxX)):n=this.maxX),r<this.minY?this.outOfBounds?(e="touch-out-of-bounds",r=this.minY-this._declineY.x(this.minY-r)):r=this.minY:r>this.maxY&&(this.outOfBounds?(e="touch-out-of-bounds",r=this.maxY+this._declineY.x(r-this.maxY)):r=this.maxY),_requestAnimationFrame((function(){t._setTransform(n,r,t._scale,e)}))}}},__handleTouchEnd:function(){const e=this;if(!this._isScaling&&!this.disabled&&this._isTouching&&(this._isTouching=!1,!this._checkCanMove&&!this._revise("out-of-bounds")&&this.inertia)){const t=1e3*(this.__touchInfo.historyX[1]-this.__touchInfo.historyX[0])/(this.__touchInfo.historyT[1]-this.__touchInfo.historyT[0]),n=1e3*(this.__touchInfo.historyY[1]-this.__touchInfo.historyY[0])/(this.__touchInfo.historyT[1]-this.__touchInfo.historyT[0]);this._friction.setV(t,n),this._friction.setS(this._translateX,this._translateY);const r=this._friction.delta().x,i=this._friction.delta().y;let o=r+this._translateX,a=i+this._translateY;o<this.minX?(o=this.minX,a=this._translateY+(this.minX-this._translateX)*i/r):o>this.maxX&&(o=this.maxX,a=this._translateY+(this.maxX-this._translateX)*i/r),a<this.minY?(a=this.minY,o=this._translateX+(this.minY-this._translateY)*r/i):a>this.maxY&&(a=this.maxY,o=this._translateX+(this.maxY-this._translateY)*r/i),this._friction.setEnd(o,a),this._FA=g(this._friction,(function(){const t=e._friction.s(),n=t.x,r=t.y;e._setTransform(n,r,e._scale,"friction")}),(function(){e._FA.cancel()}))}},_onTrack:function(e){switch(e.detail.state){case"start":this.__handleTouchStart();break;case"move":this.__handleTouchMove(e);break;case"end":this.__handleTouchEnd()}},_getLimitXY:function(e,t){let n=!1;return e>this.maxX?(e=this.maxX,n=!0):e<this.minX&&(e=this.minX,n=!0),t>this.maxY?(t=this.maxY,n=!0):t<this.minY&&(t=this.minY,n=!0),{x:e,y:t,outOfBounds:n}},setParent:function(){if(!this.$parent.__isMounted)return;this._FA&&this._FA.cancel(),this._SFA&&this._SFA.cancel();const e=this.scale?this.scaleValueSync:1;this._updateOffset(),this._updateWH(e),this._updateBoundary(),this._translateX=this.xSync+this._scaleOffset.x,this._translateY=this.ySync+this._scaleOffset.y;const t=this._getLimitXY(this._translateX,this._translateY),n=t.x,r=t.y;this._setTransform(n,r,e,"",!0),this._updateOldScale(e)},_updateOffset:function(){this._offset.x=this._rect.left-this.$parent.left,this._offset.y=this._rect.top-this.$parent.top},_updateWH:function(e){e=e||this._scale,e=this._adjustScale(e);const t=this._rect;this.height=t.height/this._scale,this.width=t.width/this._scale;const n=this.height*e,r=this.width*e;this._scaleOffset.x=(r-this.width)/2,this._scaleOffset.y=(n-this.height)/2},_updateBoundary:function(){const e=0-this._offset.x+this._scaleOffset.x,t=this.$parent.width-this.width-this._offset.x-this._scaleOffset.x;this.minX=Math.min(e,t),this.maxX=Math.max(e,t);const n=0-this._offset.y+this._scaleOffset.y,r=this.$parent.height-this.height-this._offset.y-this._scaleOffset.y;this.minY=Math.min(n,r),this.maxY=Math.max(n,r)},_beginScale:function(){this._isScaling=!0},_endScale:function(){this._isScaling=!1,this._updateOldScale(this._scale)},_setScale:function(e){this.scale&&(e=this._adjustScale(e),e=this._oldScale*e,this._beginScale(),this._updateScale(e))},_updateScale:function(e,t){const n=this;if(this.scale){e=this._adjustScale(e),this._updateWH(e),this._updateBoundary();const r=this._getLimitXY(this._translateX,this._translateY),i=r.x,o=r.y;t?this._animationTo(i,o,e,"",!0,!0):_requestAnimationFrame((function(){n._setTransform(i,o,e,"",!0,!0)}))}},_updateOldScale:function(e){this._oldScale=e},_adjustScale:function(e){return e=Math.max(.5,this.scaleMinNumber,e),e=Math.min(10,this.scaleMaxNumber,e)},_animationTo:function(e,t,n,r,i,o){const a=this;this._FA&&this._FA.cancel(),this._SFA&&this._SFA.cancel(),this.xMove||(e=this._translateX),this.yMove||(t=this._translateY),this.scale||(n=this._scale);const s=this._getLimitXY(e,t);e=s.x,t=s.y,this.animation?(this._STD._springX._solution=null,this._STD._springY._solution=null,this._STD._springScale._solution=null,this._STD._springX._endPosition=this._translateX,this._STD._springY._endPosition=this._translateY,this._STD._springScale._endPosition=this._scale,this._STD.setEnd(e,t,n,1),this._SFA=g(this._STD,(function(){const e=a._STD.x(),t=e.x,n=e.y,s=e.scale;a._setTransform(t,n,s,r,i,o)}),(function(){a._SFA.cancel()}))):this._setTransform(e,t,n,r,i,o)},_revise:function(e){const t=this._getLimitXY(this._translateX,this._translateY),n=t.x,r=t.y,i=t.outOfBounds;return i&&this._animationTo(n,r,this._scale,e),i},_setTransform:function(e,t,r,i="",o,a){null!==e&&"NaN"!==e.toString()&&"number"==typeof e||(e=this._translateX||0),null!==t&&"NaN"!==t.toString()&&"number"==typeof t||(t=this._translateY||0),e=Number(e.toFixed(1)),t=Number(t.toFixed(1)),r=Number(r.toFixed(1)),this._translateX===e&&this._translateY===t||o||this.$trigger("change",{x:v(e,this._scaleOffset.x),y:v(t,this._scaleOffset.y),source:i}),this.scale||(r=this._scale),r=+(r=this._adjustScale(r)).toFixed(3),a&&r!==this._scale&&this.$trigger("scale",{x:e,y:t,scale:r});const s=`translate(${e}px, ${t}px) scale(${r})`;n.transition(this.$refs.el,{styles:{transform:s},duration:0,delay:0}),this._translateX=e,this._translateY=t,this._scale=r},_touchstart(){this.$parent.touchItem=this},_getComponentSize:e=>new Promise((n=>{t.getComponentRect(e,(({size:e})=>{n(e)}))})),_updateRect(){return this._getComponentSize(this.$refs.el).then((e=>{this._rect=e}))}},render(e){const t={touchstart:this._touchstart};return e("div",this._g({ref:"el",on:t,staticClass:["uni-movable-view"],staticStyle:{transformOrigin:"center"},attrs:{preventGesture:!0}},this.$listeners),this.$slots.default,2)},style:{"uni-movable-view":{position:"absolute",top:"0px",left:"0px",width:"10px",height:"10px"}}}}function init$e(e,t){e.component("movable-view",getMovableView(t))}const OPEN_TYPES={navigate:"navigateTo",redirect:"redirectTo",switchTab:"switchTab",reLaunch:"reLaunch",navigateBack:"navigateBack"};function getNavigator(e,t){return{name:"Navigator",isReserved:!0,props:{url:{type:String,default:""},openType:{type:String,default:"navigate",validator:e=>!!OPEN_TYPES[e]},delta:{type:Number,default:1},animationType:{type:String,default:"pop-in/out"},animationTime:{type:Number,default:300},hoverClass:{type:String,default:"navigator-hover"},hoverStopPropagation:{type:Boolean,default:!1},hoverStartTime:{type:Number,default:50},hoverStayTime:{type:Number,default:600}},methods:{_click:function(){if("navigateBack"===this.openType)return t.navigateBack({delta:this.delta});this.url?t[OPEN_TYPES[this.openType]]({url:this.url}):console.error("<navigator/> should have url attribute when using navigateTo, redirectTo, reLaunch or switchTab")}},render(e){const t=this;return e("view",t._g({attrs:{hoverClass:t.hoverClass,hoverStopPropagation:t.hoverStopPropagation,hoverStartTime:t.hoverStartTime,hoverStayTime:t.hoverStayTime},on:{click:t._click}},t.$listeners),[t._t("default")],2)},style:{"navigator-hover":{backgroundColor:"rgba(0,0,0,0.1)",opacity:.7}}}}function init$d(e,t,n){e.component("navigator",getNavigator(t,n.uni))}let plus_,BroadcastChannel_,channel;function getRuntime(){return"object"==typeof window&&"object"==typeof navigator&&"object"==typeof document?"webview":"v8"}function getPageId(){return plus_.webview.currentWebview().id}const callbacks={};function onPlusMessage(e){const t=e.data&&e.data.__message;if(!t||!t.__page)return;const n=t.__page,r=callbacks[n];r&&r(t),t.keep||delete callbacks[n]}function addEventListener(e,t){"v8"===getRuntime()?(channel&&channel.close(),channel=new BroadcastChannel_(getPageId()),channel.onmessage=onPlusMessage):window.__plusMessage=onPlusMessage,callbacks[e]=t}class Page{constructor(e){this.webview=e}sendMessage(e){const t=JSON.parse(JSON.stringify({__message:{data:e}}));new BroadcastChannel_(this.webview.id).postMessage(t)}close(){this.webview.close()}}function showPage({context:e={},url:t,data:n={},style:r={},onMessage:i,onClose:o}){plus_=e.plus||plus,BroadcastChannel_=e.BroadcastChannel||BroadcastChannel;const a={autoBackButton:!0,titleSize:"17px"},s=`page${Date.now()}`;!1!==(r=Object.assign({},r)).titleNView&&"none"!==r.titleNView&&(r.titleNView=Object.assign(a,r.titleNView));const c={top:0,bottom:0,usingComponents:{},popGesture:"close",scrollIndicator:"none",animationType:"pop-in",animationDuration:200,uniNView:{path:`${"object"==typeof process&&process.env&&process.env.VUE_APP_TEMPLATE_PATH||""}/${t}.js`,defaultFontSize:plus_.screen.resolutionWidth/20,viewport:plus_.screen.resolutionWidth}};r=Object.assign(c,r);const l=plus_.webview.create("",s,r,{extras:{from:getPageId(),runtime:getRuntime(),data:n}});return l.addEventListener("close",o),addEventListener(s,(e=>{"function"==typeof i&&i(e.data),e.keep||l.close("auto")})),l.show(r.animationType,r.animationDuration),new Page(l)}function getPicker(e,t){const n={SELECTOR:"selector",MULTISELECTOR:"multiSelector",TIME:"time",DATE:"date"},r={YEAR:"year",MONTH:"month",DAY:"day"},i=["range","rangeKey","value","mode","fields","start","end","disabled"];function o(e){return e>9?e:`0${e}`}function a(e,t){const r=new Date;return e=String(e||""),t===n.TIME?2===(e=e.split(":")).length&&r.setHours(parseInt(e[0]),parseInt(e[1])):3===(e=e.split("-")).length&&r.setFullYear(parseInt(e[0]),parseInt(e[1]-1),parseInt(e[2])),r}return{name:"Picker",isReserved:!0,mixins:[emitter],props:{range:{type:Array,default:()=>[]},rangeKey:{type:String,default:""},value:{type:[Number,String,Array],default:0},mode:{type:String,default:n.SELECTOR,validator:e=>Object.values(n).indexOf(e)>=0},fields:{type:String,default:""},start:{type:[String,Number],default(){if(this.mode===n.TIME)return"00:00";if(this.mode===n.DATE){const e=(new Date).getFullYear()-100;switch(this.fields){case r.YEAR:return e;case r.MONTH:return e+"-01";default:return e+"-01-01"}}return""}},end:{type:[String,Number],default(){if(this.mode===n.TIME)return"23:59";if(this.mode===n.DATE){const e=(new Date).getFullYear()+100;switch(this.fields){case r.YEAR:return e;case r.MONTH:return e+"-12";default:return e+"-12-31"}}return""}},disabled:{type:[Boolean,String],default:!1}},computed:{attrs(){const e={};return i.forEach((t=>{e[t]=this.$props[t]})),e}},methods:{_show(){this._showPicker(Object.assign({},this.attrs))},_showPicker(e){const i=t.plus||new t.WeexPlus(t.weex);if(i.key.hideSoftKeybord(),this.mode!==n.TIME&&this.mode!==n.DATE||e.fields){e.fields=Object.values(r).includes(e.fields)?e.fields:r.DAY;let n={event:"cancel"};this.page=showPage({context:Object.assign({},t,{plus:i}),url:"__uniapppicker",data:e,style:{titleNView:!1,animationType:"none",animationDuration:0,background:"rgba(0,0,0,0)",popGesture:"none"},onMessage:t=>{const r=t.event;if("created"!==r)return"columnchange"===r?(delete t.event,void this.$trigger(r,t)):void(n=t);this._updatePicker(e)},onClose:()=>{this.page=null;const e=n.event;delete n.event,this.$trigger(e,n)}})}else i.nativeUI[this.mode===n.TIME?"pickTime":"pickDate"]((e=>{const t=e.date;this.$trigger("change",{value:this.mode===n.TIME?`${o(t.getHours())}:${o(t.getMinutes())}`:`${t.getFullYear()}-${o(t.getMonth()+1)}-${o(t.getDate())}`})}),(()=>{this.$trigger("cancel",{})}),this.mode===n.TIME?{time:a(this.value,n.TIME)}:{date:a(this.value,n.DATE),minDate:a(this.start,n.DATE),maxDate:a(this.end,n.DATE)})},_updatePicker(e){this.page&&this.page.sendMessage(e)}},created(){this.$watch("attrs",(e=>{this._updatePicker(e)}),{deep:!0})},render(e){const t={};return this.disabled||(t.click=this._show),e("div",this._g({on:t},this.$listener),this.$slots.default,2)}}}function init$c(e,t,n){e.component("picker",getPicker(t,n))}const PRIMARY_COLOR="#007AFF",BACKGROUND_COLOR="#EBEBEB",ANIMATE_INTERVAL_DEFAULT=30,FONT_SIZE=16,STROKE_WIDTH=6;function getProgress(e,t){return{name:"Progress",isReserved:!0,mixins:[emitter],props:{percent:{type:[String,Number],default:0},showInfo:{type:Boolean,default:!1},borderRadius:{type:[String,Number],default:0},fontSize:{type:[String,Number],default:FONT_SIZE},strokeWidth:{type:[String,Number],default:STROKE_WIDTH},active:{type:Boolean,default:!1},activeColor:{type:String,default:PRIMARY_COLOR},activeMode:{type:String,default:"backwards"},backgroundColor:{type:String,default:BACKGROUND_COLOR},duration:{type:[String,Number],default:ANIMATE_INTERVAL_DEFAULT}},data:()=>({width:0,curPercent:0}),computed:{barStyle(){return{height:this.strokeWidth,borderRadius:this.borderRadius,backgroundColor:this.backgroundColor}},innerBarStyle(){return{width:this.activeWidth,height:this.strokeWidth,backgroundColor:this.activeColor}},activeWidth(){return this.curPercent*this.width/100},finalPercent(){let e=parseFloat(this.percent,10);return e>100&&(e=100),e<0&&(e=0),e}},watch:{finalPercent(e,n){this._timerId&&t.clearInterval(this._timerId),this._lastPercent=n||0,this._animate()}},mounted(){setTimeout((()=>{e.requireModule("dom").getComponentRect(this.$refs.progress,(e=>{this.width=e.size.width,this._animate()}))}),50)},methods:{_animate(){const e=this.finalPercent;if(!this.active)return this.curPercent=e;this.curPercent="forwards"===this.activeMode?this._lastPercent:0,this._timerId=t.setInterval((()=>{e<=this.curPercent+1?(this.curPercent=e,t.clearInterval(this._timerId),this.$trigger("activeend",{curPercent:this.curPercent})):++this.curPercent}),this.duration)}},render(e){const t=this;return e("div",t._g({ref:"progress",staticClass:["uni-progress"]},t.$listeners),[e("div",{staticClass:["uni-progress-bar"],style:t.barStyle},[e("div",{staticClass:["uni-progress-inner-bar"],style:t.innerBarStyle})]),t.showInfo?[e("u-text",{staticClass:["uni-progress-info"],style:{fontSize:t.fontSize}},[t.curPercent+"%"])]:t._e()],2)},style:{"uni-progress":{flex:1,flexDirection:"row",alignItems:"center"},"uni-progress-bar":{flex:1},"uni-progress-inner-bar":{position:"absolute"},"uni-progress-info":{marginLeft:"15px"}}}}function init$b(e,t,n){e.component("progress",getProgress(t,n))}function getRadioGroup(e){return{name:"RadioGroup",isReserved:!0,mixins:[emitter,listeners],props:{name:{type:String,default:""}},data:function(){return{radioList:[]}},listeners:{"@radio-change":"_changeHandler","@radio-group-update":"_radioGroupUpdateHandler"},mounted(){this._resetRadioGroupValue(this.radioList.length-1)},created(){this.$dispatch("Form","uni-form-group-update",{type:"add",vm:this})},beforeDestroy(){this.$dispatch("Form","uni-form-group-update",{type:"remove",vm:this})},methods:{_changeHandler(e,t){const n=this.radioList.indexOf(t);this._resetRadioGroupValue(n,!0),this.$trigger("change",{value:t.radioValue})},_radioGroupUpdateHandler(e){if("add"===e.type)this.radioList.push(e.vm);else{const t=this.radioList.indexOf(e.vm);this.radioList.splice(t,1)}},_resetRadioGroupValue(e,t){const n=this;this.radioList.forEach((function(r,i){i!==e&&(t?n.radioList[i].radioChecked=!1:n.radioList.forEach((function(e,t){i>=t||n.radioList[t].radioChecked&&(n.radioList[i].radioChecked=!1)})))}))},_getFormData(){const e={};if(""!==this.name){let t="";this.radioList.forEach((function(e){e.radioChecked&&(t=e.value)})),e.value=t,e.key=this.name}return e}},render(e){const t=this;return e("div",t._g({},t.$listeners),[t._t("default")],2)}}}function init$a(e,t){e.component("radio-group",getRadioGroup())}function getRadio(e){return{name:"Radio",isReserved:!0,mixins:[emitter,listeners],props:{checked:{type:[Boolean,String],default:!1},id:{type:String,default:""},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#007AFF"},value:{type:String,default:""}},data:function(){return{radioChecked:this.checked,radioValue:this.value}},listeners:{"label-click":"_onClick","@label-click":"_onClick"},computed:{checkedStyle:function(){return{backgroundColor:this.color,borderColor:this.color}},uncheckedStyle:()=>({borderColor:"#d1d1d1"})},watch:{checked:function(e){this.radioChecked=e},value:function(e){this.radioValue=e}},beforeCreate(){},created(){this.$dispatch("RadioGroup","uni-radio-group-update",{type:"add",vm:this}),this.$dispatch("Form","uni-form-group-update",{type:"add",vm:this})},beforeDestroy(){this.$dispatch("RadioGroup","uni-radio-group-update",{type:"remove",vm:this}),this.$dispatch("Form","uni-form-group-update",{type:"remove",vm:this})},methods:{_onClick(e){this.disabled||this.radioChecked||(this.radioChecked=!0,this.$dispatch("RadioGroup","uni-radio-change",e,this))},_resetFormData(){this.radioChecked=!1}},render(e){const t=this;return e("div",t._g({staticClass:["uni-radio"],attrs:{dataUncType:"uni-radio"},on:{click:t._onClick}},t.$listeners),[e("div",{staticClass:["uni-radio-input"],style:t.radioChecked?t.checkedStyle:t.uncheckedStyle},[t.radioChecked?e("u-text",{staticClass:["uni-radio-input-icon"]},[t._v(t._s(""))]):t._e()],1),e("u-text",{staticClass:["uni-text"]},[t._t("default")],2)],1)},style:{"uni-radio":{alignItems:"center",flexDirection:"row"},"uni-radio-input":{position:"relative",alignItems:"center",justifyContent:"center",marginRight:"5",backgroundColor:"#ffffff",borderStyle:"solid",borderWidth:"1",borderColor:"#d1d1d1",borderRadius:50,width:"22",height:"22",outline:0},"uni-radio-input-icon":{fontFamily:"unincomponents",fontSize:"14",color:"#ffffff"},"uni-radio-input-disabled":{backgroundColor:"#e1e1e1",borderColor:"#d1d1d1",color:"#adadad"}}}}function init$9(e,t){e.component("radio",getRadio())}function normalizeNodes(e,t,n){const r=["span","a","image","img"];function i(e){return e.__block=!0,e}function o(e){return function(t,n){return function(e,t,n){return!e.style.fontSize&&(e.style.fontSize=n.defaultFontSize*t),i(a(e))}(t,e,n)}}function a(e){return!e.style.fontWeight&&(e.style.fontWeight="bold"),e}const s={blockquote:i,br:function(e){return e.__value=" ",i(e)},div:i,dl:i,h1:o(2),h2:o(1.5),h3:o(1.17),h4:o(1),h5:o(.83),h6:o(.67),hr:i,ol:i,p:i,strong:a,table:i,tbody:i,tfoot:i,thead:i,ul:i},c=/&(amp|gt|lt|nbsp|quot|apos);/g,l={amp:"&",gt:">",lt:"<",nbsp:" ",quot:'"',apos:"'"};let u,d={__block:!0,__break:!0,children:[]};function h(e,t,n){let i=(e.name||"").toLowerCase();const o=i,a=s[i];-1===r.indexOf(i)&&(i="span"),"img"===i&&(i="image");const h={type:i,__type:o,attr:Object.create(null)};if(("text"===e.type||e.text)&&(h.__value=h.attr.value=(e.text||"").trim().replace(c,(function(e,t){return l[t]}))),e.attrs&&Object.keys(e.attrs).forEach((t=>{"class"!==t&&"style"!==t&&(h.attr[t]=e.attrs[t])})),h.style=function(e,t){const n=Object.create(null);if(e.attrs){const r=(e.attrs.class||"").split(" "),i=t.$options.style||{};r.forEach((e=>{e&&i[e]&&Object.assign(n,i[e])})),Object.assign(n,parseStyleText(e.attrs.style||""))}if("img"===e.name||"image"===e.name){const t=e.attrs;n.width=n.width||t.width,n.height=n.height||t.height}return n}(e,t),a&&a(h,n),(d.__block||h.__block)&&!u){const e={type:"span",__type:"break",attr:{value:"\n"}};d.children.push(e),u=[d,e]}return d=h,(d.__value||"image"===d.type&&d.attr.src)&&(u=null),h.children=p(e.children,t,n),d=h,d.__block&&d.style.height&&!/^0(px)?$/.test(d.style.height)&&(u=null),h}function p(e,t,n){return Array.isArray(e)?e.map((e=>h(e,t,n))):[]}const f=p(e,t,n);if(u){const[e,t]=u,n=e.children,r=n.indexOf(t);n.splice(r,1)}return f}function getRichText(e){const{scale:t,deviceWidth:n}=e.config.env,r=n/t/20;return{name:"RichText",isReserved:!0,props:{nodes:{type:[Array,String],default:function(){return[]}}},render(e){const t=normalizeNodes(this.nodes||[],this.$vnode.context,{defaultFontSize:r});return e("u-rich-text",this._g({attrs:{value:t}},this.$listeners))}}}function init$8(e,t){e.component("rich-text",getRichText(t))}function getSwiperItem(e){return{name:"SwiperItem",isReserved:!0,props:{itemId:{type:String,default:""}},render(e){return e("div",this._g({staticClass:["uni-swiper-item"],staticStyle:{position:"absolute",left:0,top:0,right:0,bottom:0,overflow:"hidden"}},this.$listeners),this._t("default"),2)}}}function init$7(e,t){e.component("swiper-item",getSwiperItem())}function getSwiper(e){const t=e.requireModule("dom");return{name:"Swiper",isReserved:!0,mixins:[emitter],props:{indicatorDots:{type:[Boolean,String],default:!1},vertical:{type:[Boolean,String],default:!1},autoplay:{type:[Boolean,String],default:!1},circular:{type:[Boolean,String],default:!1},interval:{type:[Number,String],default:5e3},duration:{type:[Number,String],default:500},current:{type:[Number,String],default:0},indicatorColor:{type:String,default:"rgba(0,0,0,.3)"},indicatorActiveColor:{type:String,default:"#000000"},previousMargin:{type:String,default:""},nextMargin:{type:String,default:""},currentItemId:{type:String,default:""},skipHiddenItemLayout:{type:[Boolean,String],default:!1},displayMultipleItems:{type:[Number,String],default:1},disableTouch:{type:[Boolean,String],default:!1}},data(){return{currentSync:this.current,currentChangeSource:"autoplay"}},watch:{current(){this._currentCheck()},currentItemId(){this._currentCheck()},currentSync(){this.$trigger("change",this._getDetail())}},methods:{onChange(e){const t=e.detail;"string"==typeof t.source&&(this.currentChangeSource=t.source),this.currentSync=t.index,this._lastOffsetRatio=0},onScroll(e){let t=this.vertical?e.detail.offsetYRatio:e.detail.offsetXRatio;if((e.drag||e.detail.drag)&&(this.currentChangeSource="touch"),0===t){const e=Math.abs(this._lastOffsetRatio);if(1===e)return;e>.5&&(t=1)}this._lastOffsetRatio=t,this.$trigger("transition",{dx:this.vertical?0:-this._width*t,dy:this.vertical?-this._height*t:0})},onScrollEnd(t){const n=()=>{this.$trigger("animationfinish",this._getDetail()),this.currentChangeSource="autoplay"};"iOS"===e.config.env.platform?setTimeout(n,50):n()},_getDetail(){const e=this.currentSync,t=this.items[e]||{};return{current:e,currentItemId:t.componentInstance&&t.componentInstance.itemId||"",source:this.currentChangeSource}},_currentCheck(){let e=-1;if(this.currentItemId)for(let t=0,n=this.items;t<n.length;t++){const r=n[t].componentInstance;if(r&&r.itemId===this.currentItemId){e=t;break}}e<0&&(e=Math.round(this.current)||0),e=e<0?0:e,this.currentSync!==e&&(this.currentChangeSource="",this.currentSync=e)},_getWH(){this._getComponentSize(this.$refs.el).then((({width:e,height:t,top:n,left:r})=>{this._width=e,this._height=t}))},_getComponentSize:e=>new Promise((n=>{t.getComponentRect(e,(({size:e})=>{n(e)}))}))},created(){this.items=[],this._width=this.height=0},mounted(){this._currentCheck(),setTimeout((()=>{this._getWH()}),100)},render(e){const t=[];(Array.isArray(this.$slots.default)?deepClone(this.$slots.default,e):[]).forEach((e=>{e.componentOptions&&"swiper-item"===e.componentOptions.tag&&t.push(e)})),this.items=t;const n={},r=this.$listeners;return(r.change||r.animationfinish||r.transition)&&(n.scroll=this.onScroll,n.scrollend=this.onScrollEnd),r.change&&(n.change=this.onChange),e("div",this._g({ref:"el",staticClass:["uni-swiper"]},r),[e("slider",{staticClass:["uni-swiper-slider"],attrs:{autoPlay:this.autoplay,interval:this.interval,index:this.currentSync,keepIndex:!0,showIndicators:this.indicatorDots,infinite:this.circular,vertical:this.vertical,scrollable:!this.disableTouch},on:n},[...t,e("indicator",{staticClass:["uni-swiper-dots"],style:{itemColor:this.indicatorColor,itemSelectedColor:this.indicatorActiveColor,itemSize:8,opacity:this.indicatorDots?1:0}})],2)])},style:{"uni-swiper":{position:"relative",height:"150px"},"uni-swiper-slider":{position:"absolute",left:0,top:0,right:0,bottom:0},"uni-swiper-dots":{position:"absolute",left:0,right:0,bottom:"10",height:"10"}}}}function init$6(e,t){e.component("swiper",getSwiper(t))}function getSwitch(e){return{name:"Switch",isReserved:!0,mixins:[emitter,listeners],props:{name:{type:String,default:""},id:{type:String,default:""},type:{type:String,default:"switch"},checked:{type:[Boolean,String],default:!1},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#007aff"}},data(){return{switchChecked:this.checked}},watch:{checked(e){this.switchChecked=e}},created(){this.$dispatch("Form","uni-form-group-update",{type:"add",vm:this})},beforeDestroy(){this.$dispatch("Form","uni-form-group-update",{type:"remove",vm:this})},methods:{_onChange(e){this.switchChecked=e.detail.value,this.$trigger("change",{value:this.switchChecked})},_resetFormData(){this.switchChecked=!1},_getFormData(){const e={};return""!==this.name&&(e.value=this.switchChecked,e.key=this.name),e}},render(e){const t=this,n={},r=this.$listeners;return r.change&&(n.change=this._onChange),e("div",t._g({style:{paddingRight:5}},r),["switch"===t.type?e("dc-switch",{attrs:{dataUncType:"uni-switch",color:t.color,checked:t.switchChecked,disabled:t.disabled},style:{width:52,height:32},on:n}):t._e(),"checkbox"===t.type?e("checkbox",{attrs:{checked:t.checked,disabled:t.disabled},style:{color:t.color},on:n}):t._e()],1)}}}function init$5(e,t){e.component("switch",getSwitch())}function getSlider(e){return{name:"USlider",isReserved:!0,mixins:[emitter,listeners],props:{name:{type:String,default:""},min:{type:[Number,String],default:0},max:{type:[Number,String],default:100},value:{type:[Number,String],default:0},step:{type:[Number,String],default:1},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#e9e9e9"},backgroundColor:{type:String,default:"#e9e9e9"},activeColor:{type:String,default:"#007aff"},selectedColor:{type:String,default:"#007aff"},blockColor:{type:String,default:"#ffffff"},blockSize:{type:[Number,String],default:28},showValue:{type:[Boolean,String],default:!1}},data(){return{left:0,width:0,sliderValue:Number(this.value),sliderThumbValue:0}},computed:{trackStyle(){return{backgroundColor:this._getBgColor()}},trackActiveStyle(){return{backgroundColor:this._getActiveColor(),width:this.thumbValue+"px"}},thumbStyle(){return{width:this.blockSize+"px",height:this.blockSize+"px",marginTop:-this.blockSize/2+"px",left:this.thumbValue+"px",backgroundColor:this.blockColor}},thumbValue(){return(this.sliderValue-Number(this.min))/(Number(this.max)-Number(this.min))*this.width}},watch:{value(e){this.sliderValue=Number(e)}},mounted(){this._x0=0,this._x1=0,this.$eventOld=null,setTimeout((()=>{e.requireModule("dom").getComponentRect(this.$refs["slider-track"],(e=>{this.left=e.size.left,this.width=e.size.width}))}),50)},created(){this.$dispatch("Form","uni-form-group-update",{type:"add",vm:this})},beforeDestroy(){this.$dispatch("Form","uni-form-group-update",{type:"remove",vm:this})},methods:{_handleStart(e){if(1===e.changedTouches.length&&!this._$eventOld){this._$eventOld=e;const t=e.changedTouches[0].pageX;this._x0=this._x1=t,this._onTrack("start",t)}},_handleMove(e){if(1===e.changedTouches.length&&this._$eventOld){const t=e.changedTouches[0].pageX;this._onTrack("move",t),this._x1=t}},_handleEnd(e){if(1===e.changedTouches.length&&this._$eventOld){const t=e.changedTouches[0].pageX;this._$eventOld=null,this._onTrack("end",t)}},_onTrack:function(e,t){this.disabled||("move"===e?(this._onUserChangedValue({x:t}),this.$trigger("changing",{value:this.sliderValue})):"end"===e&&(this._onUserChangedValue({x:t}),this.$trigger("change",{value:this.sliderValue})))},_onUserChangedValue(e){let t=e.x;t<0&&(t=0),t>this.width&&(t=this.width),this.sliderValue=this._filterValue(t)},_filterValue(e){let t=e/this.width*(Number(this.max)-Number(this.min));const n=Number(this.step);return n>0&&t>n&&t%n/n!=0&&(t-=t%n),parseInt(t+Number(this.min))},_getBgColor(){return"#e9e9e9"!==this.backgroundColor?this.backgroundColor:"#007aff"!==this.color?this.color:"#007aff"},_getActiveColor(){return"#007aff"!==this.activeColor?this.activeColor:"#e9e9e9"!==this.selectedColor?this.selectedColor:"#e9e9e9"},_resetFormData(){this.sliderValue=this.min},_getFormData(){const e={};return""!==this.name&&(e.value=this.sliderValue,e.key=this.name),e}},render(e){const t=this;return e("div",t._g({staticClass:["uni-slider"],style:{flexDirection:"column"}},t.$listeners),[e("div",{staticClass:["uni-slider-wrapper"]},[e("div",{staticClass:["uni-slider-tap-area"],on:{touchstart:t._handleStart,touchmove:t._handleMove,touchend:t._handleEnd},style:{flexDirection:"column"}},[e("div",{ref:"slider-track",staticClass:["uni-slider-handle-wrapper"],style:t.trackStyle},[e("div",{staticClass:["uni-slider-track"],style:t.trackActiveStyle})]),e("div",{ref:"uni-slider-handle",staticClass:["uni-slider-thumb"],style:t.thumbStyle})]),t.showValue?e("u-text",{staticClass:["uni-slider-value"]},[t._v(t._s(t.sliderValue))]):t._e()])])},style:{"uni-slider":{flex:1,marginTop:"12",marginRight:0,marginBottom:"12",marginLeft:0,paddingTop:0,paddingRight:0,paddingBottom:0,paddingLeft:0},"uni-slider-wrapper":{flexDirection:"row",alignItems:"center",minHeight:"30"},"uni-slider-tap-area":{position:"relative",flex:1,paddingTop:"15",paddingRight:0,paddingBottom:"15",paddingLeft:0},"uni-slider-handle-wrapper":{position:"relative",marginTop:0,marginRight:"18",marginBottom:0,marginLeft:"18",height:"2",borderRadius:"5",backgroundColor:"#e9e9e9",transitionProperty:"backgroundColor",transitionDuration:300,transitionTimingFunction:"ease"},"@TRANSITION":{"uni-slider-handle-wrapper":{property:"backgroundColor",duration:300,timingFunction:"ease"},"uni-slider-track":{property:"backgroundColor",duration:300,timingFunction:"ease"},"uni-slider-thumb":{property:"borderColor",duration:300,timingFunction:"ease"}},"uni-slider-track":{height:"2",borderRadius:"6",backgroundColor:"#007aff",transitionProperty:"backgroundColor",transitionDuration:300,transitionTimingFunction:"ease"},"uni-slider-thumb":{position:"absolute",width:"28",height:"28",borderRadius:50,boxShadow:"0 0 4px #ebebeb",transitionProperty:"borderColor",transitionDuration:300,transitionTimingFunction:"ease"},"uni-slider-step":{position:"absolute",width:100,height:"2",background:"transparent",zIndex:1},"uni-slider-value":{color:"#888888",fontSize:"14",marginRight:"14"}}}}function init$4(e,t){e.component("u-slider",getSlider(t))}function getPickerView(e){return{name:"PickerView",isReserved:!0,mixins:[emitter],props:{value:{type:Array,default:()=>[],validator:function(e){return Array.isArray(e)&&e.filter((e=>"number"==typeof e)).length===e.length}},height:{type:[Number,String],default:0},indicatorStyle:{type:String,default:""},maskStyle:{type:String,default:""}},data(){return{maskStyleSync:this.getStyle(this.maskStyle),indicatorStyleSync:this.getStyle(this.indicatorStyle),valueSync:[...this.value]}},watch:{value(e){this.valueSync.length=e.length,e.forEach(((e,t)=>{e!==this.valueSync[t]&&(this.valueSync[t]=e,this.items[t].componentInstance.setCurrent(e))}))},maskStyle(e){this.maskStyleSync=this.getStyle(e)},indicatorStyle(e){this.indicatorStyleSync=this.getStyle(e)}},methods:{getStyle:e=>Object.assign({},"string"==typeof e?parseStyleText(e):e),getItemIndex(e){return this.items.indexOf(e)},getItemValue(e){return this.valueSync[this.getItemIndex(e.$vnode)]||0},setItemValue(e,t){const n=this.getItemIndex(e.$vnode);this.valueSync[n]=t;const r=[...this.valueSync];this.$emit("update:value",r),this.$trigger("change",{value:r})}},created(){this.items=[]},render(e){const t=[];return(Array.isArray(this.$slots.default)?deepClone(this.$slots.default,e):[]).forEach((e=>{e.componentOptions&&"picker-view-column"===e.componentOptions.tag&&t.push(e)})),this.items=t,e("div",this._g({staticClass:["uni-picker-view"],attrs:{preventGesture:!0}},this.$listeners),[e("div",{staticClass:["uni-picker-view-wrapper"]},t)],2)},style:{"uni-picker-view":{position:"relative"},"uni-picker-view-wrapper":{display:"flex",flexDirection:"row",position:"absolute",top:0,left:0,right:0,bottom:0,overflow:"hidden"}}}}function init$3(e,t){e.component("picker-view",getPickerView())}function getHeight(e={}){const t=(e.height||e.lineHeight||"").match(/(-?[\d\.]+)px/);let n=0;return t&&(n=parseFloat(t[1])),n}function getPickerViewColumn(e){const t=e.requireModule("dom"),n="android"===e.config.env.platform.toLowerCase();return{name:"PickerViewColumn",isReserved:!0,props:{length:{type:[Number,String],default:0}},data(){return{indicatorHeight:getHeight(this.$parent.indicatorStyleSync),height:parseFloat(this.$parent.height),current:this.$parent.getItemValue(this)}},watch:{current(e){this._isMounted&&this.$parent.setItemValue(this,e)},length(){setTimeout((()=>{this.setCurrent(this.current,!0,!0)}),150)}},mounted(){this.checkMounted()},methods:{checkMounted(){let e,t;setTimeout((()=>{Promise.all([this._getComponentSize(this.$refs.el).then((({height:t})=>{e=this.height=t})),n&&this.length?this._getComponentSize(this.$refs.item).then((({height:e})=>{t=this.indicatorHeight=e/this.length})):this._getComponentSize(this.$refs.indicator).then((({height:e})=>{t=this.indicatorHeight=e}))]).then((()=>{e&&t?setTimeout((()=>{this.setCurrent(this.current,!1,!0),this._isMounted=!0}),50):this.checkMounted()}))}),50)},onScrollend(e){if(Date.now()-this.scrollToElementTime<340)return;const t=e.detail.contentOffset.y,n=Math.round(t/this.indicatorHeight);t%this.indicatorHeight?this.setCurrent(n,!0,!0):this.current=n},setCurrent(e,n=!0,r){(this.current!==e||r)&&(t.scrollToElement(this.$refs.content,{offset:e*this.indicatorHeight,animated:n}),this.current=e,n&&(this.scrollToElementTime=Date.now()))},_getComponentSize:e=>new Promise((n=>{t.getComponentRect(e,(({size:e})=>{n(e)}))}))},render(e){const t=this.$slots.default;let r=(this.height-this.indicatorHeight)/2;const i=this.height-r+"px";r=`${r}px`;const o={showScrollbar:!1,scrollToBegin:!1,decelerationRate:.3,scrollY:!0};return n||(o.scrollTop=this.current*this.indicatorHeight),e("div",this._g({ref:"el",staticClass:["uni-picker-view-column"]},this.$listeners),[e("scroll-view",{staticClass:["uni-picker-view-group"],attrs:o,on:{scrollend:this.onScrollend},style:{flexDirection:"column"}},[e("div",{ref:"content",staticClass:["uni-picker-view-content"],style:{flexDirection:"column",paddingTop:r,paddingBottom:r}},n?[e("div",{ref:"item",style:{flexDirection:"column"}},t)]:t)]),e("u-scalable",{staticClass:["uni-picker-view-mask"],style:this.$parent.maskStyleSync},[e("u-scalable",{staticClass:["uni-picker-view-mask","uni-picker-view-mask-top"],style:{bottom:i}}),e("u-scalable",{staticClass:["uni-picker-view-mask","uni-picker-view-mask-bottom"],style:{top:i}})]),e("u-scalable",{ref:"indicator",staticClass:["uni-picker-view-indicator"],style:Object.assign({},this.$parent.indicatorStyleSync,{top:r})})],2)},style:{"uni-picker-view-column":{flex:1,position:"relative",alignItems:"stretch",overflow:"hidden"},"uni-picker-view-mask":{position:"absolute",top:0,left:0,right:0,bottom:0,pointerEvents:"none"},"uni-picker-view-mask-top":{bottom:0,backgroundImage:"linear-gradient(to bottom,rgba(255, 255, 255, 0.95),rgba(255, 255, 255, 0.6))"},"uni-picker-view-mask-bottom":{top:0,backgroundImage:"linear-gradient(to top,rgba(255, 255, 255, 0.95),rgba(255, 255, 255, 0.6))"},"uni-picker-view-group":{position:"absolute",top:0,left:0,right:0,bottom:0},"uni-picker-view-content":{paddingTop:0,paddingRight:0,paddingBottom:0,paddingLeft:0},"uni-picker-view-indicator":{position:"absolute",left:0,right:0,top:0,height:"34px",pointerEvents:"none",borderColor:"#e5e5e5",borderTopWidth:"1px",borderBottomWidth:"1px"}}}}function init$2(e,t){e.component("picker-view-column",getPickerViewColumn(t))}var initComponents=[init$n,init$m,init$l,init$k,init$j,init$i,init$h,init$g,init$f,init$e,init$d,init$c,init$b,init$a,init$9,init$8,init$7,init$6,init$5,init$4,init$3,init$2],uniApp={install(e,t){e.prototype._$bus=new e,styleMixin(e),uniIdMixin(e,t),lifecycleMixin(e,t.weex,t),"weex"!==t.__uniConfig.nvueCompiler&&initComponents.forEach((n=>{n(e,t.weex,t)}))}};function vueFactory(e){Object.freeze({}),Object.freeze([]);var t=Object.assign,n=e=>{var t=Object.create(null);return n=>t[n]||(t[n]=e(n))},r=/-(\w)/g,i=n((e=>e.replace(r,((e,t)=>t?t.toUpperCase():"")))),o=/\B([A-Z])/g,a=n((e=>e.replace(o,"-$1").toLowerCase())),s=n((e=>e.charAt(0).toUpperCase()+e.slice(1)));function c(e){return 1===e.nodeType}var l=0;class u extends Error{constructor(e){super(e),this.name="DOMException"}}function d(e,t){return t&&(t.capture&&(e+="Capture"),t.once&&(e+="Once"),t.passive&&(e+="Passive")),"on".concat(s(i(e)))}class h{constructor(e,t){this.defaultPrevented=!1,this.timeStamp=Date.now(),this._stop=!1,this._end=!1,this.type=e,this.bubbles=!!t.bubbles,this.cancelable=!!t.cancelable}preventDefault(){this.defaultPrevented=!0}stopImmediatePropagation(){this._end=this._stop=!0}stopPropagation(){this._stop=!0}}function p(e){if(e instanceof h)return e;var[n]=function(e){var t;if(f.test(e)){var n;for(t={};n=e.match(f);)e=e.slice(0,e.length-n[0].length),t[n[0].toLowerCase()]=!0}return[a(e.slice(2)),t]}(e.type),r=new h(n,{bubbles:!1,cancelable:!1});return t(r,e),r}var f=/(?:Once|Passive|Capture)$/;var g=1,m=2,v=4;function y(e){var t=0;return e.includes("stop")&&(t|=g),e.includes("prevent")&&(t|=m),e.includes("self")&&(t|=v),t}function _(e,t){var{parentNode:n}=e;if(!n)return null;var{childNodes:r}=n;return r[r.indexOf(e)+("n"===t?1:-1)]||null}class b extends class{constructor(){this.listeners=Object.create(null)}dispatchEvent(e){var t=this.listeners[e.type];if(!t)return console.error(function(e,...t){var n=Date.now(),r=l?n-l:0;return l=n,"[".concat(n,"][").concat(r,"ms][").concat(e,"]：").concat(t.map((e=>JSON.stringify(e))).join(" "))}("dispatchEvent",this.nodeId),e.type,"not found"),!1;for(var n=p(e),r=t.length,i=0;i<r&&(t[i].call(this,n),!n._end);i++);return n.cancelable&&n.defaultPrevented}addEventListener(e,t,n){e=d(e,n),(this.listeners[e]||(this.listeners[e]=[])).push(t)}removeEventListener(e,t,n){e=d(e,n);var r=this.listeners[e];if(r){var i=r.indexOf(t);i>-1&&r.splice(i,1)}}}{constructor(e,t,n){if(super(),this.pageNode=null,this.parentNode=null,this._text=null,n){var{pageNode:r}=n;r&&(this.pageNode=r,this.nodeId=r.genId(),!r.isUnmounted&&r.onCreate(this,t))}this.nodeType=e,this.nodeName=t,this.childNodes=[]}get firstChild(){return this.childNodes[0]||null}get lastChild(){var{childNodes:e}=this,t=e.length;return t?e[t-1]:null}get nextSibling(){return _(this,"n")}get nodeValue(){return null}set nodeValue(e){}get textContent(){return this._text||""}set textContent(e){this._text=e,this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onTextContent(this,e)}get parentElement(){var{parentNode:e}=this;return e&&1===e.nodeType?e:null}get previousSibling(){return _(this,"p")}appendChild(e){return this.insertBefore(e,null)}cloneNode(e){var n=t(Object.create(Object.getPrototypeOf(this)),this),{attributes:r}=n;return r&&(n.attributes=t({},r)),e&&(n.childNodes=n.childNodes.map((e=>e.cloneNode(!0)))),n}insertBefore(e,t){var n;!function(e){var{parentNode:t}=e;t&&t.removeChild(e)}(e),e.pageNode=this.pageNode,e.parentNode=this,!(n=e).nodeId&&n.pageNode&&(n.nodeId=n.pageNode.genId());var{childNodes:r}=this;if(t){var i=r.indexOf(t);if(-1===i)throw new u("Failed to execute 'insertBefore' on 'Node': The node before which the new node is to be inserted is not a child of this node.");r.splice(i,0,e)}else r.push(e);return this.pageNode&&!this.pageNode.isUnmounted?this.pageNode.onInsertBefore(this,e,t):e}removeChild(e){var{childNodes:t}=this,n=t.indexOf(e);if(-1===n)throw new u("Failed to execute 'removeChild' on 'Node': The node to be removed is not a child of this node.");return e.parentNode=null,t.splice(n,1),this.pageNode&&!this.pageNode.isUnmounted?this.pageNode.onRemoveChild(e):e}}var w="class",k="style";class x extends b{constructor(e,t,n){super(e,t,n),this.attributes=Object.create(null),this.style=null,this.vShow=null,this._html=null}get className(){return this.attributes.class||""}set className(e){this.setAttribute(w,e)}get innerHTML(){return""}set innerHTML(e){this._html=e}addEventListener(e,t,n){super.addEventListener(e,t,n),this.pageNode&&!this.pageNode.isUnmounted&&(t.wxsEvent?this.pageNode.onAddWxsEvent(this,d(e,n),t.wxsEvent,y(t.modifiers||[])):this.pageNode.onAddEvent(this,d(e,n),y(t.modifiers||[])))}removeEventListener(e,t,n){super.removeEventListener(e,t,n),this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onRemoveEvent(this,d(e,n))}getAttribute(e){return e===k?this.style:this.attributes[e]}removeAttribute(e){e==k?this.style=null:delete this.attributes[e],this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onRemoveAttribute(this,e)}setAttribute(e,t){e===k?this.style=t:this.attributes[e]=t,this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onSetAttribute(this,e,t)}toJSON({attr:e,normalize:t}={}){var{attributes:n,style:r,listeners:i,_text:o}=this,a={};Object.keys(n).length&&(a.a=t?t(n):n);var s=Object.keys(i);if(s.length){var c=void 0,l={};s.forEach((e=>{var n=i[e];if(n.length){var{wxsEvent:r,modifiers:o}=n[0],a=y(o||[]);r?(c||(c={}),c[e]=[t?t(r):r,a]):l[e]=a}})),a.e=t?t(l,!1):l,c&&(a.w=t?t(c,!1):c)}return null!==r&&(a.s=t?t(r):r),e||(a.i=this.nodeId,a.n=this.nodeName),null!==o&&(a.t=t?t(o):o),a}}class S extends b{constructor(e,t){super(8,"#comment",t),this._text=e}toJSON(e={}){return e.attr?{}:{i:this.nodeId}}}class C extends x{constructor(e,t){super(1,e.toUpperCase(),t),this.tagName=this.nodeName}}class E extends C{get value(){return this.getAttribute("value")}set value(e){this.setAttribute("value",e)}}class I extends E{}class T extends x{constructor(e,t){super(3,"#text",t),this._text=e}get nodeValue(){return this._text||""}set nodeValue(e){this._text=e,this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onNodeValue(this,e)}}var A=["onShow","onHide","onBackPress","onPageScroll","onTabItemTap","onReachBottom","onPullDownRefresh"];function O(e,t){for(var n=Object.create(null),r=e.split(","),i=0;i<r.length;i++)n[r[i]]=!0;return t?e=>!!n[e.toLowerCase()]:e=>!!n[e]}var $=O("Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt");function N(e){if(Q(e)){for(var t={},n=0;n<e.length;n++){var r=e[n],i=re(r)?L(r):N(r);if(i)for(var o in i)t[o]=i[o]}return t}return re(e)||oe(e)?e:void 0}var P=/;(?![^(]*\))/g,M=/:(.+)/;function L(e){var t={};return e.split(P).forEach((e=>{if(e){var n=e.split(M);n.length>1&&(t[n[0].trim()]=n[1].trim())}})),t}function R(e){var t="";if(re(e))t=e;else if(Q(e))for(var n=0;n<e.length;n++){var r=R(e[n]);r&&(t+=r+" ")}else if(oe(e))for(var i in e)e[i]&&(t+=i+" ");return t.trim()}var B,D,j=O("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,summary,template,blockquote,iframe,tfoot"),F=O("svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,text,textPath,title,tspan,unknown,use,view"),V=(e,t)=>t&&t.__v_isRef?V(e,t.value):ee(t)?{["Map(".concat(t.size,")")]:[...t.entries()].reduce(((e,[t,n])=>(e["".concat(t," =>")]=n,e)),{})}:te(t)?{["Set(".concat(t.size,")")]:[...t.values()]}:!oe(t)||Q(t)||ue(t)?t:String(t),U=Object.freeze({}),z=Object.freeze([]),W=()=>{},H=()=>!1,q=/^on[^a-z]/,Y=e=>q.test(e),J=e=>e.startsWith("onUpdate:"),X=Object.assign,G=(e,t)=>{var n=e.indexOf(t);n>-1&&e.splice(n,1)},Z=Object.prototype.hasOwnProperty,K=(e,t)=>Z.call(e,t),Q=Array.isArray,ee=e=>"[object Map]"===ce(e),te=e=>"[object Set]"===ce(e),ne=e=>"function"==typeof e,re=e=>"string"==typeof e,ie=e=>"symbol"==typeof e,oe=e=>null!==e&&"object"==typeof e,ae=e=>oe(e)&&ne(e.then)&&ne(e.catch),se=Object.prototype.toString,ce=e=>se.call(e),le=e=>ce(e).slice(8,-1),ue=e=>"[object Object]"===ce(e),de=e=>re(e)&&"NaN"!==e&&"-"!==e[0]&&""+parseInt(e,10)===e,he=O(",key,ref,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),pe=e=>{var t=Object.create(null);return n=>t[n]||(t[n]=e(n))},fe=/-(\w)/g,ge=pe((e=>e.replace(fe,((e,t)=>t?t.toUpperCase():"")))),me=/\B([A-Z])/g,ve=pe((e=>e.replace(me,"-$1").toLowerCase())),ye=pe((e=>e.charAt(0).toUpperCase()+e.slice(1))),_e=pe((e=>e?"on".concat(ye(e)):"")),be=(e,t)=>!Object.is(e,t),we=(e,t)=>{for(var n=0;n<e.length;n++)e[n](t)},ke=(e,t,n)=>{Object.defineProperty(e,t,{configurable:!0,enumerable:!1,value:n})},xe=e=>{var t=parseFloat(e);return isNaN(t)?e:t},Se=()=>B||(B="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window||"undefined"!=typeof window?window:{});function Ce(e,...t){console.warn("[Vue warn] ".concat(e),...t)}var Ee=[];class Ie{constructor(e=!1){this.active=!0,this.effects=[],this.cleanups=[],!e&&D&&(this.parent=D,this.index=(D.scopes||(D.scopes=[])).push(this)-1)}run(e){if(this.active)try{return this.on(),e()}finally{this.off()}else Ce("cannot run an inactive effect scope.")}on(){this.active&&(Ee.push(this),D=this)}off(){this.active&&(Ee.pop(),D=Ee[Ee.length-1])}stop(e){if(this.active){if(this.effects.forEach((e=>e.stop())),this.cleanups.forEach((e=>e())),this.scopes&&this.scopes.forEach((e=>e.stop(!0))),this.parent&&!e){var t=this.parent.scopes.pop();t&&t!==this&&(this.parent.scopes[this.index]=t,t.index=this.index)}this.active=!1}}}function Te(e,t){(t=t||D)&&t.active&&t.effects.push(e)}var Ae,Oe=e=>{var t=new Set(e);return t.w=0,t.n=0,t},$e=e=>(e.w&Le)>0,Ne=e=>(e.n&Le)>0,Pe=new WeakMap,Me=0,Le=1,Re=[],Be=Symbol("iterate"),De=Symbol("Map key iterate");class je{constructor(e,t=null,n){this.fn=e,this.scheduler=t,this.active=!0,this.deps=[],Te(this,n)}run(){if(!this.active)return this.fn();if(!Re.includes(this))try{return Re.push(Ae=this),Ue.push(Ve),Ve=!0,Le=1<<++Me,Me<=30?(({deps:e})=>{if(e.length)for(var t=0;t<e.length;t++)e[t].w|=Le})(this):Fe(this),this.fn()}finally{Me<=30&&(e=>{var{deps:t}=e;if(t.length){for(var n=0,r=0;r<t.length;r++){var i=t[r];$e(i)&&!Ne(i)?i.delete(e):t[n++]=i,i.w&=~Le,i.n&=~Le}t.length=n}})(this),Le=1<<--Me,We(),Re.pop();var e=Re.length;Ae=e>0?Re[e-1]:void 0}}stop(){this.active&&(Fe(this),this.onStop&&this.onStop(),this.active=!1)}}function Fe(e){var{deps:t}=e;if(t.length){for(var n=0;n<t.length;n++)t[n].delete(e);t.length=0}}var Ve=!0,Ue=[];function ze(){Ue.push(Ve),Ve=!1}function We(){var e=Ue.pop();Ve=void 0===e||e}function He(e,t,n){if(qe()){var r=Pe.get(e);r||Pe.set(e,r=new Map);var i=r.get(n);i||r.set(n,i=Oe()),Ye(i,{effect:Ae,target:e,type:t,key:n})}}function qe(){return Ve&&void 0!==Ae}function Ye(e,t){var n=!1;Me<=30?Ne(e)||(e.n|=Le,n=!$e(e)):n=!e.has(Ae),n&&(e.add(Ae),Ae.deps.push(e),Ae.onTrack&&Ae.onTrack(Object.assign({effect:Ae},t)))}function Je(e,t,n,r,i,o){var a=Pe.get(e);if(a){var s=[];if("clear"===t)s=[...a.values()];else if("length"===n&&Q(e))a.forEach(((e,t)=>{("length"===t||t>=r)&&s.push(e)}));else switch(void 0!==n&&s.push(a.get(n)),t){case"add":Q(e)?de(n)&&s.push(a.get("length")):(s.push(a.get(Be)),ee(e)&&s.push(a.get(De)));break;case"delete":Q(e)||(s.push(a.get(Be)),ee(e)&&s.push(a.get(De)));break;case"set":ee(e)&&s.push(a.get(Be))}var c={target:e,type:t,key:n,newValue:r,oldValue:i,oldTarget:o};if(1===s.length)s[0]&&Xe(s[0],c);else{var l=[];for(var u of s)u&&l.push(...u);Xe(Oe(l),c)}}}function Xe(e,t){for(var n of Q(e)?e:[...e])(n!==Ae||n.allowRecurse)&&(n.onTrigger&&n.onTrigger(X({effect:n},t)),n.scheduler?n.scheduler():n.run())}var Ge=O("__proto__,__v_isRef,__isVue"),Ze=new Set(Object.getOwnPropertyNames(Symbol).map((e=>Symbol[e])).filter(ie)),Ke=it(),Qe=it(!1,!0),et=it(!0),tt=it(!0,!0),nt=rt();function rt(){var e={};return["includes","indexOf","lastIndexOf"].forEach((t=>{e[t]=function(...e){for(var n=Ht(this),r=0,i=this.length;r<i;r++)He(n,"get",r+"");var o=n[t](...e);return-1===o||!1===o?n[t](...e.map(Ht)):o}})),["push","pop","shift","unshift","splice"].forEach((t=>{e[t]=function(...e){ze();var n=Ht(this)[t].apply(this,e);return We(),n}})),e}function it(e=!1,t=!1){return function(n,r,i){if("__v_isReactive"===r)return!e;if("__v_isReadonly"===r)return e;if("__v_raw"===r&&i===(e?t?Rt:Lt:t?Mt:Pt).get(n))return n;var o=Q(n);if(!e&&o&&K(nt,r))return Reflect.get(nt,r,i);var a=Reflect.get(n,r,i);return(ie(r)?Ze.has(r):Ge(r))?a:(e||He(n,"get",r),t?a:Zt(a)?!o||!de(r)?a.value:a:oe(a)?e?jt(a):Bt(a):a)}}function ot(e=!1){return function(t,n,r,i){var o=t[n];if(!e&&(r=Ht(r),o=Ht(o),!Q(t)&&Zt(o)&&!Zt(r)))return o.value=r,!0;var a=Q(t)&&de(n)?Number(n)<t.length:K(t,n),s=Reflect.set(t,n,r,i);return t===Ht(i)&&(a?be(r,o)&&Je(t,"set",n,r,o):Je(t,"add",n,r)),s}}var at={get:Ke,set:ot(),deleteProperty:function(e,t){var n=K(e,t),r=e[t],i=Reflect.deleteProperty(e,t);return i&&n&&Je(e,"delete",t,void 0,r),i},has:function(e,t){var n=Reflect.has(e,t);return ie(t)&&Ze.has(t)||He(e,"has",t),n},ownKeys:function(e){return He(e,"iterate",Q(e)?"length":Be),Reflect.ownKeys(e)}},st={get:et,set:(e,t)=>(console.warn('Set operation on key "'.concat(String(t),'" failed: target is readonly.'),e),!0),deleteProperty:(e,t)=>(console.warn('Delete operation on key "'.concat(String(t),'" failed: target is readonly.'),e),!0)},ct=X({},at,{get:Qe,set:ot(!0)}),lt=X({},st,{get:tt}),ut=e=>e,dt=e=>Reflect.getPrototypeOf(e);function ht(e,t,n=!1,r=!1){var i=Ht(e=e.__v_raw),o=Ht(t);t!==o&&!n&&He(i,"get",t),!n&&He(i,"get",o);var{has:a}=dt(i),s=r?ut:n?Jt:Yt;return a.call(i,t)?s(e.get(t)):a.call(i,o)?s(e.get(o)):void(e!==i&&e.get(t))}function pt(e,t=!1){var n=this.__v_raw,r=Ht(n),i=Ht(e);return e!==i&&!t&&He(r,"has",e),!t&&He(r,"has",i),e===i?n.has(e):n.has(e)||n.has(i)}function ft(e,t=!1){return e=e.__v_raw,!t&&He(Ht(e),"iterate",Be),Reflect.get(e,"size",e)}function gt(e){e=Ht(e);var t=Ht(this);return dt(t).has.call(t,e)||(t.add(e),Je(t,"add",e,e)),this}function mt(e,t){t=Ht(t);var n=Ht(this),{has:r,get:i}=dt(n),o=r.call(n,e);o?Nt(n,r,e):(e=Ht(e),o=r.call(n,e));var a=i.call(n,e);return n.set(e,t),o?be(t,a)&&Je(n,"set",e,t,a):Je(n,"add",e,t),this}function vt(e){var t=Ht(this),{has:n,get:r}=dt(t),i=n.call(t,e);i?Nt(t,n,e):(e=Ht(e),i=n.call(t,e));var o=r?r.call(t,e):void 0,a=t.delete(e);return i&&Je(t,"delete",e,void 0,o),a}function yt(){var e=Ht(this),t=0!==e.size,n=ee(e)?new Map(e):new Set(e),r=e.clear();return t&&Je(e,"clear",void 0,void 0,n),r}function _t(e,t){return function(n,r){var i=this,o=i.__v_raw,a=Ht(o),s=t?ut:e?Jt:Yt;return!e&&He(a,"iterate",Be),o.forEach(((e,t)=>n.call(r,s(e),s(t),i)))}}function bt(e,t,n){return function(...r){var i=this.__v_raw,o=Ht(i),a=ee(o),s="entries"===e||e===Symbol.iterator&&a,c="keys"===e&&a,l=i[e](...r),u=n?ut:t?Jt:Yt;return!t&&He(o,"iterate",c?De:Be),{next(){var{value:e,done:t}=l.next();return t?{value:e,done:t}:{value:s?[u(e[0]),u(e[1])]:u(e),done:t}},[Symbol.iterator](){return this}}}}function wt(e){return function(...t){var n=t[0]?'on key "'.concat(t[0],'" '):"";return console.warn("".concat(ye(e)," operation ").concat(n,"failed: target is readonly."),Ht(this)),"delete"!==e&&this}}function kt(){var e={get(e){return ht(this,e)},get size(){return ft(this)},has:pt,add:gt,set:mt,delete:vt,clear:yt,forEach:_t(!1,!1)},t={get(e){return ht(this,e,!1,!0)},get size(){return ft(this)},has:pt,add:gt,set:mt,delete:vt,clear:yt,forEach:_t(!1,!0)},n={get(e){return ht(this,e,!0)},get size(){return ft(this,!0)},has(e){return pt.call(this,e,!0)},add:wt("add"),set:wt("set"),delete:wt("delete"),clear:wt("clear"),forEach:_t(!0,!1)},r={get(e){return ht(this,e,!0,!0)},get size(){return ft(this,!0)},has(e){return pt.call(this,e,!0)},add:wt("add"),set:wt("set"),delete:wt("delete"),clear:wt("clear"),forEach:_t(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach((i=>{e[i]=bt(i,!1,!1),n[i]=bt(i,!0,!1),t[i]=bt(i,!1,!0),r[i]=bt(i,!0,!0)})),[e,n,t,r]}var[xt,St,Ct,Et]=kt();function It(e,t){var n=t?e?Et:Ct:e?St:xt;return(t,r,i)=>"__v_isReactive"===r?!e:"__v_isReadonly"===r?e:"__v_raw"===r?t:Reflect.get(K(n,r)&&r in t?n:t,r,i)}var Tt={get:It(!1,!1)},At={get:It(!1,!0)},Ot={get:It(!0,!1)},$t={get:It(!0,!0)};function Nt(e,t,n){var r=Ht(n);if(r!==n&&t.call(e,r)){var i=le(e);console.warn("Reactive ".concat(i," contains both the raw and reactive ")+"versions of the same object".concat("Map"===i?" as keys":"",", ")+"which can lead to inconsistencies. Avoid differentiating between the raw and reactive versions of an object and only use the reactive version if possible.")}}var Pt=new WeakMap,Mt=new WeakMap,Lt=new WeakMap,Rt=new WeakMap;function Bt(e){return e&&e.__v_isReadonly?e:Vt(e,!1,at,Tt,Pt)}function Dt(e){return Vt(e,!1,ct,At,Mt)}function jt(e){return Vt(e,!0,st,Ot,Lt)}function Ft(e){return Vt(e,!0,lt,$t,Rt)}function Vt(e,t,n,r,i){if(!oe(e))return console.warn("value cannot be made reactive: ".concat(String(e))),e;if(e.__v_raw&&(!t||!e.__v_isReactive))return e;var o=i.get(e);if(o)return o;var a,s=(a=e).__v_skip||!Object.isExtensible(a)?0:function(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}(le(a));if(0===s)return e;var c=new Proxy(e,2===s?r:n);return i.set(e,c),c}function Ut(e){return zt(e)?Ut(e.__v_raw):!(!e||!e.__v_isReactive)}function zt(e){return!(!e||!e.__v_isReadonly)}function Wt(e){return Ut(e)||zt(e)}function Ht(e){var t=e&&e.__v_raw;return t?Ht(t):e}function qt(e){return ke(e,"__v_skip",!0),e}var Yt=e=>oe(e)?Bt(e):e,Jt=e=>oe(e)?jt(e):e;function Xt(e){qe()&&((e=Ht(e)).dep||(e.dep=Oe()),Ye(e.dep,{target:e,type:"get",key:"value"}))}function Gt(e,t){(e=Ht(e)).dep&&Xe(e.dep,{target:e,type:"set",key:"value",newValue:t})}function Zt(e){return Boolean(e&&!0===e.__v_isRef)}function Kt(e){return Qt(e,!1)}function Qt(e,t){return Zt(e)?e:new en(e,t)}class en{constructor(e,t){this._shallow=t,this.dep=void 0,this.__v_isRef=!0,this._rawValue=t?e:Ht(e),this._value=t?e:Yt(e)}get value(){return Xt(this),this._value}set value(e){e=this._shallow?e:Ht(e),be(e,this._rawValue)&&(this._rawValue=e,this._value=this._shallow?e:Yt(e),Gt(this,e))}}function tn(e){return Zt(e)?e.value:e}var nn={get:(e,t,n)=>tn(Reflect.get(e,t,n)),set:(e,t,n,r)=>{var i=e[t];return Zt(i)&&!Zt(n)?(i.value=n,!0):Reflect.set(e,t,n,r)}};function rn(e){return Ut(e)?e:new Proxy(e,nn)}class on{constructor(e){this.dep=void 0,this.__v_isRef=!0;var{get:t,set:n}=e((()=>Xt(this)),(()=>Gt(this)));this._get=t,this._set=n}get value(){return this._get()}set value(e){this._set(e)}}class an{constructor(e,t){this._object=e,this._key=t,this.__v_isRef=!0}get value(){return this._object[this._key]}set value(e){this._object[this._key]=e}}function sn(e,t){var n=e[t];return Zt(n)?n:new an(e,t)}class cn{constructor(e,t,n){this._setter=t,this.dep=void 0,this._dirty=!0,this.__v_isRef=!0,this.effect=new je(e,(()=>{this._dirty||(this._dirty=!0,Gt(this))})),this.__v_isReadonly=n}get value(){var e=Ht(this);return Xt(e),e._dirty&&(e._dirty=!1,e._value=e.effect.run()),e._value}set value(e){this._setter(e)}}function ln(e,t){var n,r,i=ne(e);i?(n=e,r=()=>{console.warn("Write operation failed: computed value is readonly")}):(n=e.get,r=e.set);var o=new cn(n,r,i||!r);return t&&(o.effect.onTrack=t.onTrack,o.effect.onTrigger=t.onTrigger),o}var un=!1,dn=new Set;Se().__VUE_HMR_RUNTIME__={createRecord:mn(fn),rerender:mn((function(e,t){var n=pn.get(e);if(!n)return;[...n].forEach((e=>{t&&(e.render=t,gn(e.type).render=t),e.renderCache=[],un=!0,e.update(),un=!1}))})),reload:mn((function(e,t){var n=pn.get(e);if(!n)return;t=gn(t);var r=[...n];for(var i of r){var o=gn(i.type);if(!dn.has(o)){for(var a in X(o,t),o)"__file"===a||a in t||delete o[a];dn.add(o)}i.appContext.optionsCache.delete(i.type),i.ceReload?(dn.add(o),i.ceReload(t.styles),dn.delete(o)):i.parent?(da(i.parent.update),i.parent.type.__asyncLoader&&i.parent.ceReload&&i.parent.ceReload(t.styles)):i.appContext.reload?i.appContext.reload():"undefined"!=typeof window?window.location.reload():console.warn("[HMR] Root or manually mounted instance modified. Full reload required.")}fa((()=>{for(var e of r)dn.delete(gn(e.type))}))}))};var hn,pn=new Map;function fn(e){return!pn.has(e)&&(pn.set(e,new Set),!0)}function gn(e){return jo(e)?e.__vccOpts:e}function mn(e){return(t,n)=>{try{return e(t,n)}catch(e){console.error(e),console.warn("[HMR] Something went wrong during Vue component hot-reload. Full reload required.")}}}var vn=[];function yn(e,...t){hn?hn.emit(e,...t):vn.push({event:e,args:t})}function _n(e,t){(hn=e)?(hn.enabled=!0,vn.forEach((({event:e,args:t})=>hn.emit(e,...t))),vn=[]):(t.__VUE_DEVTOOLS_HOOK_REPLAY__=t.__VUE_DEVTOOLS_HOOK_REPLAY__||[]).push((e=>{_n(e,t)}))}var bn=xn("component:added"),wn=xn("component:updated"),kn=xn("component:removed");function xn(e){return t=>{yn(e,t.appContext.app,t.uid,t.parent?t.parent.uid:void 0,t)}}var Sn=En("perf:start"),Cn=En("perf:end");function En(e){return(t,n,r)=>{yn(e,t.appContext.app,t.uid,t,n,r)}}function In(e,t,...n){var r=e.vnode.props||U,{emitsOptions:i,propsOptions:[o]}=e;if(i)if(t in i){var a=i[t];if(ne(a))a(...n)||zo('Invalid event arguments: event validation failed for event "'.concat(t,'".'))}else o&&_e(t)in o||zo('Component emitted event "'.concat(t,'" but it is neither declared in ')+'the emits option nor as an "'.concat(_e(t),'" prop.'));var s=n,c=t.startsWith("update:"),l=c&&t.slice(7);if(l&&l in r){var u="".concat("modelValue"===l?"model":l,"Modifiers"),{number:d,trim:h}=r[u]||U;h?s=n.map((e=>e.trim())):d&&(s=n.map(xe))}!function(e,t,n){yn("component:emit",e.appContext.app,e,t,n)}(e,t,s);var p,f=t.toLowerCase();f!==t&&r[_e(f)]&&zo('Event "'.concat(f,'" is emitted in component ')+"".concat(Do(e,e.type),' but the handler is registered for "').concat(t,'". ')+"Note that HTML attributes are case-insensitive and you cannot use v-on to listen to camelCase events when using in-DOM templates. "+'You should probably use "'.concat(ve(t),'" instead of "').concat(t,'".'));var g=r[p=_e(t)]||r[p=_e(ge(t))];!g&&c&&(g=r[p=_e(ve(t))]),g&&Jo(g,e,6,s);var m=r[p+"Once"];if(m){if(e.emitted){if(e.emitted[p])return}else e.emitted={};e.emitted[p]=!0,Jo(m,e,6,s)}}function Tn(e,t,n=!1){var r=t.emitsCache,i=r.get(e);if(void 0!==i)return i;var o=e.emits,a={},s=!1;if(!ne(e)){var c=e=>{var n=Tn(e,t,!0);n&&(s=!0,X(a,n))};!n&&t.mixins.length&&t.mixins.forEach(c),e.extends&&c(e.extends),e.mixins&&e.mixins.forEach(c)}return o||s?(Q(o)?o.forEach((e=>a[e]=null)):X(a,o),r.set(e,a),a):(r.set(e,null),null)}function An(e,t){return!(!e||!Y(t))&&(t=t.slice(2).replace(/Once$/,""),K(e,t[0].toLowerCase()+t.slice(1))||K(e,ve(t))||K(e,t))}var On=null,$n=null;function Nn(e){var t=On;return On=e,$n=e&&e.type.__scopeId||null,t}function Pn(e,t=On,n){if(!t)return e;if(e._n)return e;var r=(...n)=>{r._d&&Yi(-1);var i=Nn(t),o=e(...n);return Nn(i),r._d&&Yi(1),wn(t),o};return r._n=!0,r._c=!0,r._d=!0,r}var Mn=!1;function Ln(){Mn=!0}function Rn(e){var t,n,{type:r,vnode:i,proxy:o,withProxy:a,props:s,propsOptions:[c],slots:l,attrs:u,emit:d,render:h,renderCache:p,data:f,setupState:g,ctx:m,inheritAttrs:v}=e,y=Nn(e);Mn=!1;try{if(4&i.shapeFlag){var _=a||o;t=so(h.call(_,_,p,s,g,f,m)),n=u}else{var b=r;u===s&&Ln(),t=so(b.length>1?b(s,{get attrs(){return Ln(),u},slots:l,emit:d}):b(s,null)),n=r.props?u:jn(u)}}catch(n){Vi.length=0,Xo(n,e,1),t=no(ji)}var w=t,k=void 0;if(t.patchFlag>0&&2048&t.patchFlag&&([w,k]=Bn(t)),n&&!1!==v){var x=Object.keys(n),{shapeFlag:S}=w;if(x.length)if(7&S)c&&x.some(J)&&(n=Fn(n,c)),w=io(w,n);else if(!Mn&&w.type!==ji){for(var C=Object.keys(u),E=[],I=[],T=0,A=C.length;T<A;T++){var O=C[T];Y(O)?J(O)||E.push(O[2].toLowerCase()+O.slice(3)):I.push(O)}I.length&&zo("Extraneous non-props attributes ("+"".concat(I.join(", "),") ")+"were passed to component but could not be automatically inherited because component renders fragment or text root nodes."),E.length&&zo("Extraneous non-emits event listeners ("+"".concat(E.join(", "),") ")+'were passed to component but could not be automatically inherited because component renders fragment or text root nodes. If the listener is intended to be a component custom event listener only, declare it using the "emits" option.')}}return i.dirs&&(Vn(w)||zo("Runtime directive used on component with non-element root node. The directives will not function as intended."),w.dirs=w.dirs?w.dirs.concat(i.dirs):i.dirs),i.transition&&(Vn(w)||zo("Component inside <Transition> renders non-element root node that cannot be animated."),w.transition=i.transition),k?k(w):t=w,Nn(y),t}var Bn=e=>{var t=e.children,n=e.dynamicChildren,r=Dn(t);if(!r)return[e,void 0];var i=t.indexOf(r),o=n?n.indexOf(r):-1;return[so(r),r=>{t[i]=r,n&&(o>-1?n[o]=r:r.patchFlag>0&&(e.dynamicChildren=[...n,r]))}]};function Dn(e){for(var t,n=0;n<e.length;n++){var r=e[n];if(!Gi(r))return;if(r.type!==ji||"v-if"===r.children){if(t)return;t=r}}return t}var jn=e=>{var t;for(var n in e)("class"===n||"style"===n||Y(n))&&((t||(t={}))[n]=e[n]);return t},Fn=(e,t)=>{var n={};for(var r in e)J(r)&&r.slice(9)in t||(n[r]=e[r]);return n},Vn=e=>7&e.shapeFlag||e.type===ji;function Un(e,t,n){var r=Object.keys(t);if(r.length!==Object.keys(e).length)return!0;for(var i=0;i<r.length;i++){var o=r[i];if(t[o]!==e[o]&&!An(n,o))return!0}return!1}function zn({vnode:e,parent:t},n){for(;t&&t.subTree===e;)(e=t.vnode).el=n,t=t.parent}var Wn={name:"Suspense",__isSuspense:!0,process(e,t,n,r,i,o,a,s,c,l){null==e?function(e,t,n,r,i,o,a,s,c){var{p:l,o:{createElement:u}}=c,d=u("div",t),h=e.suspense=Yn(e,i,r,t,d,n,o,a,s,c);l(null,h.pendingBranch=e.ssContent,d,null,r,h,o,a),h.deps>0?(Hn(e,"onPending"),Hn(e,"onFallback"),l(null,e.ssFallback,t,n,r,null,o,a),Gn(h,e.ssFallback)):h.resolve()}(t,n,r,i,o,a,s,c,l):function(e,t,n,r,i,o,a,s,{p:c,um:l,o:{createElement:u}}){var d=t.suspense=e.suspense;d.vnode=t,t.el=e.el;var h=t.ssContent,p=t.ssFallback,{activeBranch:f,pendingBranch:g,isInFallback:m,isHydrating:v}=d;if(g)d.pendingBranch=h,Zi(h,g)?(c(g,h,d.hiddenContainer,null,i,d,o,a,s),d.deps<=0?d.resolve():m&&(c(f,p,n,r,i,null,o,a,s),Gn(d,p))):(d.pendingId++,v?(d.isHydrating=!1,d.activeBranch=g):l(g,i,d),d.deps=0,d.effects.length=0,d.hiddenContainer=u("div",n),m?(c(null,h,d.hiddenContainer,null,i,d,o,a,s),d.deps<=0?d.resolve():(c(f,p,n,r,i,null,o,a,s),Gn(d,p))):f&&Zi(h,f)?(c(f,h,n,r,i,d,o,a,s),d.resolve(!0)):(c(null,h,d.hiddenContainer,null,i,d,o,a,s),d.deps<=0&&d.resolve()));else if(f&&Zi(h,f))c(f,h,n,r,i,d,o,a,s),Gn(d,h);else if(Hn(t,"onPending"),d.pendingBranch=h,d.pendingId++,c(null,h,d.hiddenContainer,null,i,d,o,a,s),d.deps<=0)d.resolve();else{var{timeout:y,pendingId:_}=d;y>0?setTimeout((()=>{d.pendingId===_&&d.fallback(p)}),y):0===y&&d.fallback(p)}}(e,t,n,r,i,a,s,c,l)},hydrate:function(e,t,n,r,i,o,a,s,c){var l=t.suspense=Yn(t,r,n,e.parentNode,document.createElement("div"),null,i,o,a,s,!0),u=c(e,l.pendingBranch=t.ssContent,n,l,o,a);0===l.deps&&l.resolve();return u},create:Yn,normalize:function(e){var{shapeFlag:t,children:n}=e,r=32&t;e.ssContent=Jn(r?n.default:n),e.ssFallback=r?Jn(n.fallback):no(ji)}};function Hn(e,t){var n=e.props&&e.props[t];ne(n)&&n()}var qn=!1;function Yn(e,t,n,r,i,o,a,s,c,l,u=!1){qn||(qn=!0,console[console.info?"info":"log"]("<Suspense> is an experimental feature and its API will likely change."));var{p:d,m:h,um:p,n:f,o:{parentNode:g,remove:m}}=l,v=xe(e.props&&e.props.timeout),y={vnode:e,parent:t,parentComponent:n,isSVG:a,container:r,hiddenContainer:i,anchor:o,deps:0,pendingId:0,timeout:"number"==typeof v?v:-1,activeBranch:null,pendingBranch:null,isInFallback:!0,isHydrating:u,isUnmounted:!1,effects:[],resolve(e=!1){if(!e&&!y.pendingBranch)throw new Error("suspense.resolve() is called without a pending branch.");if(y.isUnmounted)throw new Error("suspense.resolve() is called on an already unmounted suspense boundary.");var{vnode:t,activeBranch:n,pendingBranch:r,pendingId:i,effects:o,parentComponent:a,container:s}=y;if(y.isHydrating)y.isHydrating=!1;else if(!e){var c=n&&r.transition&&"out-in"===r.transition.mode;c&&(n.transition.afterLeave=()=>{i===y.pendingId&&h(r,s,l,0)});var{anchor:l}=y;n&&(l=f(n),p(n,a,y,!0)),c||h(r,s,l,0)}Gn(y,r),y.pendingBranch=null,y.isInFallback=!1;for(var u=y.parent,d=!1;u;){if(u.pendingBranch){u.effects.push(...o),d=!0;break}u=u.parent}d||fa(o),y.effects=[],Hn(t,"onResolve")},fallback(e){if(y.pendingBranch){var{vnode:t,activeBranch:n,parentComponent:r,container:i,isSVG:o}=y;Hn(t,"onFallback");var a=f(n),l=()=>{y.isInFallback&&(d(null,e,i,a,r,null,o,s,c),Gn(y,e))},u=e.transition&&"out-in"===e.transition.mode;u&&(n.transition.afterLeave=l),y.isInFallback=!0,p(n,r,null,!0),u||l()}},move(e,t,n){y.activeBranch&&h(y.activeBranch,e,t,n),y.container=e},next:()=>y.activeBranch&&f(y.activeBranch),registerDep(e,t){var n=!!y.pendingBranch;n&&y.deps++;var r=e.vnode.el;e.asyncDep.catch((t=>{Xo(t,e,0)})).then((i=>{if(!e.isUnmounted&&!y.isUnmounted&&y.pendingId===e.suspenseId){e.asyncResolved=!0;var{vnode:o}=e;Vo(o),$o(e,i,!1),r&&(o.el=r);var s=!r&&e.subTree.el;t(e,o,g(r||e.subTree.el),r?null:f(e.subTree),y,a,c),s&&m(s),zn(e,o.el),Uo(),n&&0==--y.deps&&y.resolve()}}))},unmount(e,t){y.isUnmounted=!0,y.activeBranch&&p(y.activeBranch,n,e,t),y.pendingBranch&&p(y.pendingBranch,n,e,t)}};return y}function Jn(e){var t;if(ne(e)){var n=qi&&e._c;n&&(e._d=!1,zi()),e=e(),n&&(e._d=!0,t=Ui,Wi())}if(Q(e)){var r=Dn(e);r||zo("<Suspense> slots expect a single root node."),e=r}return e=so(e),t&&!e.dynamicChildren&&(e.dynamicChildren=t.filter((t=>t!==e))),e}function Xn(e,t){t&&t.pendingBranch?Q(e)?t.effects.push(...e):t.effects.push(e):fa(e)}function Gn(e,t){e.activeBranch=t;var{vnode:n,parentComponent:r}=e,i=n.el=t.el;r&&r.subTree===n&&(r.vnode.el=i,zn(r,i))}function Zn(e,t){if(bo){var n=bo.provides,r=bo.parent&&bo.parent.provides;r===n&&(n=bo.provides=Object.create(r)),n[e]=t}else zo("provide() can only be used inside setup().")}function Kn(e,t,n=!1){var r=bo||On;if(r){var i=null==r.parent?r.vnode.appContext&&r.vnode.appContext.provides:r.parent.provides;if(i&&e in i)return i[e];if(arguments.length>1)return n&&ne(t)?t.call(r.proxy):t;zo('injection "'.concat(String(e),'" not found.'))}else zo("inject() can only be used inside setup() or functional components.")}function Qn(){var e={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return xr((()=>{e.isMounted=!0})),Er((()=>{e.isUnmounting=!0})),e}var er=[Function,Array],tr={name:"BaseTransition",props:{mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:er,onEnter:er,onAfterEnter:er,onEnterCancelled:er,onBeforeLeave:er,onLeave:er,onAfterLeave:er,onLeaveCancelled:er,onBeforeAppear:er,onAppear:er,onAfterAppear:er,onAppearCancelled:er},setup(e,{slots:t}){var n,r=wo(),i=Qn();return()=>{var o=t.default&&sr(t.default(),!0);if(o&&o.length){o.length>1&&zo("<transition> can only be used on a single element or component. Use <transition-group> for lists.");var a=Ht(e),{mode:s}=a;s&&!["in-out","out-in","default"].includes(s)&&zo("invalid <transition> mode: ".concat(s));var c=o[0];if(i.isLeaving)return ir(c);var l=or(c);if(!l)return ir(c);var u=rr(l,a,i,r);ar(l,u);var d=r.subTree,h=d&&or(d),p=!1,{getTransitionKey:f}=l.type;if(f){var g=f();void 0===n?n=g:g!==n&&(n=g,p=!0)}if(h&&h.type!==ji&&(!Zi(l,h)||p)){var m=rr(h,a,i,r);if(ar(h,m),"out-in"===s)return i.isLeaving=!0,m.afterLeave=()=>{i.isLeaving=!1,r.update()},ir(c);"in-out"===s&&l.type!==ji&&(m.delayLeave=(e,t,n)=>{nr(i,h)[String(h.key)]=h,e._leaveCb=()=>{t(),e._leaveCb=void 0,delete u.delayedLeave},u.delayedLeave=n})}return c}}}};function nr(e,t){var{leavingVNodes:n}=e,r=n.get(t.type);return r||(r=Object.create(null),n.set(t.type,r)),r}function rr(e,t,n,r){var{appear:i,mode:o,persisted:a=!1,onBeforeEnter:s,onEnter:c,onAfterEnter:l,onEnterCancelled:u,onBeforeLeave:d,onLeave:h,onAfterLeave:p,onLeaveCancelled:f,onBeforeAppear:g,onAppear:m,onAfterAppear:v,onAppearCancelled:y}=t,_=String(e.key),b=nr(n,e),w=(e,t)=>{e&&Jo(e,r,9,t)},k={mode:o,persisted:a,beforeEnter(t){var r=s;if(!n.isMounted){if(!i)return;r=g||s}t._leaveCb&&t._leaveCb(!0);var o=b[_];o&&Zi(e,o)&&o.el._leaveCb&&o.el._leaveCb(),w(r,[t])},enter(e){var t=c,r=l,o=u;if(!n.isMounted){if(!i)return;t=m||c,r=v||l,o=y||u}var a=!1,s=e._enterCb=t=>{a||(a=!0,w(t?o:r,[e]),k.delayedLeave&&k.delayedLeave(),e._enterCb=void 0)};t?(t(e,s),t.length<=1&&s()):s()},leave(t,r){var i=String(e.key);if(t._enterCb&&t._enterCb(!0),n.isUnmounting)return r();w(d,[t]);var o=!1,a=t._leaveCb=n=>{o||(o=!0,r(),w(n?f:p,[t]),t._leaveCb=void 0,b[i]===e&&delete b[i])};b[i]=e,h?(h(t,a),h.length<=1&&a()):a()},clone:e=>rr(e,t,n,r)};return k}function ir(e){if(dr(e))return(e=io(e)).children=null,e}function or(e){return dr(e)?e.children?e.children[0]:void 0:e}function ar(e,t){6&e.shapeFlag&&e.component?ar(e.component.subTree,t):128&e.shapeFlag?(e.ssContent.transition=t.clone(e.ssContent),e.ssFallback.transition=t.clone(e.ssFallback)):e.transition=t}function sr(e,t=!1){for(var n=[],r=0,i=0;i<e.length;i++){var o=e[i];o.type===Bi?(128&o.patchFlag&&r++,n=n.concat(sr(o.children,t))):(t||o.type!==ji)&&n.push(o)}if(r>1)for(var a=0;a<n.length;a++)n[a].patchFlag=-2;return n}function cr(e){return ne(e)?{setup:e,name:e.name}:e}var lr=e=>!!e.type.__asyncLoader;function ur(e,{vnode:{ref:t,props:n,children:r}}){var i=no(e,n,r);return i.ref=t,i}var dr=e=>e.type.__isKeepAlive,hr={name:"KeepAlive",__isKeepAlive:!0,props:{include:[String,RegExp,Array],exclude:[String,RegExp,Array],max:[String,Number]},setup(e,{slots:t}){var n=wo(),r=n.ctx;if(!r.renderer)return t.default;var i=new Map,o=new Set,a=null;n.__v_cache=i;var s=n.suspense,{renderer:{p:c,m:l,um:u,o:{createElement:d}}}=r,h=d("div",null);function p(e){yr(e),u(e,n,s)}function f(e){i.forEach(((t,n)=>{var r=Bo(t.type);!r||e&&e(r)||g(n)}))}function g(e){var t=i.get(e);a&&t.type===a.type?a&&yr(a):p(t),i.delete(e),o.delete(e)}r.activate=(e,t,n,r,i)=>{var o=e.component;l(e,t,n,0,s),c(o.vnode,e,t,n,o,s,r,e.slotScopeIds,i),ki((()=>{o.isDeactivated=!1,o.a&&we(o.a);var t=e.props&&e.props.onVnodeMounted;t&&Ei(t,o.parent,e)}),s),bn(o)},r.deactivate=e=>{var t=e.component;l(e,h,null,1,s),ki((()=>{t.da&&we(t.da);var n=e.props&&e.props.onVnodeUnmounted;n&&Ei(n,t.parent,e),t.isDeactivated=!0}),s),bn(t)},ka((()=>[e.include,e.exclude]),(([e,t])=>{e&&f((t=>pr(e,t))),t&&f((e=>!pr(t,e)))}),{flush:"post",deep:!0});var m=null,v=()=>{null!=m&&i.set(m,_r(n.subTree))};return xr(v),Cr(v),Er((()=>{i.forEach((e=>{var{subTree:t,suspense:r}=n,i=_r(t);if(e.type!==i.type)p(e);else{yr(i);var o=i.component.da;o&&ki(o,r)}}))})),()=>{if(m=null,!t.default)return null;var n=t.default(),r=n[0];if(n.length>1)return zo("KeepAlive should contain exactly one component child."),a=null,n;if(!(Gi(r)&&(4&r.shapeFlag||128&r.shapeFlag)))return a=null,r;var s=_r(r),c=s.type,l=Bo(lr(s)?s.type.__asyncResolved||{}:c),{include:u,exclude:d,max:h}=e;if(u&&(!l||!pr(u,l))||d&&l&&pr(d,l))return a=s,r;var p=null==s.key?c:s.key,f=i.get(p);return s.el&&(s=io(s),128&r.shapeFlag&&(r.ssContent=s)),m=p,f?(s.el=f.el,s.component=f.component,s.transition&&ar(s,s.transition),s.shapeFlag|=512,o.delete(p),o.add(p)):(o.add(p),h&&o.size>parseInt(h,10)&&g(o.values().next().value)),s.shapeFlag|=256,a=s,r}}};function pr(e,t){return Q(e)?e.some((e=>pr(e,t))):re(e)?e.split(",").indexOf(t)>-1:!!e.test&&e.test(t)}function fr(e,t){mr(e,"a",t)}function gr(e,t){mr(e,"da",t)}function mr(e,t,n=bo){var r=e.__wdc||(e.__wdc=()=>{for(var t=n;t;){if(t.isDeactivated)return;t=t.parent}e()});if(br(t,r,n),n)for(var i=n.parent;i&&i.parent;)dr(i.parent.vnode)&&vr(r,t,n,i),i=i.parent}function vr(e,t,n,r){var i=br(t,e,r,!0);Ir((()=>{G(r[t],i)}),n)}function yr(e){var t=e.shapeFlag;256&t&&(t-=256),512&t&&(t-=512),e.shapeFlag=t}function _r(e){return 128&e.shapeFlag?e.ssContent:e}function br(e,t,n=bo,r=!1){if(n){s=e,A.indexOf(s)>-1&&(n=n.root);var{__page_container__:i}=n.root.vnode;i&&i.onInjectHook(e);var o=n[e]||(n[e]=[]),a=t.__weh||(t.__weh=(...r)=>{if(!n.isUnmounted){ze(),ko(n);var i=Jo(t,n,e,r);return xo(),We(),i}});return r?o.unshift(a):o.push(a),a}var s,c=_e((qo[e]||e.replace(/^on/,"")).replace(/ hook$/,""));zo("".concat(c," is called when there is no active component instance to be ")+"associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.")}var wr=e=>(t,n=bo)=>(!Ao||"sp"===e)&&br(e,t,n),kr=wr("bm"),xr=wr("m"),Sr=wr("bu"),Cr=wr("u"),Er=wr("bum"),Ir=wr("um"),Tr=wr("sp"),Ar=wr("rtg"),Or=wr("rtc");function $r(e,t=bo){br("ec",e,t)}var Nr=!0;function Pr(e){var t=Rr(e),n=e.proxy,r=e.ctx;Nr=!1,t.beforeCreate&&Mr(t.beforeCreate,e,"bc");var i,{data:o,computed:a,methods:s,watch:c,provide:l,inject:u,created:d,beforeMount:h,mounted:p,beforeUpdate:f,updated:g,activated:m,deactivated:v,beforeDestroy:y,beforeUnmount:_,destroyed:b,unmounted:w,render:k,renderTracked:x,renderTriggered:S,errorCaptured:C,serverPrefetch:E,expose:I,inheritAttrs:T,components:A,directives:O,filters:$}=t,N=(i=Object.create(null),(e,t)=>{i[t]?zo("".concat(e,' property "').concat(t,'" is already defined in ').concat(i[t],".")):i[t]=e}),[P]=e.propsOptions;if(P)for(var M in P)N("Props",M);if(u&&function(e,t,n=W,r=!1){Q(e)&&(e=Fr(e));var i=function(i){var o=e[i],a=void 0;Zt(a=oe(o)?"default"in o?Kn(o.from||i,o.default,!0):Kn(o.from||i):Kn(o))?r?Object.defineProperty(t,i,{enumerable:!0,configurable:!0,get:()=>a.value,set:e=>a.value=e}):(zo('injected property "'.concat(i,'" is a ref and will be auto-unwrapped ')+"and no longer needs `.value` in the next minor release. To opt-in to the new behavior now, set `app.config.unwrapInjectedRef = true` (this config is temporary and will not be needed in the future.)"),t[i]=a):t[i]=a,n("Inject",i)};for(var o in e)i(o)}(u,r,N,e.appContext.config.unwrapInjectedRef),s)for(var L in s){var R=s[L];ne(R)?(Object.defineProperty(r,L,{value:R.bind(n),configurable:!0,enumerable:!0,writable:!0}),N("Methods",L)):zo('Method "'.concat(L,'" has type "').concat(typeof R,'" in the component definition. ')+"Did you reference the function correctly?")}if(o&&function(){ne(o)||zo("The data option must be a function. Plain object usage is no longer supported.");var t=o.call(n,n);if(ae(t)&&zo("data() returned a Promise - note data() cannot be async; If you intend to perform data fetching before component renders, use async setup() + <Suspense>."),oe(t)){e.data=Bt(t);var i=function(e){N("Data",e),"$"!==e[0]&&"_"!==e[0]&&Object.defineProperty(r,e,{configurable:!0,enumerable:!0,get:()=>t[e],set:W})};for(var a in t)i(a)}else zo("data() should return an object.")}(),Nr=!0,a){var B=function(e){var t=a[e],i=ne(t)?t.bind(n,n):ne(t.get)?t.get.bind(n,n):W;i===W&&zo('Computed property "'.concat(e,'" has no getter.'));var o=ln({get:i,set:!ne(t)&&ne(t.set)?t.set.bind(n):()=>{zo('Write operation failed: computed property "'.concat(e,'" is readonly.'))}});Object.defineProperty(r,e,{enumerable:!0,configurable:!0,get:()=>o.value,set:e=>o.value=e}),N("Computed",e)};for(var D in a)B(D)}if(c)for(var j in c)Lr(c[j],r,n,j);if(l){var F=ne(l)?l.call(n):l;Reflect.ownKeys(F).forEach((e=>{Zn(e,F[e])}))}function V(e,t){Q(t)?t.forEach((t=>e(t.bind(n)))):t&&e(t.bind(n))}if(d&&Mr(d,e,"c"),V(kr,h),V(xr,p),V(Sr,f),V(Cr,g),V(fr,m),V(gr,v),V($r,C),V(Or,x),V(Ar,S),V(Er,_),V(Ir,w),V(Tr,E),Q(I))if(I.length){var U=e.exposed||(e.exposed={});I.forEach((e=>{Object.defineProperty(U,e,{get:()=>n[e],set:t=>n[e]=t})}))}else e.exposed||(e.exposed={});k&&e.render===W&&(e.render=k),null!=T&&(e.inheritAttrs=T),A&&(e.components=A),O&&(e.directives=O);var z=e.appContext.config.globalProperties.$applyOptions;z&&z(t,e,n)}function Mr(e,t,n){Jo(Q(e)?e.map((e=>e.bind(t.proxy))):e.bind(t.proxy),t,n)}function Lr(e,t,n,r){var i=r.includes(".")?Ca(n,r):()=>n[r];if(re(e)){var o=t[e];ne(o)?ka(i,o):zo('Invalid watch handler specified by key "'.concat(e,'"'),o)}else if(ne(e))ka(i,e.bind(n));else if(oe(e))if(Q(e))e.forEach((e=>Lr(e,t,n,r)));else{var a=ne(e.handler)?e.handler.bind(n):t[e.handler];ne(a)?ka(i,a,e):zo('Invalid watch handler specified by key "'.concat(e.handler,'"'),a)}else zo('Invalid watch option: "'.concat(r,'"'),e)}function Rr(e){var t,n=e.type,{mixins:r,extends:i}=n,{mixins:o,optionsCache:a,config:{optionMergeStrategies:s}}=e.appContext,c=a.get(n);return c?t=c:o.length||r||i?(t={},o.length&&o.forEach((e=>Br(t,e,s,!0))),Br(t,n,s)):t=n,a.set(n,t),t}function Br(e,t,n,r=!1){var{mixins:i,extends:o}=t;for(var a in o&&Br(e,o,n,!0),i&&i.forEach((t=>Br(e,t,n,!0))),t)if(r&&"expose"===a)zo('"expose" option is ignored when declared in mixins or extends. It should only be declared in the base component itself.');else{var s=Dr[a]||n&&n[a];e[a]=s?s(e[a],t[a]):t[a]}return e}var Dr={data:jr,props:Ur,emits:Ur,methods:Ur,computed:Ur,beforeCreate:Vr,created:Vr,beforeMount:Vr,mounted:Vr,beforeUpdate:Vr,updated:Vr,beforeDestroy:Vr,beforeUnmount:Vr,destroyed:Vr,unmounted:Vr,activated:Vr,deactivated:Vr,errorCaptured:Vr,serverPrefetch:Vr,components:Ur,directives:Ur,watch:function(e,t){if(!e)return t;if(!t)return e;var n=X(Object.create(null),e);for(var r in t)n[r]=Vr(e[r],t[r]);return n},provide:jr,inject:function(e,t){return Ur(Fr(e),Fr(t))}};function jr(e,t){return t?e?function(){return X(ne(e)?e.call(this,this):e,ne(t)?t.call(this,this):t)}:t:e}function Fr(e){if(Q(e)){for(var t={},n=0;n<e.length;n++)t[e[n]]=e[n];return t}return e}function Vr(e,t){return e?[...new Set([].concat(e,t))]:t}function Ur(e,t){return e?X(X(Object.create(null),e),t):t}function zr(e,t,n,r){var i,[o,a]=e.propsOptions,s=!1;if(t)for(var c in t)if(!he(c)){var l=t[c],u=void 0;o&&K(o,u=ge(c))?a&&a.includes(u)?(i||(i={}))[u]=l:n[u]=l:An(e.emitsOptions,c)||l!==r[c]&&(r[c]=l,s=!0)}if(a)for(var d=Ht(n),h=i||U,p=0;p<a.length;p++){var f=a[p];n[f]=Wr(o,d,f,h[f],e,!K(h,f))}return s}function Wr(e,t,n,r,i,o){var a=e[n];if(null!=a){var s=K(a,"default");if(s&&void 0===r){var c=a.default;if(a.type!==Function&&ne(c)){var{propsDefaults:l}=i;n in l?r=l[n]:(ko(i),r=l[n]=c.call(null,t),xo())}else r=c}a[0]&&(o&&!s?r=!1:!a[1]||""!==r&&r!==ve(n)||(r=!0))}return r}function Hr(e,t,n=!1){var r=t.propsCache,i=r.get(e);if(i)return i;var o=e.props,a={},s=[],c=!1;if(!ne(e)){var l=e=>{c=!0;var[n,r]=Hr(e,t,!0);X(a,n),r&&s.push(...r)};!n&&t.mixins.length&&t.mixins.forEach(l),e.extends&&l(e.extends),e.mixins&&e.mixins.forEach(l)}if(!o&&!c)return r.set(e,z),z;if(Q(o))for(var u=0;u<o.length;u++){re(o[u])||zo("props must be strings when using array syntax.",o[u]);var d=ge(o[u]);qr(d)&&(a[d]=U)}else if(o)for(var h in oe(o)||zo("invalid props options",o),o){var p=ge(h);if(qr(p)){var f=o[h],g=a[p]=Q(f)||ne(f)?{type:f}:f;if(g){var m=Xr(Boolean,g.type),v=Xr(String,g.type);g[0]=m>-1,g[1]=v<0||m<v,(m>-1||K(g,"default"))&&s.push(p)}}}var y=[a,s];return r.set(e,y),y}function qr(e){return"$"!==e[0]||(zo('Invalid prop name: "'.concat(e,'" is a reserved property.')),!1)}function Yr(e){var t=e&&e.toString().match(/^\s*function (\w+)/);return t?t[1]:null===e?"null":""}function Jr(e,t){return Yr(e)===Yr(t)}function Xr(e,t){return Q(t)?t.findIndex((t=>Jr(t,e))):ne(t)&&Jr(t,e)?0:-1}function Gr(e,t,n){var r=Ht(t),i=n.propsOptions[0];for(var o in i){var a=i[o];null!=a&&Zr(o,r[o],a,!K(e,o)&&!K(e,ve(o)))}}function Zr(e,t,n,r){var{type:i,required:o,validator:a}=n;if(o&&r)zo('Missing required prop: "'+e+'"');else if(null!=t||n.required){if(null!=i&&!0!==i){for(var s=!1,c=Q(i)?i:[i],l=[],u=0;u<c.length&&!s;u++){var{valid:d,expectedType:h}=Qr(t,c[u]);l.push(h||""),s=d}if(!s)return void zo(function(e,t,n){var r='Invalid prop: type check failed for prop "'.concat(e,'".')+" Expected ".concat(n.map(ye).join(" | ")),i=n[0],o=le(t),a=ei(t,i),s=ei(t,o);1===n.length&&ti(i)&&!function(...e){return e.some((e=>"boolean"===e.toLowerCase()))}(i,o)&&(r+=" with value ".concat(a));r+=", got ".concat(o," "),ti(o)&&(r+="with value ".concat(s,"."));return r}(e,t,l))}a&&!a(t)&&zo('Invalid prop: custom validator check failed for prop "'+e+'".')}}var Kr=O("String,Number,Boolean,Function,Symbol,BigInt");function Qr(e,t){var n,r=Yr(t);if(Kr(r)){var i=typeof e;(n=i===r.toLowerCase())||"object"!==i||(n=e instanceof t)}else n="Object"===r?oe(e):"Array"===r?Q(e):"null"===r?null===e:e instanceof t;return{valid:n,expectedType:r}}function ei(e,t){return"String"===t?'"'.concat(e,'"'):"".concat("Number"===t?Number(e):e)}function ti(e){return["string","number","boolean"].some((t=>e.toLowerCase()===t))}var ni=e=>"_"===e[0]||"$stable"===e,ri=e=>Q(e)?e.map(so):[so(e)],ii=(e,t,n)=>{var r=Pn(((...n)=>(bo&&zo('Slot "'.concat(e,'" invoked outside of the render function: ')+"this will not track dependencies used in the slot. Invoke the slot function inside the render function instead."),ri(t(...n)))),n);return r._c=!1,r},oi=(e,t,n)=>{var r=e._ctx;for(var i in e)if(!ni(i)){var o=e[i];ne(o)?t[i]=ii(i,o,r):null!=o&&function(){zo('Non-function value encountered for slot "'.concat(i,'". ')+"Prefer function slots for better performance.");var e=ri(o);t[i]=()=>e}()}},ai=(e,t)=>{dr(e.vnode)||zo("Non-function value encountered for default slot. Prefer function slots for better performance.");var n=ri(t);e.slots.default=()=>n},si=O("bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text");function ci(e){si(e)&&zo("Do not use built-in directive ids as custom directive id: "+e)}function li(e,t,n,r){for(var i=e.dirs,o=t&&t.dirs,a=0;a<i.length;a++){var s=i[a];o&&(s.oldValue=o[a].value);var c=s.dir[r];c&&(ze(),Jo(c,n,8,[e.el,s,e,t]),We())}}function ui(){return{app:null,config:{isNativeTag:H,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}var di=0;function hi(e,t){return function(n,r=null){null==r||oe(r)||(zo("root props passed to app.mount() must be an object."),r=null);var i=ui(),o=new Set,a=!1,s=i.app={_uid:di++,_component:n,_props:r,_container:null,_context:i,_instance:null,version:Pa,get config(){return i.config},set config(e){zo("app.config cannot be replaced. Modify individual options instead.")},use:(e,...t)=>(o.has(e)?zo("Plugin has already been applied to target app."):e&&ne(e.install)?(o.add(e),e.install(s,...t)):ne(e)?(o.add(e),e(s,...t)):zo('A plugin must either be a function or an object with an "install" function.'),s),mixin:e=>(i.mixins.includes(e)?zo("Mixin has already been applied to target app"+(e.name?": ".concat(e.name):"")):i.mixins.push(e),s),component:(e,t)=>(Co(e,i.config),t?(i.components[e]&&zo('Component "'.concat(e,'" has already been registered in target app.')),i.components[e]=t,s):i.components[e]),directive:(e,t)=>(ci(e),t?(i.directives[e]&&zo('Directive "'.concat(e,'" has already been registered in target app.')),i.directives[e]=t,s):i.directives[e]),mount(o,c,l){if(!a){var u=no(n,r);return u.appContext=i,i.reload=()=>{e(io(u),o,l)},c&&t?t(u,o):e(u,o,l),a=!0,s._container=o,o.__vue_app__=s,s._instance=u.component,function(e,t){yn("app:init",e,t,{Fragment:Bi,Text:Di,Comment:ji,Static:Fi})}(s,Pa),Lo(u.component)||u.component.proxy}zo("App has already been mounted.\nIf you want to remount the same app, move your app creation logic into a factory function and create fresh app instances for each mount - e.g. `const createMyApp = () => createApp(App)`")},unmount(){a?(e(null,s._container),s._instance=null,function(e){yn("app:unmount",e)}(s),delete s._container.__vue_app__):zo("Cannot unmount an app that is not mounted.")},provide:(e,t)=>(e in i.provides&&zo('App already provides property with key "'.concat(String(e),'". ')+"It will be overwritten with the new value."),i.provides[e]=t,s)};return s}}var pi,fi,gi=!1,mi=e=>/svg/.test(e.namespaceURI)&&"foreignObject"!==e.tagName,vi=e=>8===e.nodeType;function yi(e){var{mt:t,p:n,o:{patchProp:r,nextSibling:i,parentNode:o,remove:a,insert:s,createComment:c}}=e,l=(n,r,a,s,c,g=!1)=>{var m=vi(n)&&"["===n.data,v=()=>p(n,r,a,s,c,m),{type:y,ref:_,shapeFlag:b}=r,w=n.nodeType;r.el=n;var k=null;switch(y){case Di:3!==w?k=v():(n.data!==r.children&&(gi=!0,zo("Hydration text mismatch:"+"\n- Client: ".concat(JSON.stringify(n.data))+"\n- Server: ".concat(JSON.stringify(r.children))),n.data=r.children),k=i(n));break;case ji:k=8!==w||m?v():i(n);break;case Fi:if(1===w){k=n;for(var x=!r.children.length,S=0;S<r.staticCount;S++)x&&(r.children+=k.outerHTML),S===r.staticCount-1&&(r.anchor=k),k=i(k);return k}k=v();break;case Bi:k=m?h(n,r,a,s,c,g):v();break;default:if(1&b)k=1!==w||r.type.toLowerCase()!==n.tagName.toLowerCase()?v():u(n,r,a,s,c,g);else if(6&b){r.slotScopeIds=c;var C,E=o(n);if(t(r,E,null,a,s,mi(E),g),k=m?f(n):i(n),lr(r))m?(C=no(Bi)).anchor=k?k.previousSibling:E.lastChild:C=3===n.nodeType?ao(""):no("div"),C.el=n,r.component.subTree=C}else 64&b?k=8!==w?v():r.type.hydrate(n,r,a,s,c,g,e,d):128&b?k=r.type.hydrate(n,r,a,s,mi(o(n)),c,g,e,l):zo("Invalid HostVNode type:",y,"(".concat(typeof y,")"))}return null!=_&&Ci(_,null,s,r),k},u=(e,t,n,i,o,s)=>{s=s||!!t.dynamicChildren;var{type:c,props:l,patchFlag:u,shapeFlag:h,dirs:p}=t,f="input"===c&&p||"option"===c;if(f||-1!==u){if(p&&li(t,null,n,"created"),l)if(f||!s||48&u)for(var g in l)(f&&g.endsWith("value")||Y(g)&&!he(g))&&r(e,g,null,l[g],!1,void 0,n);else l.onClick&&r(e,"onClick",null,l.onClick,!1,void 0,n);var m;if((m=l&&l.onVnodeBeforeMount)&&Ei(m,n,t),p&&li(t,null,n,"beforeMount"),((m=l&&l.onVnodeMounted)||p)&&Xn((()=>{m&&Ei(m,n,t),p&&li(t,null,n,"mounted")}),i),16&h&&(!l||!l.innerHTML&&!l.textContent))for(var v=d(e.firstChild,t,e,n,i,o,s),y=!1;v;){gi=!0,y||(zo("Hydration children mismatch in <".concat(t.type,">: ")+"server rendered element contains more child nodes than client vdom."),y=!0);var _=v;v=v.nextSibling,a(_)}else 8&h&&e.textContent!==t.children&&(gi=!0,zo("Hydration text content mismatch in <".concat(t.type,">:\n")+"- Client: ".concat(e.textContent,"\n")+"- Server: ".concat(t.children)),e.textContent=t.children)}return e.nextSibling},d=(e,t,r,i,o,a,s)=>{s=s||!!t.dynamicChildren;for(var c=t.children,u=c.length,d=!1,h=0;h<u;h++){var p=s?c[h]:c[h]=so(c[h]);if(e)e=l(e,p,i,o,a,s);else{if(p.type===Di&&!p.children)continue;gi=!0,d||(zo("Hydration children mismatch in <".concat(r.tagName.toLowerCase(),">: ")+"server rendered element contains fewer child nodes than client vdom."),d=!0),n(null,p,r,null,i,o,mi(r),a)}}return e},h=(e,t,n,r,a,l)=>{var{slotScopeIds:u}=t;u&&(a=a?a.concat(u):u);var h=o(e),p=d(i(e),t,h,n,r,a,l);return p&&vi(p)&&"]"===p.data?i(t.anchor=p):(gi=!0,s(t.anchor=c("]",h),h,p),p)},p=(e,t,r,s,c,l)=>{if(gi=!0,zo("Hydration node mismatch:\n- Client vnode:",t.type,"\n- Server rendered DOM:",e,3===e.nodeType?"(text)":vi(e)&&"["===e.data?"(start of fragment)":""),t.el=null,l)for(var u=f(e);;){var d=i(e);if(!d||d===u)break;a(d)}var h=i(e),p=o(e);return a(e),n(null,t,p,h,r,s,mi(p),c),h},f=e=>{for(var t=0;e;)if((e=i(e))&&vi(e)&&("["===e.data&&t++,"]"===e.data)){if(0===t)return i(e);t--}return e};return[(e,t)=>{if(!t.hasChildNodes())return zo("Attempting to hydrate existing markup but container is empty. Performing full mount instead."),n(null,e,t),void ma();gi=!1,l(t.firstChild,e,null,null,null),ma(),gi&&console.error("Hydration completed but contains mismatches.")},l]}function _i(e,t){e.appContext.config.performance&&wi()&&fi.mark("vue-".concat(t,"-").concat(e.uid)),Sn(e,t,pi?fi.now():Date.now())}function bi(e,t){if(e.appContext.config.performance&&wi()){var n="vue-".concat(t,"-").concat(e.uid),r=n+":end";fi.mark(r),fi.measure("<".concat(Do(e,e.type),"> ").concat(t),n,r),fi.clearMarks(n),fi.clearMarks(r)}Cn(e,t,pi?fi.now():Date.now())}function wi(){return void 0!==pi||("undefined"!=typeof window&&window.performance?(pi=!0,fi=window.performance):pi=!1),pi}var ki=Xn;function xi(e){return Si(e)}function Si(e,t){!function(){var e=[];if(e.length){var t=e.length>1;console.warn("Feature flag".concat(t?"s":""," ").concat(e.join(", ")," ").concat(t?"are":"is"," not explicitly defined. You are running the esm-bundler build of Vue, ")+"which expects these compile-time feature flags to be globally injected via the bundler config in order to get better tree-shaking in the production bundle.\n\nFor more details, see http://link.vuejs.org/feature-flags.")}}();var n=Se();n.__VUE__=!0,_n(n.__VUE_DEVTOOLS_GLOBAL_HOOK__,n);var r,i,{insert:o,remove:a,patchProp:s,forcePatchProp:l,createElement:u,createText:d,createComment:h,setText:p,setElementText:f,parentNode:g,nextSibling:m,setScopeId:v=W,cloneNode:y,insertStaticContent:_}=e,b=(e,t,n,r=null,i=null,o=null,a=!1,s=null,c=!un&&!!t.dynamicChildren)=>{if(e!==t){e&&!Zi(e,t)&&(r=Q(e),q(e,i,o,!0),e=null),-2===t.patchFlag&&(c=!1,t.dynamicChildren=null);var{type:l,ref:u,shapeFlag:d}=t;switch(l){case Di:w(e,t,n,r);break;case ji:k(e,t,n,r);break;case Fi:null==e?x(t,n,r,a):S(e,t,n,a);break;case Bi:P(e,t,n,r,i,o,a,s,c);break;default:1&d?E(e,t,n,r,i,o,a,s,c):6&d?M(e,t,n,r,i,o,a,s,c):64&d||128&d?l.process(e,t,n,r,i,o,a,s,c,te):zo("Invalid VNode type:",l,"(".concat(typeof l,")"))}null!=u&&i&&Ci(u,e&&e.ref,o,t||e,!t)}},w=(e,t,n,r)=>{if(null==e)o(t.el=d(t.children,n),n,r);else{var i=t.el=e.el;t.children!==e.children&&p(i,t.children)}},k=(e,t,n,r)=>{null==e?o(t.el=h(t.children||"",n),n,r):t.el=e.el},x=(e,t,n,r)=>{[e.el,e.anchor]=_(e.children,t,n,r)},S=(e,t,n,r)=>{if(t.children!==e.children){var i=m(e.anchor);C(e),[t.el,t.anchor]=_(t.children,n,i,r)}else t.el=e.el,t.anchor=e.anchor},C=({el:e,anchor:t})=>{for(var n;e&&e!==t;)n=m(e),a(e),e=n;a(t)},E=(e,t,n,r,i,o,a,s,c)=>{a=a||"svg"===t.type,null==e?I(t,n,r,i,o,a,s,c):O(e,t,i,o,a,s,c)},I=(e,t,n,r,i,a,c,l)=>{var d,h,{type:p,props:g,shapeFlag:m,transition:v,patchFlag:y,dirs:_}=e;if(d=e.el=u(e.type,t),8&m?f(d,e.children):16&m&&A(e.children,d,null,r,i,a&&"foreignObject"!==p,c,l),_&&li(e,null,r,"created"),g){for(var b in g)"value"===b||he(b)||s(d,b,null,g[b],a,e.children,r,i,Z);"value"in g&&s(d,"value",null,g.value),(h=g.onVnodeBeforeMount)&&Ei(h,r,e)}T(d,e,e.scopeId,c,r),Object.defineProperty(d,"__vnode",{value:e,enumerable:!1}),Object.defineProperty(d,"__vueParentComponent",{value:r,enumerable:!1}),_&&li(e,null,r,"beforeMount");var w=(!i||i&&!i.pendingBranch)&&v&&!v.persisted;w&&v.beforeEnter(d),o(d,t,n),((h=g&&g.onVnodeMounted)||w||_)&&ki((()=>{h&&Ei(h,r,e),w&&v.enter(d),_&&li(e,null,r,"mounted")}),i)},T=(e,t,n,r,i)=>{if(n&&v(e,n),r)for(var o=0;o<r.length;o++)v(e,r[o]);if(i){var a=i.subTree;if(a.patchFlag>0&&2048&a.patchFlag&&(a=Dn(a.children)||a),t===a){var s=i.vnode;T(e,s,s.scopeId,s.slotScopeIds,i.parent)}}},A=(e,t,n,r,i,o,a,s,c=0)=>{for(var l=c;l<e.length;l++){var u=e[l]=s?co(e[l]):so(e[l]);b(null,u,t,n,r,i,o,a,s)}},O=(e,t,n,r,i,o,a)=>{var c=t.el=e.el,{patchFlag:u,dynamicChildren:d,dirs:h}=t;u|=16&e.patchFlag;var p,g=e.props||U,m=t.props||U;(p=m.onVnodeBeforeUpdate)&&Ei(p,n,t,e),h&&li(t,e,n,"beforeUpdate"),un&&(u=0,a=!1,d=null);var v=i&&"foreignObject"!==t.type;if(d?($(e.dynamicChildren,d,c,n,r,v,o),n&&n.type.__hmrId&&Ii(e,t)):a||j(e,t,c,null,n,r,v,o,!1),u>0){if(16&u)N(c,t,g,m,n,r,i);else if(2&u&&g.class!==m.class&&s(c,"class",null,m.class,i),4&u&&s(c,"style",g.style,m.style,i),8&u)for(var y=t.dynamicProps,_=0;_<y.length;_++){var b=y[_],w=g[b],k=m[b];(k!==w||"value"===b||l&&l(c,b))&&s(c,b,w,k,i,e.children,n,r,Z)}1&u&&e.children!==t.children&&f(c,t.children)}else a||null!=d||N(c,t,g,m,n,r,i);((p=m.onVnodeUpdated)||h)&&ki((()=>{p&&Ei(p,n,t,e),h&&li(t,e,n,"updated")}),r)},$=(e,t,n,r,i,o,a)=>{for(var s=0;s<t.length;s++){var c=e[s],l=t[s],u=c.el&&(c.type===Bi||!Zi(c,l)||70&c.shapeFlag)?g(c.el):n;b(c,l,u,null,r,i,o,a,!0)}},N=(e,t,n,r,i,o,a)=>{if(n!==r){for(var c in r)if(!he(c)){var u=r[c],d=n[c];(u!==d&&"value"!==c||l&&l(e,c))&&s(e,c,d,u,a,t.children,i,o,Z)}if(n!==U)for(var h in n)he(h)||h in r||s(e,h,n[h],null,a,t.children,i,o,Z);"value"in r&&s(e,"value",n.value,r.value)}},P=(e,t,n,r,i,a,s,c,l)=>{var u=t.el=e?e.el:d("",n),h=t.anchor=e?e.anchor:d("",n),{patchFlag:p,dynamicChildren:f,slotScopeIds:g}=t;un&&(p=0,l=!1,f=null),g&&(c=c?c.concat(g):g),null==e?(o(u,n,r),o(h,n,r),A(t.children,n,h,i,a,s,c,l)):p>0&&64&p&&f&&e.dynamicChildren?($(e.dynamicChildren,f,n,i,a,s,c),i&&i.type.__hmrId?Ii(e,t):(null!=t.key||i&&t===i.subTree)&&Ii(e,t,!0)):j(e,t,n,h,i,a,s,c,l)},M=(e,t,n,r,i,o,a,s,c)=>{t.slotScopeIds=s,null==e?512&t.shapeFlag?i.ctx.activate(t,n,r,a,c):L(t,n,r,i,o,a,c):R(e,t,c)},L=(e,t,n,r,i,o,a)=>{var s=e.component=_o(e,r,i);if(s.type.__hmrId&&function(e){var t=e.type.__hmrId,n=pn.get(t);n||(fn(t),n=pn.get(t)),n.add(e)}(s),Vo(e),_i(s,"mount"),dr(e)&&(s.ctx.renderer=te),_i(s,"init"),Oo(s),bi(s,"init"),s.asyncDep){if(i&&i.registerDep(s,B),!e.el){var l=s.subTree=no(ji);k(null,l,t,n)}}else{if(B(s,e,t,n,i,o,a),s.$wxsModules){var u=function(e){var{vnode:t}=e;if(c(t.el))return t.el;var{subTree:n}=e;if(16&n.shapeFlag){var r=n.children.find((e=>c(e.el)));if(r)return r.el}return t.el}(s);if(u){u.setAttribute(".vOwnerId",s.uid);var{$renderjsModules:d}=s.type;d&&u.setAttribute(".vRenderjs",d)}}Uo(),bi(s,"mount")}},R=(e,t,n)=>{var r,i,o=t.component=e.component;if(function(e,t,n){var{props:r,children:i,component:o}=e,{props:a,children:s,patchFlag:c}=t,l=o.emitsOptions;if((i||s)&&un)return!0;if(t.dirs||t.transition)return!0;if(!(n&&c>=0))return!(!i&&!s||s&&s.$stable)||r!==a&&(r?!a||Un(r,a,l):!!a);if(1024&c)return!0;if(16&c)return r?Un(r,a,l):!!a;if(8&c)for(var u=t.dynamicProps,d=0;d<u.length;d++){var h=u[d];if(a[h]!==r[h]&&!An(l,h))return!0}return!1}(e,t,n)){if(o.asyncDep&&!o.asyncResolved)return Vo(t),D(o,t,n),void Uo();o.next=t,r=o.update,(i=Ko.indexOf(r))>Qo&&Ko.splice(i,1),o.update()}else t.component=e.component,t.el=e.el,o.vnode=t},B=(e,t,n,r,o,a,s)=>{var c=new je((()=>{if(e.isMounted){var l,{next:u,bu:d,u:h,parent:p,vnode:f}=e,m=u;Vo(u||e.vnode),c.allowRecurse=!1,u?(u.el=f.el,D(e,u,s)):u=f,d&&we(d),(l=u.props&&u.props.onVnodeBeforeUpdate)&&Ei(l,p,u,f),c.allowRecurse=!0,_i(e,"render");var v=Rn(e);bi(e,"render");var y=e.subTree;e.subTree=v,_i(e,"patch"),b(y,v,g(y.el),Q(y),e,o,a),bi(e,"patch"),u.el=v.el,null===m&&zn(e,v.el),h&&ki(h,o),(l=u.props&&u.props.onVnodeUpdated)&&ki((()=>Ei(l,p,u,f)),o),wn(e),Uo()}else{var _,{el:w,props:k}=t,{bm:x,m:S,parent:C}=e,E=lr(t);if(c.allowRecurse=!1,x&&we(x),!E&&(_=k&&k.onVnodeBeforeMount)&&Ei(_,C,t),c.allowRecurse=!0,w&&i){var I=()=>{_i(e,"render"),e.subTree=Rn(e),bi(e,"render"),_i(e,"hydrate"),i(w,e.subTree,e,o,null),bi(e,"hydrate")};E?t.type.__asyncLoader().then((()=>!e.isUnmounted&&I())):I()}else{_i(e,"render");var T=e.subTree=Rn(e);bi(e,"render"),_i(e,"patch"),b(null,T,n,r,e,o,a),bi(e,"patch"),t.el=T.el}if(S&&ki(S,o),!E&&(_=k&&k.onVnodeMounted)){var A=t;ki((()=>Ei(_,C,A)),o)}256&t.shapeFlag&&e.a&&ki(e.a,o),e.isMounted=!0,bn(e),t=n=r=null}}),(()=>da(e.update)),e.scope),l=e.update=c.run.bind(c);l.id=e.uid,c.allowRecurse=l.allowRecurse=!0,c.onTrack=e.rtc?t=>we(e.rtc,t):void 0,c.onTrigger=e.rtg?t=>we(e.rtg,t):void 0,l.ownerInstance=e,l()},D=(e,t,n)=>{t.component=e;var r=e.vnode.props;e.vnode=t,e.next=null,function(e,t,n,r){var{props:i,attrs:o,vnode:{patchFlag:a}}=e,s=Ht(i),[c]=e.propsOptions,l=!1;if(e.type.__hmrId||e.parent&&e.parent.type.__hmrId||!(r||a>0)||16&a){var u;for(var d in zr(e,t,i,o)&&(l=!0),s)t&&(K(t,d)||(u=ve(d))!==d&&K(t,u))||(c?!n||void 0===n[d]&&void 0===n[u]||(i[d]=Wr(c,s,d,void 0,e,!0)):delete i[d]);if(o!==s)for(var h in o)t&&K(t,h)||(delete o[h],l=!0)}else if(8&a)for(var p=e.vnode.dynamicProps,f=0;f<p.length;f++){var g=p[f],m=t[g];if(c)if(K(o,g))m!==o[g]&&(o[g]=m,l=!0);else{var v=ge(g);i[v]=Wr(c,s,v,m,e,!1)}else m!==o[g]&&(o[g]=m,l=!0)}l&&Je(e,"set","$attrs"),Gr(t||{},i,e)}(e,t.props,r,n),((e,t,n)=>{var{vnode:r,slots:i}=e,o=!0,a=U;if(32&r.shapeFlag){var s=t._;s?un?X(i,t):n&&1===s?o=!1:(X(i,t),n||1!==s||delete i._):(o=!t.$stable,oi(t,i)),a=t}else t&&(ai(e,t),a={default:1});if(o)for(var c in i)ni(c)||c in a||delete i[c]})(e,t.children,n),ze(),ga(void 0,e.update),We()},j=(e,t,n,r,i,o,a,s,c=!1)=>{var l=e&&e.children,u=e?e.shapeFlag:0,d=t.children,{patchFlag:h,shapeFlag:p}=t;if(h>0){if(128&h)return void V(l,d,n,r,i,o,a,s,c);if(256&h)return void F(l,d,n,r,i,o,a,s,c)}8&p?(16&u&&Z(l,i,o),d!==l&&f(n,d)):16&u?16&p?V(l,d,n,r,i,o,a,s,c):Z(l,i,o,!0):(8&u&&f(n,""),16&p&&A(d,n,r,i,o,a,s,c))},F=(e,t,n,r,i,o,a,s,c)=>{t=t||z;var l,u=(e=e||z).length,d=t.length,h=Math.min(u,d);for(l=0;l<h;l++){var p=t[l]=c?co(t[l]):so(t[l]);b(e[l],p,n,null,i,o,a,s,c)}u>d?Z(e,i,o,!0,!1,h):A(t,n,r,i,o,a,s,c,h)},V=(e,t,n,r,i,o,a,s,c)=>{for(var l=0,u=t.length,d=e.length-1,h=u-1;l<=d&&l<=h;){var p=e[l],f=t[l]=c?co(t[l]):so(t[l]);if(!Zi(p,f))break;b(p,f,n,null,i,o,a,s,c),l++}for(;l<=d&&l<=h;){var g=e[d],m=t[h]=c?co(t[h]):so(t[h]);if(!Zi(g,m))break;b(g,m,n,null,i,o,a,s,c),d--,h--}if(l>d){if(l<=h)for(var v=h+1,y=v<u?t[v].el:r;l<=h;)b(null,t[l]=c?co(t[l]):so(t[l]),n,y,i,o,a,s,c),l++}else if(l>h)for(;l<=d;)q(e[l],i,o,!0),l++;else{var _,w=l,k=l,x=new Map;for(l=k;l<=h;l++){var S=t[l]=c?co(t[l]):so(t[l]);null!=S.key&&(x.has(S.key)&&zo("Duplicate keys found during update:",JSON.stringify(S.key),"Make sure keys are unique."),x.set(S.key,l))}var C=0,E=h-k+1,I=!1,T=0,A=new Array(E);for(l=0;l<E;l++)A[l]=0;for(l=w;l<=d;l++){var O=e[l];if(C>=E)q(O,i,o,!0);else{var $=void 0;if(null!=O.key)$=x.get(O.key);else for(_=k;_<=h;_++)if(0===A[_-k]&&Zi(O,t[_])){$=_;break}void 0===$?q(O,i,o,!0):(A[$-k]=l+1,$>=T?T=$:I=!0,b(O,t[$],n,null,i,o,a,s,c),C++)}}var N=I?function(e){var t,n,r,i,o,a=e.slice(),s=[0],c=e.length;for(t=0;t<c;t++){var l=e[t];if(0!==l){if(e[n=s[s.length-1]]<l){a[t]=n,s.push(t);continue}for(r=0,i=s.length-1;r<i;)e[s[o=r+i>>1]]<l?r=o+1:i=o;l<e[s[r]]&&(r>0&&(a[t]=s[r-1]),s[r]=t)}}r=s.length,i=s[r-1];for(;r-- >0;)s[r]=i,i=a[i];return s}(A):z;for(_=N.length-1,l=E-1;l>=0;l--){var P=k+l,M=t[P],L=P+1<u?t[P+1].el:r;0===A[l]?b(null,M,n,L,i,o,a,s,c):I&&(_<0||l!==N[_]?H(M,n,L,2):_--)}}},H=(e,t,n,r,i=null)=>{var{el:a,type:s,transition:c,children:l,shapeFlag:u}=e;if(6&u)H(e.component.subTree,t,n,r);else if(128&u)e.suspense.move(t,n,r);else if(64&u)s.move(e,t,n,te);else if(s!==Bi){if(s!==Fi)if(2!==r&&1&u&&c)if(0===r)c.beforeEnter(a),o(a,t,n),ki((()=>c.enter(a)),i);else{var{leave:d,delayLeave:h,afterLeave:p}=c,f=()=>o(a,t,n),g=()=>{d(a,(()=>{f(),p&&p()}))};h?h(a,f,g):g()}else o(a,t,n);else(({el:e,anchor:t},n,r)=>{for(var i;e&&e!==t;)i=m(e),o(e,n,r),e=i;o(t,n,r)})(e,t,n)}else{o(a,t,n);for(var v=0;v<l.length;v++)H(l[v],t,n,r);o(e.anchor,t,n)}},q=(e,t,n,r=!1,i=!1)=>{var{type:o,props:a,ref:s,children:c,dynamicChildren:l,shapeFlag:u,patchFlag:d,dirs:h}=e;if(null!=s&&Ci(s,null,n,e,!0),256&u)t.ctx.deactivate(e);else{var p,f=1&u&&h,g=!lr(e);if(g&&(p=a&&a.onVnodeBeforeUnmount)&&Ei(p,t,e),6&u)G(e.component,n,r);else{if(128&u)return void e.suspense.unmount(n,r);f&&li(e,null,t,"beforeUnmount"),64&u?e.type.remove(e,t,n,i,te,r):l&&(o!==Bi||d>0&&64&d)?Z(l,t,n,!1,!0):(o===Bi&&384&d||!i&&16&u)&&Z(c,t,n),r&&Y(e)}(g&&(p=a&&a.onVnodeUnmounted)||f)&&ki((()=>{p&&Ei(p,t,e),f&&li(e,null,t,"unmounted")}),n)}},Y=e=>{var{type:t,el:n,anchor:r,transition:i}=e;if(t!==Bi)if(t!==Fi){var o=()=>{a(n),i&&!i.persisted&&i.afterLeave&&i.afterLeave()};if(1&e.shapeFlag&&i&&!i.persisted){var{leave:s,delayLeave:c}=i,l=()=>s(n,o);c?c(e.el,o,l):l()}else o()}else C(e);else J(n,r)},J=(e,t)=>{for(var n;e!==t;)n=m(e),a(e),e=n;a(t)},G=(e,t,n)=>{e.type.__hmrId&&function(e){pn.get(e.type.__hmrId).delete(e)}(e);var{bum:r,scope:i,update:o,subTree:a,um:s}=e;r&&we(r),i.stop(),o&&(o.active=!1,q(a,e,t,n)),s&&ki(s,t),ki((()=>{e.isUnmounted=!0}),t),t&&t.pendingBranch&&!t.isUnmounted&&e.asyncDep&&!e.asyncResolved&&e.suspenseId===t.pendingId&&(t.deps--,0===t.deps&&t.resolve()),kn(e)},Z=(e,t,n,r=!1,i=!1,o=0)=>{for(var a=o;a<e.length;a++)q(e[a],t,n,r,i)},Q=e=>6&e.shapeFlag?Q(e.component.subTree):128&e.shapeFlag?e.suspense.next():m(e.anchor||e.el),ee=(e,t,n)=>{null==e?t._vnode&&q(t._vnode,null,null,!0):b(t._vnode||null,e,t,null,null,null,n),ma(),t._vnode=e},te={p:b,um:q,m:H,r:Y,mt:L,mc:A,pc:j,pbc:$,n:Q,o:e};return t&&([r,i]=t(te)),{render:ee,hydrate:r,createApp:hi(ee,r)}}function Ci(e,t,n,r,i=!1){if(Q(e))e.forEach(((e,o)=>Ci(e,t&&(Q(t)?t[o]:t),n,r,i)));else if(!lr(r)||i){var o=4&r.shapeFlag?Lo(r.component)||r.component.proxy:r.el,a=i?null:o,{i:s,r:c}=e;if(s){var l=t&&t.r,u=s.refs===U?s.refs={}:s.refs,d=s.setupState;if(null!=l&&l!==c&&(re(l)?(u[l]=null,K(d,l)&&(d[l]=null)):Zt(l)&&(l.value=null)),re(c)){var h=()=>{u[c]=a,K(d,c)&&(d[c]=a)};a?(h.id=-1,ki(h,n)):h()}else if(Zt(c)){var p=()=>{c.value=a};a?(p.id=-1,ki(p,n)):p()}else ne(c)?Yo(c,s,12,[a,u]):zo("Invalid template ref type:",a,"(".concat(typeof a,")"))}else zo("Missing ref owner context. ref cannot be used on hoisted vnodes. A vnode with ref must be created inside the render function.")}}function Ei(e,t,n,r=null){Jo(e,t,7,[n,r])}function Ii(e,t,n=!1){var r=e.children,i=t.children;if(Q(r)&&Q(i))for(var o=0;o<r.length;o++){var a=r[o],s=i[o];1&s.shapeFlag&&!s.dynamicChildren&&((s.patchFlag<=0||32===s.patchFlag)&&((s=i[o]=co(i[o])).el=a.el),n||Ii(a,s)),s.type!==ji||s.el||(s.el=a.el)}}var Ti=e=>e&&(e.disabled||""===e.disabled),Ai=e=>"undefined"!=typeof SVGElement&&e instanceof SVGElement,Oi=(e,t)=>{var n=e&&e.to;if(re(n)){if(t){var r=t(n);return r||zo('Failed to locate Teleport target with selector "'.concat(n,'". ')+"Note the target element must exist before the component is mounted - i.e. the target cannot be rendered by the component itself, and ideally should be outside of the entire Vue component tree."),r}return zo("Current renderer does not support string target for Teleports. (missing querySelector renderer option)"),null}return n||Ti(e)||zo("Invalid Teleport target: ".concat(n)),n};function $i(e,t,n,{o:{insert:r},m:i},o=2){0===o&&r(e.targetAnchor,t,n);var{el:a,anchor:s,shapeFlag:c,children:l,props:u}=e,d=2===o;if(d&&r(a,t,n),(!d||Ti(u))&&16&c)for(var h=0;h<l.length;h++)i(l[h],t,n,2);d&&r(s,t,n)}var Ni={__isTeleport:!0,process(e,t,n,r,i,o,a,s,c,l){var{mc:u,pc:d,pbc:h,o:{insert:p,querySelector:f,createText:g,createComment:m}}=l,v=Ti(t.props),{shapeFlag:y,children:_,dynamicChildren:b}=t;if(un&&(c=!1,b=null),null==e){var w=t.el=m("teleport start",n),k=t.anchor=m("teleport end",n);p(w,n,r),p(k,n,r);var x=t.target=Oi(t.props,f),S=t.targetAnchor=g("",n);x?(p(S,x),a=a||Ai(x)):v||zo("Invalid Teleport target on mount:",x,"(".concat(typeof x,")"));var C=(e,t)=>{16&y&&u(_,e,t,i,o,a,s,c)};v?C(n,k):x&&C(x,S)}else{t.el=e.el;var E=t.anchor=e.anchor,I=t.target=e.target,T=t.targetAnchor=e.targetAnchor,A=Ti(e.props),O=A?n:I,$=A?E:T;if(a=a||Ai(I),b?(h(e.dynamicChildren,b,O,i,o,a,s),Ii(e,t,!0)):c||d(e,t,O,$,i,o,a,s,!1),v)A||$i(t,n,E,l,1);else if((t.props&&t.props.to)!==(e.props&&e.props.to)){var N=t.target=Oi(t.props,f);N?$i(t,N,null,l,0):zo("Invalid Teleport target on update:",I,"(".concat(typeof I,")"))}else A&&$i(t,I,T,l,1)}},remove(e,t,n,r,{um:i,o:{remove:o}},a){var{shapeFlag:s,children:c,anchor:l,targetAnchor:u,target:d,props:h}=e;if(d&&o(u),(a||!Ti(h))&&(o(l),16&s))for(var p=0;p<c.length;p++){var f=c[p];i(f,t,n,!0,!!f.dynamicChildren)}},move:$i,hydrate:function(e,t,n,r,i,o,{o:{nextSibling:a,parentNode:s,querySelector:c}},l){var u=t.target=Oi(t.props,c);if(u){var d=u._lpa||u.firstChild;16&t.shapeFlag&&(Ti(t.props)?(t.anchor=l(a(e),t,s(e),n,r,i,o),t.targetAnchor=d):(t.anchor=a(e),t.targetAnchor=l(d,t,u,n,r,i,o)),u._lpa=t.targetAnchor&&a(t.targetAnchor))}return t.anchor&&a(t.anchor)}},Pi="components";var Mi=Symbol();function Li(e,t,n=!0,r=!1){var i=On||bo;if(i){var o=i.type;if(e===Pi){var a=Bo(o);if(a&&(a===t||a===ge(t)||a===ye(ge(t))))return o}var s=Ri(i[e]||o[e],t)||Ri(i.appContext[e],t);if(!s&&r)return o;if(n&&!s){var c=e===Pi?"\nIf this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement.":"";zo("Failed to resolve ".concat(e.slice(0,-1),": ").concat(t).concat(c))}return s}zo("resolve".concat(ye(e.slice(0,-1))," ")+"can only be used in render() or setup().")}function Ri(e,t){return e&&(e[t]||e[ge(t)]||e[ye(ge(t))])}var Bi=Symbol("Fragment"),Di=Symbol("Text"),ji=Symbol("Comment"),Fi=Symbol("Static"),Vi=[],Ui=null;function zi(e=!1){Vi.push(Ui=e?null:[])}function Wi(){Vi.pop(),Ui=Vi[Vi.length-1]||null}var Hi,qi=1;function Yi(e){qi+=e}function Ji(e){return e.dynamicChildren=qi>0?Ui||z:null,Wi(),qi>0&&Ui&&Ui.push(e),e}function Xi(e,t,n,r,i){return Ji(no(e,t,n,r,i,!0))}function Gi(e){return!!e&&!0===e.__v_isVNode}function Zi(e,t){return!(6&t.shapeFlag&&dn.has(t.type))&&(e.type===t.type&&e.key===t.key)}var Ki="__vInternal",Qi=({key:e})=>null!=e?e:null,eo=({ref:e})=>null!=e?re(e)||Zt(e)||ne(e)?{i:On,r:e}:e:null;function to(e,t=null,n=null,r=0,i=null,o=(e===Bi?0:1),a=!1,s=!1){var c={__v_isVNode:!0,__v_skip:!0,type:e,props:t,key:t&&Qi(t),ref:t&&eo(t),scopeId:$n,slotScopeIds:null,children:n,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:o,patchFlag:r,dynamicProps:i,dynamicChildren:null,appContext:null};return s?(lo(c,n),128&o&&e.normalize(c)):n&&(c.shapeFlag|=re(n)?8:16),c.key!=c.key&&zo("VNode created with invalid key (NaN). VNode type:",c.type),qi>0&&!a&&Ui&&(c.patchFlag>0||6&o)&&32!==c.patchFlag&&Ui.push(c),c}var no=(...e)=>function(e,t=null,n=null,r=0,i=null,o=!1){e&&e!==Mi||(e||zo("Invalid vnode type when creating vnode: ".concat(e,".")),e=ji);if(Gi(e)){var a=io(e,t,!0);return n&&lo(a,n),a}jo(e)&&(e=e.__vccOpts);if(t){t=ro(t);var{class:s,style:c}=t;s&&!re(s)&&(t.class=R(s)),oe(c)&&(Wt(c)&&!Q(c)&&(c=X({},c)),t.style=N(c))}var l=re(e)?1:(e=>e.__isSuspense)(e)?128:(e=>e.__isTeleport)(e)?64:oe(e)?4:ne(e)?2:0;4&l&&Wt(e)&&zo("Vue received a Component which was made a reactive object. This can lead to unnecessary performance overhead, and should be avoided by marking the component with `markRaw` or using `shallowRef` instead of `ref`.","\nComponent that was made reactive: ",e=Ht(e));return to(e,t,n,r,i,l,o,!0)}(...Hi?Hi(e,On):e);function ro(e){return e?Wt(e)||Ki in e?X({},e):e:null}function io(e,t,n=!1){var{props:r,ref:i,patchFlag:o,children:a}=e,s=t?uo(r||{},t):r;return{__v_isVNode:!0,__v_skip:!0,type:e.type,props:s,key:s&&Qi(s),ref:t&&t.ref?n&&i?Q(i)?i.concat(eo(t)):[i,eo(t)]:eo(t):i,scopeId:e.scopeId,slotScopeIds:e.slotScopeIds,children:-1===o&&Q(a)?a.map(oo):a,target:e.target,targetAnchor:e.targetAnchor,staticCount:e.staticCount,shapeFlag:e.shapeFlag,patchFlag:t&&e.type!==Bi?-1===o?16:16|o:o,dynamicProps:e.dynamicProps,dynamicChildren:e.dynamicChildren,appContext:e.appContext,dirs:e.dirs,transition:e.transition,component:e.component,suspense:e.suspense,ssContent:e.ssContent&&io(e.ssContent),ssFallback:e.ssFallback&&io(e.ssFallback),el:e.el,anchor:e.anchor}}function oo(e){var t=io(e);return Q(e.children)&&(t.children=e.children.map(oo)),t}function ao(e=" ",t=0){return no(Di,null,e,t)}function so(e){return null==e||"boolean"==typeof e?no(ji):Q(e)?no(Bi,null,e.slice()):"object"==typeof e?co(e):no(Di,null,String(e))}function co(e){return null===e.el||e.memo?e:io(e)}function lo(e,t){var n=0,{shapeFlag:r}=e;if(null==t)t=null;else if(Q(t))n=16;else if("object"==typeof t){if(65&r){var i=t.default;return void(i&&(i._c&&(i._d=!1),lo(e,i()),i._c&&(i._d=!0)))}n=32;var o=t._;o||Ki in t?3===o&&On&&(1===On.slots._?t._=1:(t._=2,e.patchFlag|=1024)):t._ctx=On}else ne(t)?(t={default:t,_ctx:On},n=32):(t=String(t),64&r?(n=16,t=[ao(t)]):n=8);e.children=t,e.shapeFlag|=n}function uo(...e){for(var t={},n=0;n<e.length;n++){var r=e[n];for(var i in r)if("class"===i)t.class!==r.class&&(t.class=R([t.class,r.class]));else if("style"===i)t.style=N([t.style,r.style]);else if(Y(i)){var o=t[i],a=r[i];o!==a&&(t[i]=o?[].concat(o,a):a)}else""!==i&&(t[i]=r[i])}return t}function ho(e){return e.some((e=>!Gi(e)||e.type!==ji&&!(e.type===Bi&&!ho(e.children))))?e:null}var po=e=>e?Eo(e)?Lo(e)||e.proxy:po(e.parent):null,fo=X(Object.create(null),{$:e=>e,$el:e=>e.vnode.el,$data:e=>e.data,$props:e=>Ft(e.props),$attrs:e=>Ft(e.attrs),$slots:e=>Ft(e.slots),$refs:e=>Ft(e.refs),$parent:e=>po(e.parent),$root:e=>po(e.root),$emit:e=>e.emit,$options:e=>Rr(e),$forceUpdate:e=>()=>da(e.update),$nextTick:e=>ua.bind(e.proxy),$watch:e=>Sa.bind(e)}),go={get({_:e},t){var n,{ctx:r,setupState:i,data:o,props:a,accessCache:s,type:c,appContext:l}=e;if("__isVue"===t)return!0;if(i!==U&&i.__isScriptSetup&&K(i,t))return i[t];if("$"!==t[0]){var u=s[t];if(void 0!==u)switch(u){case 0:return i[t];case 1:return o[t];case 3:return r[t];case 2:return a[t]}else{if(i!==U&&K(i,t))return s[t]=0,i[t];if(o!==U&&K(o,t))return s[t]=1,o[t];if((n=e.propsOptions[0])&&K(n,t))return s[t]=2,a[t];if(r!==U&&K(r,t))return s[t]=3,r[t];Nr&&(s[t]=4)}}var d,h,p=fo[t];return p?("$attrs"===t&&(He(e,"get",t),Ln()),p(e)):(d=c.__cssModules)&&(d=d[t])?d:r!==U&&K(r,t)?(s[t]=3,r[t]):(h=l.config.globalProperties,K(h,t)?h[t]:void(!On||re(t)&&0===t.indexOf("__v")||(o===U||"$"!==t[0]&&"_"!==t[0]||!K(o,t)?e===On&&zo("Property ".concat(JSON.stringify(t)," was accessed during render ")+"but is not defined on instance."):zo("Property ".concat(JSON.stringify(t)," must be accessed via $data because it starts with a reserved ")+'character ("$" or "_") and is not proxied on the render context.'))))},set({_:e},t,n){var{data:r,setupState:i,ctx:o}=e;if(i!==U&&K(i,t))i[t]=n;else if(r!==U&&K(r,t))r[t]=n;else if(K(e.props,t))return zo('Attempting to mutate prop "'.concat(t,'". Props are readonly.'),e),!1;return"$"===t[0]&&t.slice(1)in e?(zo('Attempting to mutate public property "'.concat(t,'". ')+"Properties starting with $ are reserved and readonly.",e),!1):(t in e.appContext.config.globalProperties?Object.defineProperty(o,t,{enumerable:!0,configurable:!0,value:n}):o[t]=n,!0)},has({_:{data:e,setupState:t,accessCache:n,ctx:r,appContext:i,propsOptions:o}},a){var s;return void 0!==n[a]||e!==U&&K(e,a)||t!==U&&K(t,a)||(s=o[0])&&K(s,a)||K(r,a)||K(fo,a)||K(i.config.globalProperties,a)},ownKeys:e=>(zo("Avoid app logic that relies on enumerating keys on a component instance. The keys will be empty in production mode to avoid performance overhead."),Reflect.ownKeys(e))},mo=X({},go,{get(e,t){if(t!==Symbol.unscopables)return go.get(e,t,e)},has(e,t){var n="_"!==t[0]&&!$(t);return!n&&go.has(e,t)&&zo("Property ".concat(JSON.stringify(t)," should not start with _ which is a reserved prefix for Vue internals.")),n}});var vo=ui(),yo=0;function _o(e,t,n){var r=e.type,i=(t?t.appContext:e.appContext)||vo,o={uid:yo++,vnode:e,type:r,parent:t,appContext:i,root:null,next:null,subTree:null,update:null,scope:new Ie(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:t?t.provides:Object.create(i.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Hr(r,i),emitsOptions:Tn(r,i),emit:null,emitted:null,propsDefaults:U,inheritAttrs:r.inheritAttrs,ctx:U,data:U,props:U,attrs:U,slots:U,refs:U,setupState:U,setupContext:null,suspense:n,suspenseId:n?n.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return o.ctx=function(e){var t={};return Object.defineProperty(t,"_",{configurable:!0,enumerable:!1,get:()=>e}),Object.keys(fo).forEach((n=>{Object.defineProperty(t,n,{configurable:!0,enumerable:!1,get:()=>fo[n](e),set:W})})),t}(o),o.root=t?t.root:o,o.emit=In.bind(null,o),e.ce&&e.ce(o),o}var bo=null,wo=()=>bo||On,ko=e=>{bo=e,e.scope.on()},xo=()=>{bo&&bo.scope.off(),bo=null},So=O("slot,component");function Co(e,t){var n=t.isNativeTag||H;(So(e)||n(e))&&zo("Do not use built-in or reserved HTML elements as component id: "+e)}function Eo(e){return 4&e.vnode.shapeFlag}var Io,To,Ao=!1;function Oo(e,t=!1){Ao=t;var{props:n,children:r}=e.vnode,i=Eo(e);!function(e,t,n,r=!1){var i={},o={};for(var a in ke(o,Ki,1),e.propsDefaults=Object.create(null),zr(e,t,i,o),e.propsOptions[0])a in i||(i[a]=void 0);Gr(t||{},i,e),n?e.props=r?i:Dt(i):e.type.props?e.props=i:e.props=o,e.attrs=o}(e,n,i,t),((e,t)=>{if(32&e.vnode.shapeFlag){var n=t._;n?(e.slots=Ht(t),ke(t,"_",n)):oi(t,e.slots={})}else e.slots={},t&&ai(e,t);ke(e.slots,Ki,1)})(e,r);var o=i?function(e,t){var n=e.type;n.name&&Co(n.name,e.appContext.config);if(n.components)for(var r=Object.keys(n.components),i=0;i<r.length;i++)Co(r[i],e.appContext.config);if(n.directives)for(var o=Object.keys(n.directives),a=0;a<o.length;a++)ci(o[a]);n.compilerOptions&&No()&&zo('"compilerOptions" is only supported when using a build of Vue that includes the runtime compiler. Since you are using a runtime-only build, the options should be passed via your build tool config instead.');e.accessCache=Object.create(null),e.proxy=qt(new Proxy(e.ctx,go)),function(e){var{ctx:t,propsOptions:[n]}=e;n&&Object.keys(n).forEach((n=>{Object.defineProperty(t,n,{enumerable:!0,configurable:!0,get:()=>e.props[n],set:W})}))}(e);var{setup:s}=n;if(s){var c=e.setupContext=s.length>1?Mo(e):null;ko(e),ze();var l=Yo(s,e,0,[Ft(e.props),c]);if(We(),xo(),ae(l)){if(l.then(xo,xo),t)return l.then((n=>{$o(e,n,t)})).catch((t=>{Xo(t,e,0)}));e.asyncDep=l}else $o(e,l,t)}else Po(e,t)}(e,t):void 0;return Ao=!1,o}function $o(e,t,n){ne(t)?e.type.__ssrInlineRender?e.ssrRender=t:e.render=t:oe(t)?(Gi(t)&&zo("setup() should not return VNodes directly - return a render function instead."),e.devtoolsRawSetupState=t,e.setupState=rn(t),function(e){var{ctx:t,setupState:n}=e;Object.keys(Ht(n)).forEach((e=>{if(!n.__isScriptSetup){if("$"===e[0]||"_"===e[0])return void zo("setup() return property ".concat(JSON.stringify(e),' should not start with "$" or "_" ')+"which are reserved prefixes for Vue internals.");Object.defineProperty(t,e,{enumerable:!0,configurable:!0,get:()=>n[e],set:W})}}))}(e)):void 0!==t&&zo("setup() should return an object. Received: ".concat(null===t?"null":typeof t)),Po(e,n)}var No=()=>!Io;function Po(e,t,n){var r=e.type;if(!e.render){if(!t&&Io&&!r.render){var i=r.template;if(i){_i(e,"compile");var{isCustomElement:o,compilerOptions:a}=e.appContext.config,{delimiters:s,compilerOptions:c}=r,l=X(X({isCustomElement:o,delimiters:s},a),c);r.render=Io(i,l),bi(e,"compile")}}e.render=r.render||W,To&&To(e)}ko(e),ze(),Pr(e),We(),xo(),r.render||e.render!==W||t||(!Io&&r.template?zo('Component provided template option but runtime compilation is not supported in this build of Vue. Configure your bundler to alias "vue" to "vue/dist/vue.esm-bundler.js".'):zo("Component is missing template or render function."))}function Mo(e){var t;return Object.freeze({get attrs(){return t||(t=function(e){return new Proxy(e.attrs,{get:(t,n)=>(Ln(),He(e,"get","$attrs"),t[n]),set:()=>(zo("setupContext.attrs is readonly."),!1),deleteProperty:()=>(zo("setupContext.attrs is readonly."),!1)})}(e))},get slots(){return Ft(e.slots)},get emit(){return(t,...n)=>e.emit(t,...n)},expose:t=>{e.exposed&&zo("expose() should be called only once per setup()."),e.exposed=t||{}}})}function Lo(e){if(e.exposed)return e.exposeProxy||(e.exposeProxy=new Proxy(rn(qt(e.exposed)),{get:(t,n)=>n in t?t[n]:n in fo?fo[n](e):void 0}))}var Ro=/(?:^|[-_])(\w)/g;function Bo(e){return ne(e)&&e.displayName||e.name}function Do(e,t,n=!1){var r=Bo(t);if(!r&&t.__file){var i=t.__file.match(/([^/\\]+)\.\w+$/);i&&(r=i[1])}if(!r&&e&&e.parent){var o=e=>{for(var n in e)if(e[n]===t)return n};r=o(e.components||e.parent.type.components)||o(e.appContext.components)}return r?r.replace(Ro,(e=>e.toUpperCase())).replace(/[-_]/g,""):n?"App":"Anonymous"}function jo(e){return ne(e)&&"__vccOpts"in e}var Fo=[];function Vo(e){Fo.push(e)}function Uo(){Fo.pop()}function zo(e,...t){ze();var n=Fo.length?Fo[Fo.length-1].component:null,r=n&&n.appContext.config.warnHandler,i=function(){var e=Fo[Fo.length-1];if(!e)return[];var t=[];for(;e;){var n=t[0];n&&n.vnode===e?n.recurseCount++:t.push({vnode:e,recurseCount:0});var r=e.component&&e.component.parent;e=r&&r.vnode}return t}();if(r)Yo(r,n,11,[e+t.join(""),n&&n.proxy,i.map((({vnode:e})=>"at <".concat(Do(n,e.type),">"))).join("\n"),i]);else{var o=["[Vue warn]: ".concat(e),...t];i.length&&o.push("\n",...function(e){var t=[];return e.forEach(((e,n)=>{t.push(...0===n?[]:["\n"],...function({vnode:e,recurseCount:t}){var n=t>0?"... (".concat(t," recursive calls)"):"",r=!!e.component&&null==e.component.parent,i=" at <".concat(Do(e.component,e.type,r)),o=">"+n;return e.props?[i,...Wo(e.props),o]:[i+o]}(e))})),t}(i)),console.warn(...o)}We()}function Wo(e){var t=[],n=Object.keys(e);return n.slice(0,3).forEach((n=>{t.push(...Ho(n,e[n]))})),n.length>3&&t.push(" ..."),t}function Ho(e,t,n){return re(t)?(t=JSON.stringify(t),n?t:["".concat(e,"=").concat(t)]):"number"==typeof t||"boolean"==typeof t||null==t?n?t:["".concat(e,"=").concat(t)]:Zt(t)?(t=Ho(e,Ht(t.value),!0),n?t:["".concat(e,"=Ref<"),t,">"]):ne(t)?["".concat(e,"=fn").concat(t.name?"<".concat(t.name,">"):"")]:(t=Ht(t),n?t:["".concat(e,"="),t])}var qo={sp:"serverPrefetch hook",bc:"beforeCreate hook",c:"created hook",bm:"beforeMount hook",m:"mounted hook",bu:"beforeUpdate hook",u:"updated",bum:"beforeUnmount hook",um:"unmounted hook",a:"activated hook",da:"deactivated hook",ec:"errorCaptured hook",rtc:"renderTracked hook",rtg:"renderTriggered hook",0:"setup function",1:"render function",2:"watcher getter",3:"watcher callback",4:"watcher cleanup function",5:"native event handler",6:"component event handler",7:"vnode hook",8:"directive hook",9:"transition hook",10:"app errorHandler",11:"app warnHandler",12:"ref function",13:"async component loader",14:"scheduler flush. This is likely a Vue internals bug. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next"};function Yo(e,t,n,r){var i;try{i=r?e(...r):e()}catch(e){Xo(e,t,n)}return i}function Jo(e,t,n,r){if(ne(e)){var i=Yo(e,t,n,r);return i&&ae(i)&&i.catch((e=>{Xo(e,t,n)})),i}for(var o=[],a=0;a<e.length;a++)o.push(Jo(e[a],t,n,r));return o}function Xo(e,t,n,r=!0){var i=t?t.vnode:null;if(t){for(var o=t.parent,a=t.proxy,s=qo[n];o;){var c=o.ec;if(c)for(var l=0;l<c.length;l++)if(!1===c[l](e,a,s))return;o=o.parent}var u=t.appContext.config.errorHandler;if(u)return void Yo(u,null,10,[e,a,s])}!function(e,t,n,r=!0){var i=qo[t];n&&Vo(n);zo("Unhandled error".concat(i?" during execution of ".concat(i):"")),n&&Uo();console.error(e)}(e,n,i,r)}var Go=!1,Zo=!1,Ko=[],Qo=0,ea=[],ta=null,na=0,ra=[],ia=null,oa=0,aa={then(e){setTimeout((()=>e()),0)}},sa="iOS"===e.platform?aa:Promise.resolve(),ca=null,la=null;function ua(e){var t=ca||sa;return e?t.then(this?e.bind(this):e):t}function da(e){Ko.length&&Ko.includes(e,Go&&e.allowRecurse?Qo+1:Qo)||e===la||(null==e.id?Ko.push(e):Ko.splice(function(e){for(var t=Qo+1,n=Ko.length;t<n;){var r=t+n>>>1;va(Ko[r])<e?t=r+1:n=r}return t}(e.id),0,e),ha())}function ha(){Go||Zo||(Zo=!0,ca=sa.then(ya))}function pa(e,t,n,r){Q(e)?n.push(...e):t&&t.includes(e,e.allowRecurse?r+1:r)||n.push(e),ha()}function fa(e){pa(e,ia,ra,oa)}function ga(e,t=null){if(ea.length){for(la=t,ta=[...new Set(ea)],ea.length=0,e=e||new Map,na=0;na<ta.length;na++)_a(e,ta[na])||ta[na]();ta=null,na=0,la=null,ga(e,t)}}function ma(e){if(ra.length){var t=[...new Set(ra)];if(ra.length=0,ia)return void ia.push(...t);for(ia=t,e=e||new Map,ia.sort(((e,t)=>va(e)-va(t))),oa=0;oa<ia.length;oa++)_a(e,ia[oa])||ia[oa]();ia=null,oa=0}}var va=e=>null==e.id?1/0:e.id;function ya(e){Zo=!1,Go=!0,ga(e=e||new Map),Ko.sort(((e,t)=>va(e)-va(t)));var t=t=>_a(e,t);try{for(Qo=0;Qo<Ko.length;Qo++){var n=Ko[Qo];if(n&&!1!==n.active){if(t(n))continue;Yo(n,null,14)}}}finally{Qo=0,Ko.length=0,ma(e),Go=!1,ca=null,(Ko.length||ea.length||ra.length)&&ya(e)}}function _a(e,t){if(e.has(t)){var n=e.get(t);if(n>100){var r=t.ownerInstance,i=r&&Bo(r.type);return zo("Maximum recursive updates exceeded".concat(i?" in component <".concat(i,">"):"",". ")+"This means you have a reactive effect that is mutating its own dependencies and thus recursively triggering itself. Possible sources include component template, render function, updated hook or watcher source function."),!0}e.set(t,n+1)}else e.set(t,1)}function ba(e,t){return xa(e,null,t)}var wa={};function ka(e,t,n){return ne(t)||zo("`watch(fn, options?)` signature has been moved to a separate API. Use `watchEffect(fn, options?)` instead. `watch` now only supports `watch(source, cb, options?) signature."),xa(e,t,n)}function xa(e,t,{immediate:n,deep:r,flush:i,onTrack:o,onTrigger:a}=U){t||(void 0!==n&&zo('watch() "immediate" option is only respected when using the watch(source, callback, options?) signature.'),void 0!==r&&zo('watch() "deep" option is only respected when using the watch(source, callback, options?) signature.'));var s,c,l=e=>{zo("Invalid watch source: ",e,"A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types.")},u=bo,d=!1,h=!1;if(Zt(e)?(s=()=>e.value,d=!!e._shallow):Ut(e)?(s=()=>e,r=!0):Q(e)?(h=!0,d=e.some(Ut),s=()=>e.map((e=>Zt(e)?e.value:Ut(e)?Ea(e):ne(e)?Yo(e,u,2):void l(e)))):ne(e)?s=t?()=>Yo(e,u,2):()=>{if(!u||!u.isUnmounted)return c&&c(),Jo(e,u,3,[f])}:(s=W,l(e)),t&&r){var p=s;s=()=>Ea(p())}var f=e=>{c=v.onStop=()=>{Yo(e,u,4)}};if(Ao)return f=W,t?n&&Jo(t,u,3,[s(),h?[]:void 0,f]):s(),W;var g=h?[]:wa,m=()=>{if(v.active)if(t){var e=v.run();(r||d||(h?e.some(((e,t)=>be(e,g[t]))):be(e,g)))&&(c&&c(),Jo(t,u,3,[e,g===wa?void 0:g,f]),g=e)}else v.run()};m.allowRecurse=!!t;var v=new je(s,"sync"===i?m:"post"===i?()=>ki(m,u&&u.suspense):()=>{!u||u.isMounted?function(e){pa(e,ta,ea,na)}(m):m()});return v.onTrack=o,v.onTrigger=a,t?n?m():g=v.run():"post"===i?ki(v.run.bind(v),u&&u.suspense):v.run(),()=>{v.stop(),u&&u.scope&&G(u.scope.effects,v)}}function Sa(e,t,n){var r,i=this.proxy,o=re(e)?e.includes(".")?Ca(i,e):()=>i[e]:e.bind(i,i);ne(t)?r=t:(r=t.handler,n=t);var a=bo;ko(this);var s=xa(o,r.bind(i),n);return a?ko(a):xo(),s}function Ca(e,t){var n=t.split(".");return()=>{for(var t=e,r=0;r<n.length&&t;r++)t=t[n[r]];return t}}function Ea(e,t){if(!oe(e)||e.__v_skip)return e;if((t=t||new Set).has(e))return e;if(t.add(e),Zt(e))Ea(e.value,t);else if(Q(e))for(var n=0;n<e.length;n++)Ea(e[n],t);else if(te(e)||ee(e))e.forEach((e=>{Ea(e,t)}));else if(ue(e))for(var r in e)Ea(e[r],t);return e}var Ia=e=>zo("".concat(e,"() is a compiler-hint helper that is only usable inside ")+"<script setup> of a single file component. Its arguments should be compiled away and passing it at runtime has no effect.");function Ta(){var e=wo();return e||zo("useContext() called without active instance."),e.setupContext||(e.setupContext=Mo(e))}function Aa(e,t,n){var r=arguments.length;return 2===r?oe(t)&&!Q(t)?Gi(t)?no(e,null,[t]):no(e,t):no(e,null,t):(r>3?n=Array.prototype.slice.call(arguments,2):3===r&&Gi(n)&&(n=[n]),no(e,t,n))}var Oa=Symbol("ssrContext");function $a(e,t){var n=e.memo;if(n.length!=t.length)return!1;for(var r=0;r<n.length;r++)if(n[r]!==t[r])return!1;return qi>0&&Ui&&Ui.push(e),!0}var Na,Pa="3.2.19",Ma={createComponentInstance:_o,setupComponent:Oo,renderComponentRoot:Rn,setCurrentRenderingInstance:Nn,isVNode:Gi,normalizeVNode:so};function La(e,t){return"input"===e?new E(e,t):"textarea"===e?new I(e,t):new C(e,t)}function Ra(e,t){return new T(e,t)}function Ba(e,t){return new S(e,t)}var Da={insert:(e,t,n)=>{t.insertBefore(e,n||null)},remove:e=>{var t=e.parentNode;t&&t.removeChild(e)},createElement:(e,t)=>La(e,t),createText:(e,t)=>Ra(e,t),createComment:(e,t)=>Ba(e,t),setText:(e,t)=>{e.nodeValue=t},setElementText:(e,t)=>{e.textContent=t},parentNode:e=>e.parentNode,nextSibling:e=>e.nextSibling,setScopeId(e,t){e.setAttribute(t,"")},cloneNode(e){var t=e.cloneNode(!0);return"_value"in e&&(t._value=e._value),t},insertStaticContent(e,t,n){var r=Na||(Na=La("div"));r.innerHTML=e;for(var i=r.firstChild,o=i,a=o;o;)a=o,Da.insert(o,t,n),o=r.firstChild;return[i,a]}};function ja(e,t,n,r){e.addEventListener(t,n,r)}function Fa(e,t,n,r,i=null){var o=e._vei||(e._vei={}),a=o[t];if(r&&a)a.value=r;else{var[s,c]=function(e){var t;if(Va.test(e)){var n;for(t={};n=e.match(Va);)e=e.slice(0,e.length-n[0].length),t[n[0].toLowerCase()]=!0}return[ve(e.slice(2)),t]}(t);if(r)ja(e,s,o[t]=function(e,t){var n=e=>{Jo(n.value,t,5,[e])};n.value=e;var r=new Set;Q(n.value)?n.value.forEach((e=>{e.modifiers&&e.modifiers.forEach((e=>{r.add(e)}))})):(n.value.modifiers&&n.value.modifiers.forEach((e=>{r.add(e)})),function(e,t){if(!t)return;var{$wxsModules:n}=t;if(!n)return;var r=e.value.toString();if(!n.find((e=>r.indexOf("."+e+".")>-1)))return;e.wxsEvent=e.value()}(n,t));return n.modifiers=[...r],n}(r,i),c);else a&&(!function(e,t,n,r){e.removeEventListener(t,n,r)}(e,s,a,c),o[t]=void 0)}}var Va=/(?:Once|Passive|Capture)$/;var Ua={AD:["data"],"AD-DRAW":["data"],"LIVE-PLAYER":["picture-in-picture-mode"],MAP:["markers","polyline","circles","controls","include-points","polygons"],PICKER:["range","value"],"PICKER-VIEW":["value"],"RICH-TEXT":["nodes"],VIDEO:["danmu-list","header"],"WEB-VIEW":["webview-styles"]},za=["animation"];function Wa(e,t){if(128&e.shapeFlag){var n=e.suspense;e=n.activeBranch,n.pendingBranch&&!n.isHydrating&&n.effects.push((()=>{Wa(n.activeBranch,t)}))}for(;e.component;)e=e.component.subTree;if(1&e.shapeFlag&&e.el){var r=e.el.style;for(var i in t)r.setProperty("--".concat(i),t[i])}else e.type===Bi&&e.children.forEach((e=>Wa(e,t)))}var Ha="transition",qa="animation",Ya=(e,{slots:t})=>Aa(tr,Ka(e),t);Ya.displayName="Transition";var Ja={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String},Xa=Ya.props=X({},tr.props,Ja),Ga=(e,t=[])=>{Q(e)?e.forEach((e=>e(...t))):e&&e(...t)},Za=e=>!!e&&(Q(e)?e.some((e=>e.length>1)):e.length>1);function Ka(e){var t={};for(var n in e)n in Ja||(t[n]=e[n]);if(!1===e.css)return t;var{name:r="v",type:i,duration:o,enterFromClass:a="".concat(r,"-enter-from"),enterActiveClass:s="".concat(r,"-enter-active"),enterToClass:c="".concat(r,"-enter-to"),appearFromClass:l=a,appearActiveClass:u=s,appearToClass:d=c,leaveFromClass:h="".concat(r,"-leave-from"),leaveActiveClass:p="".concat(r,"-leave-active"),leaveToClass:f="".concat(r,"-leave-to")}=e,g=function(e){if(null==e)return null;if(oe(e))return[Qa(e.enter),Qa(e.leave)];var t=Qa(e);return[t,t]}(o),m=g&&g[0],v=g&&g[1],{onBeforeEnter:y,onEnter:_,onEnterCancelled:b,onLeave:w,onLeaveCancelled:k,onBeforeAppear:x=y,onAppear:S=_,onAppearCancelled:C=b}=t,E=(e,t,n)=>{ts(e,t?d:c),ts(e,t?u:s),n&&n()},I=(e,t)=>{ts(e,f),ts(e,p),t&&t()},T=e=>(t,n)=>{var r=e?S:_,o=()=>E(t,e,n);Ga(r,[t,o]),ns((()=>{ts(t,e?l:a),es(t,e?d:c),Za(r)||is(t,i,m,o)}))};return X(t,{onBeforeEnter(e){Ga(y,[e]),es(e,a),es(e,s)},onBeforeAppear(e){Ga(x,[e]),es(e,l),es(e,u)},onEnter:T(!1),onAppear:T(!0),onLeave(e,t){var n=()=>I(e,t);es(e,h),cs(),es(e,p),ns((()=>{ts(e,h),es(e,f),Za(w)||is(e,i,v,n)})),Ga(w,[e,n])},onEnterCancelled(e){E(e,!1),Ga(b,[e])},onAppearCancelled(e){E(e,!0),Ga(C,[e])},onLeaveCancelled(e){I(e),Ga(k,[e])}})}function Qa(e){var t=xe(e);return function(e){"number"!=typeof e?zo("<transition> explicit duration is not a valid number - "+"got ".concat(JSON.stringify(e),".")):isNaN(e)&&zo("<transition> explicit duration is NaN - the duration expression might be incorrect.")}(t),t}function es(e,t){t.split(/\s+/).forEach((t=>t&&e.classList.add(t))),(e._vtc||(e._vtc=new Set)).add(t)}function ts(e,t){t.split(/\s+/).forEach((t=>t&&e.classList.remove(t)));var{_vtc:n}=e;n&&(n.delete(t),n.size||(e._vtc=void 0))}function ns(e){requestAnimationFrame((()=>{requestAnimationFrame(e)}))}var rs=0;function is(e,t,n,r){var i=e._endId=++rs,o=()=>{i===e._endId&&r()};if(n)return setTimeout(o,n);var{type:a,timeout:s,propCount:c}=os(e,t);if(!a)return r();var l=a+"end",u=0,d=()=>{e.removeEventListener(l,h),o()},h=t=>{t.target===e&&++u>=c&&d()};setTimeout((()=>{u<c&&d()}),s+1),e.addEventListener(l,h)}function os(e,t){var n=window.getComputedStyle(e),r=e=>(n[e]||"").split(", "),i=r("transitionDelay"),o=r("transitionDuration"),a=as(i,o),s=r("animationDelay"),c=r("animationDuration"),l=as(s,c),u=null,d=0,h=0;return t===Ha?a>0&&(u=Ha,d=a,h=o.length):t===qa?l>0&&(u=qa,d=l,h=c.length):h=(u=(d=Math.max(a,l))>0?a>l?Ha:qa:null)?u===Ha?o.length:c.length:0,{type:u,timeout:d,propCount:h,hasTransform:u===Ha&&/\b(transform|all)(,|$)/.test(n.transitionProperty)}}function as(e,t){for(;e.length<t.length;)e=e.concat(e);return Math.max(...t.map(((t,n)=>ss(t)+ss(e[n]))))}function ss(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function cs(){return document.body.offsetHeight}var ls=new WeakMap,us=new WeakMap,ds={name:"TransitionGroup",props:X({},Xa,{tag:String,moveClass:String}),setup(e,{slots:t}){var n,r,i=wo(),o=Qn();return Cr((()=>{if(n.length){var t=e.moveClass||"".concat(e.name||"v","-move");if(function(e,t,n){var r=e.cloneNode();e._vtc&&e._vtc.forEach((e=>{e.split(/\s+/).forEach((e=>e&&r.classList.remove(e)))}));n.split(/\s+/).forEach((e=>e&&r.classList.add(e))),r.style.display="none";var i=1===t.nodeType?t:t.parentNode;i.appendChild(r);var{hasTransform:o}=os(r);return i.removeChild(r),o}(n[0].el,i.vnode.el,t)){n.forEach(hs),n.forEach(ps);var r=n.filter(fs);cs(),r.forEach((e=>{var n=e.el,r=n.style;es(n,t),r.transform=r.webkitTransform=r.transitionDuration="";var i=n._moveCb=e=>{e&&e.target!==n||e&&!/transform$/.test(e.propertyName)||(n.removeEventListener("transitionend",i),n._moveCb=null,ts(n,t))};n.addEventListener("transitionend",i)}))}}})),()=>{var a=Ht(e),s=Ka(a),c=a.tag||Bi;n=r,r=t.default?sr(t.default()):[];for(var l=0;l<r.length;l++){var u=r[l];null!=u.key?ar(u,rr(u,s,o,i)):zo("<TransitionGroup> children must be keyed.")}if(n)for(var d=0;d<n.length;d++){var h=n[d];ar(h,rr(h,s,o,i)),ls.set(h,h.el.getBoundingClientRect())}return no(c,null,r)}}};function hs(e){var t=e.el;t._moveCb&&t._moveCb(),t._enterCb&&t._enterCb()}function ps(e){us.set(e,e.el.getBoundingClientRect())}function fs(e){var t=ls.get(e),n=us.get(e),r=t.left-n.left,i=t.top-n.top;if(r||i){var o=e.el.style;return o.transform=o.webkitTransform="translate(".concat(r,"px,").concat(i,"px)"),o.transitionDuration="0s",e}}var gs=e=>{var t=e.props["onUpdate:modelValue"];return Q(t)?e=>we(t,e):t},ms={created(e,{value:t,modifiers:{trim:n,number:r}},i){e.value=null==t?"":t,e._assign=gs(i),ja(e,"input",(t=>{var i=t.detail.value,o=e.pageNode;e.pageNode=null,e.value=i,e.pageNode=o,n?i=i.trim():r&&(i=xe(i)),e._assign(i)}))},beforeUpdate(e,{value:t},n){e._assign=gs(n);var r=null==t?"":t;e.value!==r&&(e.value=r)}},vs=["ctrl","shift","alt","meta"],ys={stop:e=>e.stopPropagation(),prevent:e=>e.preventDefault(),self:e=>e.target!==e.currentTarget,ctrl:e=>!e.ctrlKey,shift:e=>!e.shiftKey,alt:e=>!e.altKey,meta:e=>!e.metaKey,left:e=>"button"in e&&0!==e.button,middle:e=>"button"in e&&1!==e.button,right:e=>"button"in e&&2!==e.button,exact:(e,t)=>vs.some((n=>e["".concat(n,"Key")]&&!t.includes(n)))},_s={esc:"escape",space:" ",up:"arrow-up",left:"arrow-left",right:"arrow-right",down:"arrow-down",delete:"backspace"},bs={beforeMount(e,{value:t}){ws(e,t)},updated(e,{value:t,oldValue:n}){!t!=!n&&ws(e,t)},beforeUnmount(e,{value:t}){ws(e,t)}};function ws(e,t){e.setAttribute(".vShow",!!t)}var ks,xs=X({patchProp:(e,t,n,r,i=!1,o,a,s,c)=>{switch(t){case"class":!function(e,t){null==t&&(t=""),e.setAttribute("class",t)}(e,r);break;case"style":!function(e,t,n){if(n)if(re(n))t!==n&&e.setAttribute("style",n);else{var r={};if(t&&!re(t)){for(var i in t)null==n[i]&&(r[i]="");for(var o in n){var a=n[o];a!==t[o]&&(r[o]=a)}}else for(var s in n)r[s]=n[s];Object.keys(r).length&&e.setAttribute("style",r)}else e.removeAttribute("style")}(e,n,r);break;default:if(Y(t))J(t)||Fa(e,t,0,r,a);else{if(oe(r)){var l=n===r;if(r="json://"+JSON.stringify(r),l&&e.getAttribute(t)===r)return}else if(n===r)return;!function(e,t,n){null==n?e.removeAttribute(t):e.setAttribute(t,n)}(e,t,r)}}},forcePatchProp:(e,t)=>{if(za.indexOf(t)>-1)return!0;var n=Ua[e.nodeName];return!!(n&&n.indexOf(t)>-1)}},Da);function Ss(){return ks||(ks=xi(xs))}var Cs=(...e)=>{var t=Ss().createApp(...e);!function(e){Object.defineProperty(e.config,"isNativeTag",{value:e=>j(e)||F(e),writable:!1})}(t);var{mount:n}=t;return t.mount=e=>(re(e)&&(e=Ba(e)),e&&n(e,!1,!1)),t},Es=Cs;var Is=Object.freeze({__proto__:null,BaseTransition:tr,Comment:ji,EffectScope:Ie,Fragment:Bi,KeepAlive:hr,ReactiveEffect:je,Static:Fi,Suspense:Wn,Teleport:Ni,Text:Di,Transition:Ya,TransitionGroup:ds,callWithAsyncErrorHandling:Jo,callWithErrorHandling:Yo,camelize:ge,capitalize:ye,cloneVNode:io,compatUtils:null,computed:ln,createApp:Cs,createBlock:Xi,createComment:Ba,createCommentVNode:function(e="",t=!1){return t?(zi(),Xi(ji,null,e)):no(ji,null,e)},createElement:La,createElementBlock:function(e,t,n,r,i,o){return Ji(to(e,t,n,r,i,o,!0))},createElementVNode:to,createHydrationRenderer:function(e){return Si(e,yi)},createRenderer:xi,createSSRApp:Es,createSlots:function(e,t){for(var n=0;n<t.length;n++){var r=t[n];if(Q(r))for(var i=0;i<r.length;i++)e[r[i].name]=r[i].fn;else r&&(e[r.name]=r.fn)}return e},createStaticVNode:function(e,t){var n=no(Fi,null,e);return n.staticCount=t,n},createTextNode:Ra,createTextVNode:ao,createVNode:no,createVueApp:Cs,customRef:function(e){return new on(e)},defineAsyncComponent:function(e){ne(e)&&(e={loader:e});var t,{loader:n,loadingComponent:r,errorComponent:i,delay:o=200,timeout:a,suspensible:s=!0,onError:c}=e,l=null,u=0,d=()=>{var e;return l||(e=l=n().catch((e=>{if(e=e instanceof Error?e:new Error(String(e)),c)return new Promise(((t,n)=>{c(e,(()=>t((u++,l=null,d()))),(()=>n(e)),u+1)}));throw e})).then((n=>{if(e!==l&&l)return l;if(n||zo("Async component loader resolved to undefined. If you are using retry(), make sure to return its return value."),n&&(n.__esModule||"Module"===n[Symbol.toStringTag])&&(n=n.default),n&&!oe(n)&&!ne(n))throw new Error("Invalid async component load result: ".concat(n));return t=n,n})))};return cr({name:"AsyncComponentWrapper",__asyncLoader:d,get __asyncResolved(){return t},setup(){var e=bo;if(t)return()=>ur(t,e);var n=t=>{l=null,Xo(t,e,13,!i)};if(s&&e.suspense||Ao)return d().then((t=>()=>ur(t,e))).catch((e=>(n(e),()=>i?no(i,{error:e}):null)));var c=Kt(!1),u=Kt(),h=Kt(!!o);return o&&setTimeout((()=>{h.value=!1}),o),null!=a&&setTimeout((()=>{if(!c.value&&!u.value){var e=new Error("Async component timed out after ".concat(a,"ms."));n(e),u.value=e}}),a),d().then((()=>{c.value=!0,e.parent&&dr(e.parent.vnode)&&da(e.parent.update)})).catch((e=>{n(e),u.value=e})),()=>c.value&&t?ur(t,e):u.value&&i?no(i,{error:u.value}):r&&!h.value?no(r):void 0}})},defineComponent:cr,defineEmits:function(){return Ia("defineEmits"),null},defineExpose:function(e){Ia("defineExpose")},defineProps:function(){return Ia("defineProps"),null},get devtools(){return hn},effect:function(e,t){e.effect&&(e=e.effect.fn);var n=new je(e);t&&(X(n,t),t.scope&&Te(n,t.scope)),t&&t.lazy||n.run();var r=n.run.bind(n);return r.effect=n,r},effectScope:function(e){return new Ie(e)},getCurrentInstance:wo,getCurrentScope:function(){return D},getTransitionRawChildren:sr,guardReactiveProps:ro,h:Aa,handleError:Xo,initCustomFormatter:function(){if("undefined"!=typeof window){var e={style:"color:#3ba776"},t={style:"color:#0b1bc9"},n={style:"color:#b62e24"},r={style:"color:#9d288c"},i={header:t=>oe(t)?t.__isVue?["div",e,"VueInstance"]:Zt(t)?["div",{},["span",e,u(t)],"<",s(t.value),">"]:Ut(t)?["div",{},["span",e,"Reactive"],"<",s(t),">".concat(zt(t)?" (readonly)":"")]:zt(t)?["div",{},["span",e,"Readonly"],"<",s(t),">"]:null:null,hasBody:e=>e&&e.__isVue,body(e){if(e&&e.__isVue)return["div",{},...o(e.$)]}};window.devtoolsFormatters?window.devtoolsFormatters.push(i):window.devtoolsFormatters=[i]}function o(e){var t=[];e.type.props&&e.props&&t.push(a("props",Ht(e.props))),e.setupState!==U&&t.push(a("setup",e.setupState)),e.data!==U&&t.push(a("data",Ht(e.data)));var n=c(e,"computed");n&&t.push(a("computed",n));var i=c(e,"inject");return i&&t.push(a("injected",i)),t.push(["div",{},["span",{style:r.style+";opacity:0.66"},"$ (internal): "],["object",{object:e}]]),t}function a(e,t){return t=X({},t),Object.keys(t).length?["div",{style:"line-height:1.25em;margin-bottom:0.6em"},["div",{style:"color:#476582"},e],["div",{style:"padding-left:1.25em"},...Object.keys(t).map((e=>["div",{},["span",r,e+": "],s(t[e],!1)]))]]:["span",{}]}function s(e,i=!0){return"number"==typeof e?["span",t,e]:"string"==typeof e?["span",n,JSON.stringify(e)]:"boolean"==typeof e?["span",r,e]:oe(e)?["object",{object:i?Ht(e):e}]:["span",n,String(e)]}function c(e,t){var n=e.type;if(!ne(n)){var r={};for(var i in e.ctx)l(n,i,t)&&(r[i]=e.ctx[i]);return r}}function l(e,t,n){var r=e[n];return!!(Q(r)&&r.includes(t)||oe(r)&&t in r)||(!(!e.extends||!l(e.extends,t,n))||(!(!e.mixins||!e.mixins.some((e=>l(e,t,n))))||void 0))}function u(e){return e._shallow?"ShallowRef":e.effect?"ComputedRef":"Ref"}},inject:Kn,injectHook:br,get isInSSRComponentSetup(){return Ao},isMemoSame:$a,isProxy:Wt,isReactive:Ut,isReadonly:zt,isRef:Zt,isRuntimeOnly:No,isVNode:Gi,markRaw:qt,mergeDefaults:function(e,t){for(var n in t){var r=e[n];r?r.default=t[n]:null===r?e[n]={default:t[n]}:zo('props default key "'.concat(n,'" has no corresponding declaration.'))}return e},mergeProps:uo,nextTick:ua,normalizeClass:R,normalizeProps:function(e){if(!e)return null;var{class:t,style:n}=e;return t&&!re(t)&&(e.class=R(t)),n&&(e.style=N(n)),e},normalizeStyle:N,onActivated:fr,onBeforeActivate:function(){},onBeforeDeactivate:function(){},onBeforeMount:kr,onBeforeUnmount:Er,onBeforeUpdate:Sr,onDeactivated:gr,onErrorCaptured:$r,onMounted:xr,onRenderTracked:Or,onRenderTriggered:Ar,onScopeDispose:function(e){D?D.cleanups.push(e):Ce("onScopeDispose() is called when there is no active effect scope to be associated with.")},onServerPrefetch:Tr,onUnmounted:Ir,onUpdated:Cr,openBlock:zi,popScopeId:function(){$n=null},provide:Zn,proxyRefs:rn,pushScopeId:function(e){$n=e},queuePostFlushCb:fa,reactive:Bt,readonly:jt,ref:Kt,registerRuntimeCompiler:function(e){Io=e,To=e=>{e.render._rc&&(e.withProxy=new Proxy(e.ctx,mo))}},render:(...e)=>{Ss().render(...e)},renderList:function(e,t,n,r){var i,o=n&&n[r];if(Q(e)||re(e)){i=new Array(e.length);for(var a=0,s=e.length;a<s;a++)i[a]=t(e[a],a,void 0,o&&o[a])}else if("number"==typeof e){if(!Number.isInteger(e))return zo("The v-for range expect an integer value but got ".concat(e,".")),[];i=new Array(e);for(var c=0;c<e;c++)i[c]=t(c+1,c,void 0,o&&o[c])}else if(oe(e))if(e[Symbol.iterator])i=Array.from(e,((e,n)=>t(e,n,void 0,o&&o[n])));else{var l=Object.keys(e);i=new Array(l.length);for(var u=0,d=l.length;u<d;u++){var h=l[u];i[u]=t(e[h],h,u,o&&o[u])}}else i=[];return n&&(n[r]=i),i},renderSlot:function(e,t,n={},r,i){if(On.isCE)return no("slot","default"===t?null:{name:t},r&&r());var o=e[t];o&&o.length>1&&(zo("SSR-optimized slot function detected in a non-SSR-optimized render function. You need to mark this component with $dynamic-slots in the parent template."),o=()=>[]),o&&o._c&&(o._d=!1),zi();var a=o&&ho(o(n)),s=Xi(Bi,{key:n.key||"_".concat(t)},a||(r?r():[]),a&&1===e._?64:-2);return!i&&s.scopeId&&(s.slotScopeIds=[s.scopeId+"-s"]),o&&o._c&&(o._d=!0),s},resolveComponent:function(e,t){return Li(Pi,e,!0,t)||e},resolveDirective:function(e){return Li("directives",e)},resolveDynamicComponent:function(e){return re(e)?Li(Pi,e,!1)||e:e||Mi},resolveFilter:null,resolveTransitionHooks:rr,setBlockTracking:Yi,setDevtoolsHook:_n,setTransitionHooks:ar,shallowReactive:Dt,shallowReadonly:Ft,shallowRef:function(e){return Qt(e,!0)},ssrContextKey:Oa,ssrUtils:Ma,stop:function(e){e.effect.stop()},toDisplayString:e=>null==e?"":Q(e)||oe(e)&&(e.toString===se||!ne(e.toString))?JSON.stringify(e,V,2):String(e),toHandlerKey:_e,toHandlers:function(e){var t={};if(!oe(e))return zo("v-on with no argument expects an object value."),t;for(var n in e)t[_e(n)]=e[n];return t},toRaw:Ht,toRef:sn,toRefs:function(e){Wt(e)||console.warn("toRefs() expects a reactive object but received a plain one.");var t=Q(e)?new Array(e.length):{};for(var n in e)t[n]=sn(e,n);return t},transformVNodeArgs:function(e){Hi=e},triggerRef:function(e){Gt(e,e.value)},unref:tn,useAttrs:function(){return Ta().attrs},useCssModule:function(e="$style"){var t=wo();if(!t)return zo("useCssModule must be called inside setup()"),U;var n=t.type.__cssModules;if(!n)return zo("Current instance does not have CSS modules injected."),U;var r=n[e];return r||(zo('Current instance does not have CSS module named "'.concat(e,'".')),U)},useCssVars:function(e){var t=wo();if(t){var n=()=>Wa(t.subTree,e(t.proxy));xr((()=>ba(n,{flush:"post"}))),Cr(n)}else zo("useCssVars is called without current active component instance.")},useSSRContext:()=>{var e=Kn(Oa);return e||zo("Server rendering context not provided. Make sure to only call useSSRContext() conditionally in the server build."),e},useSlots:function(){return Ta().slots},useTransitionState:Qn,vModelText:ms,vShow:bs,version:Pa,warn:zo,watch:ka,watchEffect:ba,watchPostEffect:function(e,t){return xa(e,null,Object.assign(t||{},{flush:"post"}))},watchSyncEffect:function(e,t){return xa(e,null,Object.assign(t||{},{flush:"sync"}))},withAsyncContext:function(e){var t=wo();t||zo("withAsyncContext called without active current instance. This is likely a bug.");var n=e();return xo(),ae(n)&&(n=n.catch((e=>{throw ko(t),e}))),[n,()=>ko(t)]},withCtx:Pn,withDefaults:function(e,t){return Ia("withDefaults"),null},withDirectives:function(e,t){var n=On;if(null===n)return zo("withDirectives can only be used inside render functions."),e;for(var r=n.proxy,i=e.dirs||(e.dirs=[]),o=0;o<t.length;o++){var[a,s,c,l=U]=t[o];ne(a)&&(a={mounted:a,updated:a}),a.deep&&Ea(s),i.push({dir:a,instance:r,value:s,oldValue:void 0,arg:c,modifiers:l})}return e},withKeys:(e,t)=>n=>{if("key"in n){var r=ve(n.key);return t.some((e=>e===r||_s[e]===r))?e(n):void 0}},withMemo:function(e,t,n,r){var i=n[r];if(i&&$a(i,e))return i;var o=t();return o.memo=e.slice(),n[r]=o},withModifiers:(e,t)=>{var n=(n,...r)=>{for(var i=0;i<t.length;i++){var o=ys[t[i]];if(o&&o(n,t))return}return e(n,...r)};return n.modifiers=t,n},withScopeId:e=>Pn});e.Vue=Is}function init$1(e){if(!e.__uniConfig)return;const t=e.weex;global.WXEnvironment.deviceWidth=t.config.env.deviceWidth;const n="weex"===e.__uniConfig.nvueCompiler;t.document.__$automator__=!!e.__uniConfig.automator,t.document.__$compiler__=n?"weex":"uni-app",t.document.__$styleCompiler__="weex"===e.__uniConfig.nvue.styleCompiler?"weex":"uni-app";const r="native"!==e.__uniConfig.renderer&&-1!==t.config.bundleUrl.indexOf("app-service.js");if(r){e.Vue2=e.Vue;const n={platform:t.config.env.platform};vueFactory(n),e.Vue=n.Vue}if(Object.assign(e,createInstanceContext$2(e)),!n){const n=e.plus,{scale:r,deviceWidth:i,platform:o}=global.WXEnvironment,a=Math.ceil(i/r),s=t.requireModule("meta");if("1"===t.config.plus_web_id){const e=t.requireModule("plus");e.setDefaultFontSize&&e.setDefaultFontSize(Math.round(n.screen.resolutionWidth/20))}"ios"===o.toLowerCase()&&s.setViewport({width:a,roundOffDeviation:!1})}r||e.Vue.use(uniApp,e)}let frameworks,runtimeConfig;function getJSFMVersion(){return"0.29.6"}function createServices(e,t,n){const r=Object.create(null);return r.service=Object.create(null),services$1.forEach((({name:i,options:o})=>{const a=o.create;if(a)try{const i=a(e,t,n);Object.assign(r.service,i),Object.assign(r,i.instance)}catch(e){console.error(`[JS Runtime] Failed to create service ${i}.`)}})),delete r.service.instance,Object.freeze(r.service),r}const instanceTypeMap={};function getFrameworkType(e){return instanceTypeMap[e]}const SharedObject={uid:0};function createInstanceContext$1(e,t={},n){const r=new WeexInstance(e,t,n),i="Vue";instanceTypeMap[e]=i;const o=runtimeConfig.frameworks.Vue;if(!o)return new Error('[JS Framework] Invalid bundle type "Vue".');const a=createServices(e,{weex:r,config:t,created:Date.now(),framework:i,bundleType:i},runtimeConfig);Object.freeze(a);const s=Object.create(null);Object.assign(s,a,{SharedObject:SharedObject,weex:r,getJSFMVersion:getJSFMVersion,requireModule:(...e)=>r.requireModule(...e),__WEEX_CALL_JAVASCRIPT__:receiveTasks,services:a}),Object.freeze(s);const c=Object.assign({},s);return"function"==typeof o.createInstanceContext&&Object.assign(c,o.createInstanceContext(e,s,n)),init$1(c),Object.freeze(c),c}function createInstance(e,t,n,r){if(instanceTypeMap[e])return new Error(`The instance id "${e}" has already been used!`);const i="Vue";instanceTypeMap[e]=i,(n=JSON.parse(JSON.stringify(n||{}))).env=JSON.parse(JSON.stringify(global.WXEnvironment||{})),n.bundleType=i;const o=runtimeConfig.frameworks.Vue;if(!o)return new Error('[JS Framework] Invalid bundle type "Vue".');const a=createInstanceContext$1(e,n,r);if("function"==typeof o.createInstance)return o.createInstance(e,t,n,r,a);runInContext(t,a)}function runInContext(e,t){const n=[],r=[];for(const e in t)n.push(e),r.push(t[e]);const i=`\n    (function (global) {\n      ${e}\n    })(Object.create(this))\n  `;return new Function(...n,i)(...r)}function getRoot(e){const t=getDoc(e);try{if(t&&t.body)return t.body.toJSON()}catch(e){return void console.error("[JS Framework] Failed to get the virtual dom tree.")}}const methods={createInstance:createInstance,createInstanceContext:createInstanceContext$1,getRoot:getRoot,getJSFMVersion:getJSFMVersion,getDocument:getDoc,registerService:register,unregisterService:unregister,callJS(e,t){const n=frameworks[getFrameworkType(e)];return n&&"function"==typeof n.receiveTasks?n.receiveTasks(e,t):receiveTasks(e,t)}};function genInstance(e){methods[e]=function(...t){const n=t[0],r=getFrameworkType(n);if(r&&frameworks[r]){const i=frameworks[r][e](...t),o={framework:r};return"refreshInstance"===e?services$1.forEach((e=>{const t=e.options.refresh;t&&t(n,{info:o,runtime:runtimeConfig})})):"destroyInstance"===e&&(services$1.forEach((e=>{const t=e.options.destroy;t&&t(n,{info:o,runtime:runtimeConfig})})),delete instanceTypeMap[n]),i}}}function adaptMethod(e,t){methods[e]=function(...n){"function"==typeof t&&t(...n);for(const t in runtimeConfig.frameworks){const r=runtimeConfig.frameworks[t];r&&r[e]&&r[e](...n)}}}function init(e){runtimeConfig=e||{},frameworks=runtimeConfig.frameworks||{},init$o();for(const t in frameworks){const n=frameworks[t];if("function"==typeof n.init)try{n.init(e)}catch(e){}}return adaptMethod("registerComponents",registerComponents),adaptMethod("registerModules",registerModules),adaptMethod("registerMethods"),["destroyInstance","refreshInstance"].forEach(genInstance),methods}const config={Document:Document,Element:Element,Comment:Comment,Listener:Listener,TaskCenter:TaskCenter,sendTasks:(...e)=>"function"==typeof callNative?callNative(...e):(global.callNative||(()=>{}))(...e)};function freezePrototype(){Object.freeze(config.Comment),Object.freeze(config.Listener),Object.freeze(config.Document.prototype),Object.freeze(config.Comment.prototype),Object.freeze(config.Listener.prototype)}Document.handler=config.sendTasks;var runtime={service:{register:register,unregister:unregister,has:has},freezePrototype:freezePrototype,init:init,config:config};function MessageEvent(e,t={}){this.type=e||"message",this.data=t.data||null,this.origin=t.origin||"",this.source=t.source||null,this.ports=t.ports||[],this.target=null,this.timeStamp=Date.now()}const channels={},instances={};function BroadcastChannel$1(){}BroadcastChannel$1.prototype.postMessage=function(e){if(this._closed)throw new Error(`BroadcastChannel "${this.name}" is closed.`);const t=channels[this.name];if(t&&t.length)for(let n=0;n<t.length;++n){const r=t[n];r._closed||r===this||"function"==typeof r.onmessage&&r.onmessage(new MessageEvent("message",{data:e}))}},BroadcastChannel$1.prototype.close=function(){if(!this._closed&&(this._closed=!0,channels[this.name])){const e=channels[this.name].filter((e=>e!==this));e.length?channels[this.name]=e:delete channels[this.name]}};var BroadcastChannel$2={create:(e,t,n)=>{if(instances[e]=[],"function"==typeof global.BroadcastChannel)return{};const r={BroadcastChannel:function(t){Object.defineProperty(this,"name",{configurable:!1,enumerable:!0,writable:!1,value:String(t)}),this._closed=!1,this.onmessage=null,channels[this.name]||(channels[this.name]=[]),channels[this.name].push(this),instances[e].push(this)}};return r.BroadcastChannel.prototype=BroadcastChannel$1.prototype,{instance:r}},destroy:(e,t)=>{instances[e].forEach((e=>e.close())),delete instances[e]}},services={BroadcastChannel:BroadcastChannel$2};function setup(e){const{init:t,config:n}=runtime;n.frameworks=e;const{native:r,transformer:i}=subversion;for(const e in services)runtime.service.register(e,services[e]);runtime.freezePrototype(),global.frameworkVersion=r,global.transformerVersion=i;const o=t(n);for(const e in o)global[e]=(...t)=>{const n=o[e](...t);return n instanceof Error&&console.error(n.toString()),n}}function setNativeConsole(){if(generateLevelMap(),global.WXEnvironment&&"Web"!==global.WXEnvironment.platform)global.console={debug:(...e)=>{checkLevel("debug")&&global.nativeLog(...format(e),"__DEBUG")},log:(...e)=>{checkLevel("log")&&global.nativeLog(...format(e),"__LOG")},info:(...e)=>{checkLevel("info")&&global.nativeLog(...format(e),"__INFO")},warn:(...e)=>{checkLevel("warn")&&global.nativeLog(...format(e),"__WARN")},error:(...e)=>{checkLevel("error")&&global.nativeLog(...format(e),"__ERROR")}};else{const{debug:e,log:t,info:n,warn:r,error:i}=console;console.__ori__={debug:e,log:t,info:n,warn:r,error:i},console.debug=(...e)=>{checkLevel("debug")&&console.__ori__.debug.apply(console,e)},console.log=(...e)=>{checkLevel("log")&&console.__ori__.log.apply(console,e)},console.info=(...e)=>{checkLevel("info")&&console.__ori__.info.apply(console,e)},console.warn=(...e)=>{checkLevel("warn")&&console.__ori__.warn.apply(console,e)},console.error=(...e)=>{checkLevel("error")&&console.__ori__.error.apply(console,e)}}}function format(e){return e.map((e=>{if("[object object]"===Object.prototype.toString.call(e).toLowerCase())try{e=JSON.stringify(e)}catch(t){e="[object object]"}else e=String(e);return e}))}const setTimeoutNative=global.setTimeoutNative;function setNativeTimer(){if(void 0===setTimeout&&"function"==typeof setTimeoutNative){const e={};let t=0;global.setTimeout=(n,r)=>{e[++t]=n,setTimeoutNative(t.toString(),r)},global.setTimeoutCallback=t=>{"function"==typeof e[t]&&(e[t](),delete e[t])}}}setNativeTimer();var weexVueFramework={},factory=function(e,t,n){var r=Object.freeze({});function i(e){return null==e}function o(e){return null!=e}function a(e){return!0===e}function s(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function c(e){return null!==e&&"object"==typeof e}var l=Object.prototype.toString;function u(e){return"[object Object]"===l.call(e)}function d(e){var t=parseFloat(String(e));return t>=0&&Math.floor(t)===t&&isFinite(e)}function h(e){return o(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function p(e){return null==e?"":Array.isArray(e)||u(e)&&e.toString===l?JSON.stringify(e,null,2):String(e)}function f(e){var t=parseFloat(e);return isNaN(t)?e:t}function g(e,t){for(var n=Object.create(null),r=e.split(","),i=0;i<r.length;i++)n[r[i]]=!0;return t?function(e){return n[e.toLowerCase()]}:function(e){return n[e]}}g("slot,component",!0);var m=g("key,ref,slot,slot-scope,is");function v(e,t){if(e.length){var n=e.indexOf(t);if(n>-1)return e.splice(n,1)}}var y=Object.prototype.hasOwnProperty;function _(e,t){return y.call(e,t)}function b(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}var w=/-(\w)/g,k=b((function(e){return e.replace(w,(function(e,t){return t?t.toUpperCase():""}))})),x=b((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),S=/\B([A-Z])/g,C=b((function(e){return e.replace(S,"-$1").toLowerCase()}));var E=Function.prototype.bind?function(e,t){return e.bind(t)}:function(e,t){function n(n){var r=arguments.length;return r?r>1?e.apply(t,arguments):e.call(t,n):e.call(t)}return n._length=e.length,n};function I(e,t){t=t||0;for(var n=e.length-t,r=new Array(n);n--;)r[n]=e[n+t];return r}function T(e,t){for(var n in t)e[n]=t[n];return e}function A(e){for(var t={},n=0;n<e.length;n++)e[n]&&T(t,e[n]);return t}function O(e,t,n){}var $=function(e,t,n){return!1},N=function(e){return e};function P(e,t){if(e===t)return!0;var n=c(e),r=c(t);if(!n||!r)return!n&&!r&&String(e)===String(t);try{var i=Array.isArray(e),o=Array.isArray(t);if(i&&o)return e.length===t.length&&e.every((function(e,n){return P(e,t[n])}));if(e instanceof Date&&t instanceof Date)return e.getTime()===t.getTime();if(i||o)return!1;var a=Object.keys(e),s=Object.keys(t);return a.length===s.length&&a.every((function(n){return P(e[n],t[n])}))}catch(e){return!1}}function M(e,t){for(var n=0;n<e.length;n++)if(P(e[n],t))return n;return-1}function L(e){var t=!1;return function(){t||(t=!0,e.apply(this,arguments))}}var R="data-server-rendered",B=["component","directive","filter"],D=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],j={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:$,isReservedAttr:$,isUnknownElement:$,getTagNamespace:O,parsePlatformTagName:N,mustUseProp:$,async:!0,_lifecycleHooks:D};function F(e){var t=(e+"").charCodeAt(0);return 36===t||95===t}function V(e,t,n,r){Object.defineProperty(e,t,{value:n,enumerable:!!r,writable:!0,configurable:!0})}var U=new RegExp("[^"+/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/.source+".$_\\d]");var z="__proto__"in{},W="undefined"!=typeof window,H="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,q=(H&&WXEnvironment.platform.toLowerCase(),W&&window.navigator.userAgent.toLowerCase()),Y=q&&/msie|trident/.test(q);q&&q.indexOf("msie 9.0");q&&q.indexOf("edge/");q&&q.indexOf("android"),q&&/iphone|ipad|ipod|ios/.test(q),q&&/chrome\/\d+/.test(q),q&&/phantomjs/.test(q),q&&q.match(/firefox\/(\d+)/);var J,X={}.watch;if(W)try{var G={};Object.defineProperty(G,"passive",{get:function(){}}),window.addEventListener("test-passive",null,G)}catch(e){}var Z=function(){return void 0===J&&(J=!W&&!H&&void 0!==global&&(global.process&&"server"===global.process.env.VUE_ENV)),J},K=W&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function Q(e){return"function"==typeof e&&/native code/.test(e.toString())}var ee,te="undefined"!=typeof Symbol&&Q(Symbol)&&"undefined"!=typeof Reflect&&Q(Reflect.ownKeys);ee="undefined"!=typeof Set&&Q(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var ne=O,re=0,ie=function(){this.id=void 0!==n?n.uid++:re++,this.subs=[]};function oe(e){ie.SharedObject.targetStack.push(e),ie.SharedObject.target=e}function ae(){ie.SharedObject.targetStack.pop(),ie.SharedObject.target=ie.SharedObject.targetStack[ie.SharedObject.targetStack.length-1]}ie.prototype.addSub=function(e){this.subs.push(e)},ie.prototype.removeSub=function(e){v(this.subs,e)},ie.prototype.depend=function(){ie.SharedObject.target&&ie.SharedObject.target.addDep(this)},ie.prototype.notify=function(){for(var e=this.subs.slice(),t=0,n=e.length;t<n;t++)e[t].update()},(ie.SharedObject=void 0!==n?n:{}).target=null,ie.SharedObject.targetStack=[];var se=function(e,t,n,r,i,o,a,s){t&&Array.isArray(t.class)&&(t.class=t.class.slice(0)),this.tag=e,this.data=t,this.children=n,this.text=r,this.elm=i,this.ns=void 0,this.context=o,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=t&&t.key,this.componentOptions=a,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},ce={child:{configurable:!0}};ce.child.get=function(){return this.componentInstance},Object.defineProperties(se.prototype,ce);var le=function(e){void 0===e&&(e="");var t=new se;return t.text=e,t.isComment=!0,t};function ue(e){return new se(void 0,void 0,void 0,String(e))}function de(e){var t=new se(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return t.ns=e.ns,t.isStatic=e.isStatic,t.key=e.key,t.isComment=e.isComment,t.fnContext=e.fnContext,t.fnOptions=e.fnOptions,t.fnScopeId=e.fnScopeId,t.asyncMeta=e.asyncMeta,t.isCloned=!0,t}var he=Array.prototype,pe=Object.create(he);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(e){var t=he[e];V(pe,e,(function(){for(var n=[],r=arguments.length;r--;)n[r]=arguments[r];var i,o=t.apply(this,n),a=this.__ob__;switch(e){case"push":case"unshift":i=n;break;case"splice":i=n.slice(2)}return i&&a.observeArray(i),a.dep.notify(),o}))}));var fe=Object.getOwnPropertyNames(pe),ge=!0;function me(e){ge=e}var ve=function(e){this.value=e,this.dep=new ie,this.vmCount=0,V(e,"__ob__",this),Array.isArray(e)?(z?function(e,t){e.__proto__=t}(e,pe):function(e,t,n){for(var r=0,i=n.length;r<i;r++){var o=n[r];V(e,o,t[o])}}(e,pe,fe),this.observeArray(e)):this.walk(e)};function ye(e,t){var n;if(c(e)&&!(e instanceof se))return _(e,"__ob__")&&e.__ob__ instanceof ve?n=e.__ob__:ge&&!Z()&&(Array.isArray(e)||u(e))&&Object.isExtensible(e)&&!e._isVue&&(n=new ve(e)),t&&n&&n.vmCount++,n}function _e(e,t,n,r,i){var o=new ie,a=Object.getOwnPropertyDescriptor(e,t);if(!a||!1!==a.configurable){var s=a&&a.get,c=a&&a.set;s&&!c||2!==arguments.length||(n=e[t]);var l=!i&&ye(n);Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var t=s?s.call(e):n;return ie.SharedObject.target&&(o.depend(),l&&(l.dep.depend(),Array.isArray(t)&&ke(t))),t},set:function(t){var r=s?s.call(e):n;t===r||t!=t&&r!=r||s&&!c||(c?c.call(e,t):n=t,l=!i&&ye(t),o.notify())}})}}function be(e,t,n){if(Array.isArray(e)&&d(t))return e.length=Math.max(e.length,t),e.splice(t,1,n),n;if(t in e&&!(t in Object.prototype))return e[t]=n,n;var r=e.__ob__;return e._isVue||r&&r.vmCount?n:r?(_e(r.value,t,n),r.dep.notify(),n):(e[t]=n,n)}function we(e,t){if(Array.isArray(e)&&d(t))e.splice(t,1);else{var n=e.__ob__;e._isVue||n&&n.vmCount||_(e,t)&&(delete e[t],n&&n.dep.notify())}}function ke(e){for(var t=void 0,n=0,r=e.length;n<r;n++)(t=e[n])&&t.__ob__&&t.__ob__.dep.depend(),Array.isArray(t)&&ke(t)}ve.prototype.walk=function(e){for(var t=Object.keys(e),n=0;n<t.length;n++)_e(e,t[n])},ve.prototype.observeArray=function(e){for(var t=0,n=e.length;t<n;t++)ye(e[t])};var xe=j.optionMergeStrategies;function Se(e,t){if(!t)return e;for(var n,r,i,o=te?Reflect.ownKeys(t):Object.keys(t),a=0;a<o.length;a++)"__ob__"!==(n=o[a])&&(r=e[n],i=t[n],_(e,n)?r!==i&&u(r)&&u(i)&&Se(r,i):be(e,n,i));return e}function Ce(e,t,n){return n?function(){var r="function"==typeof t?t.call(n,n):t,i="function"==typeof e?e.call(n,n):e;return r?Se(r,i):i}:t?e?function(){return Se("function"==typeof t?t.call(this,this):t,"function"==typeof e?e.call(this,this):e)}:t:e}function Ee(e,t){var n=t?e?e.concat(t):Array.isArray(t)?t:[t]:e;return n?function(e){for(var t=[],n=0;n<e.length;n++)-1===t.indexOf(e[n])&&t.push(e[n]);return t}(n):n}function Ie(e,t,n,r){var i=Object.create(e||null);return t?T(i,t):i}xe.data=function(e,t,n){return n?Ce(e,t,n):t&&"function"!=typeof t?e:Ce(e,t)},D.forEach((function(e){xe[e]=Ee})),B.forEach((function(e){xe[e+"s"]=Ie})),xe.watch=function(e,t,n,r){if(e===X&&(e=void 0),t===X&&(t=void 0),!t)return Object.create(e||null);if(!e)return t;var i={};for(var o in T(i,e),t){var a=i[o],s=t[o];a&&!Array.isArray(a)&&(a=[a]),i[o]=a?a.concat(s):Array.isArray(s)?s:[s]}return i},xe.props=xe.methods=xe.inject=xe.computed=function(e,t,n,r){if(!e)return t;var i=Object.create(null);return T(i,e),t&&T(i,t),i},xe.provide=Ce;var Te=function(e,t){return void 0===t?e:t};function Ae(e,t,n){if("function"==typeof t&&(t=t.options),function(e,t){var n=e.props;if(n){var r,i,o={};if(Array.isArray(n))for(r=n.length;r--;)"string"==typeof(i=n[r])&&(o[k(i)]={type:null});else if(u(n))for(var a in n)i=n[a],o[k(a)]=u(i)?i:{type:i};e.props=o}}(t),function(e,t){var n=e.inject;if(n){var r=e.inject={};if(Array.isArray(n))for(var i=0;i<n.length;i++)r[n[i]]={from:n[i]};else if(u(n))for(var o in n){var a=n[o];r[o]=u(a)?T({from:o},a):{from:a}}}}(t),function(e){var t=e.directives;if(t)for(var n in t){var r=t[n];"function"==typeof r&&(t[n]={bind:r,update:r})}}(t),!t._base&&(t.extends&&(e=Ae(e,t.extends,n)),t.mixins))for(var r=0,i=t.mixins.length;r<i;r++)e=Ae(e,t.mixins[r],n);var o,a={};for(o in e)s(o);for(o in t)_(e,o)||s(o);function s(r){var i=xe[r]||Te;a[r]=i(e[r],t[r],n,r)}return a}function Oe(e,t,n,r){if("string"==typeof n){var i=e[t];if(_(i,n))return i[n];var o=k(n);if(_(i,o))return i[o];var a=x(o);return _(i,a)?i[a]:i[n]||i[o]||i[a]}}function $e(e,t,n,r){var i=t[e],o=!_(n,e),a=n[e],s=Me(Boolean,i.type);if(s>-1)if(o&&!_(i,"default"))a=!1;else if(""===a||a===C(e)){var c=Me(String,i.type);(c<0||s<c)&&(a=!0)}if(void 0===a){a=function(e,t,n){if(!_(t,"default"))return;var r=t.default;if(e&&e.$options.propsData&&void 0===e.$options.propsData[n]&&void 0!==e._props[n])return e._props[n];return"function"==typeof r&&"Function"!==Ne(t.type)?r.call(e):r}(r,i,e);var l=ge;me(!0),ye(a),me(l)}return a}function Ne(e){var t=e&&e.toString().match(/^\s*function (\w+)/);return t?t[1]:""}function Pe(e,t){return Ne(e)===Ne(t)}function Me(e,t){if(!Array.isArray(t))return Pe(t,e)?0:-1;for(var n=0,r=t.length;n<r;n++)if(Pe(t[n],e))return n;return-1}function Le(e,t,n){oe();try{if(t)for(var r=t;r=r.$parent;){var i=r.$options.errorCaptured;if(i)for(var o=0;o<i.length;o++)try{if(!1===i[o].call(r,e,t,n))return}catch(e){Be(e,r,"errorCaptured hook")}}Be(e,t,n)}finally{ae()}}function Re(e,t,n,r,i){var o;try{(o=n?e.apply(t,n):e.call(t))&&!o._isVue&&h(o)&&!o._handled&&(o.catch((function(e){return Le(e,r,i+" (Promise/async)")})),o._handled=!0)}catch(e){Le(e,r,i)}return o}function Be(e,t,n){if(j.errorHandler)try{return j.errorHandler.call(null,e,t,n)}catch(t){t!==e&&De(t)}De(e)}function De(e,t,n){if(!W&&!H||"undefined"==typeof console)throw e;console.error(e)}var je=[],Fe=!1;function Ve(){Fe=!1;var e=je.slice(0);je.length=0;for(var t=0;t<e.length;t++)e[t]()}function Ue(e,t){var n;if(je.push((function(){if(e)try{e.call(t)}catch(e){Le(e,t,"nextTick")}else n&&n(t)})),Fe||(Fe=!0,setTimeout(Ve,0)),!e&&"undefined"!=typeof Promise)return new Promise((function(e){n=e}))}var ze=new ee;function We(e){He(e,ze),ze.clear()}function He(e,t){var n,r,i=Array.isArray(e);if(!(!i&&!c(e)||Object.isFrozen(e)||e instanceof se)){if(e.__ob__){var o=e.__ob__.dep.id;if(t.has(o))return;t.add(o)}if(i)for(n=e.length;n--;)He(e[n],t);else for(n=(r=Object.keys(e)).length;n--;)He(e[r[n]],t)}}var qe=b((function(e){var t="&"===e.charAt(0),n="~"===(e=t?e.slice(1):e).charAt(0),r="!"===(e=n?e.slice(1):e).charAt(0);return{name:e=r?e.slice(1):e,once:n,capture:r,passive:t}}));function Ye(e,t){function n(){var e=arguments,r=n.fns;if(!Array.isArray(r))return Re(r,null,arguments,t,"v-on handler");for(var i=r.slice(),o=0;o<i.length;o++)Re(i[o],null,e,t,"v-on handler")}return n.fns=e,n}function Je(e,t,n,r,o,s){var c,l,d,h,p;for(c in e)l=d=e[c],h=t[c],p=qe(c),u(l)&&(d=l.handler,p.params=l.params),i(d)||(i(h)?(i(d.fns)&&(d=e[c]=Ye(d,s)),a(p.once)&&(d=e[c]=o(p.name,d,p.capture)),n(p.name,d,p.capture,p.passive,p.params)):d!==h&&(h.fns=d,e[c]=h));for(c in t)i(e[c])&&r((p=qe(c)).name,t[c],p.capture)}function Xe(e,t,n){var r;e instanceof se&&(e=e.data.hook||(e.data.hook={}));var s=e[t];function c(){n.apply(this,arguments),v(r.fns,c)}i(s)?r=Ye([c]):o(s.fns)&&a(s.merged)?(r=s).fns.push(c):r=Ye([s,c]),r.merged=!0,e[t]=r}function Ge(e,t,n,r,i){if(o(t)){if(_(t,n))return e[n]=t[n],i||delete t[n],!0;if(_(t,r))return e[n]=t[r],i||delete t[r],!0}return!1}function Ze(e){return s(e)?[ue(e)]:Array.isArray(e)?Qe(e):void 0}function Ke(e){return o(e)&&o(e.text)&&function(e){return!1===e}(e.isComment)}function Qe(e,t){var n,r,c,l,u=[];for(n=0;n<e.length;n++)i(r=e[n])||"boolean"==typeof r||(l=u[c=u.length-1],Array.isArray(r)?r.length>0&&(Ke((r=Qe(r,(t||"")+"_"+n))[0])&&Ke(l)&&(u[c]=ue(l.text+r[0].text),r.shift()),u.push.apply(u,r)):s(r)?Ke(l)?u[c]=ue(l.text+r):""!==r&&u.push(ue(r)):Ke(r)&&Ke(l)?u[c]=ue(l.text+r.text):(a(e._isVList)&&o(r.tag)&&i(r.key)&&o(t)&&(r.key="__vlist"+t+"_"+n+"__"),u.push(r)));return u}function et(e){var t=e.$options.provide;t&&(e._provided="function"==typeof t?t.call(e):t)}function tt(e){var t=nt(e.$options.inject,e);t&&(me(!1),Object.keys(t).forEach((function(n){_e(e,n,t[n])})),me(!0))}function nt(e,t){if(e){for(var n=Object.create(null),r=te?Reflect.ownKeys(e):Object.keys(e),i=0;i<r.length;i++){var o=r[i];if("__ob__"!==o){for(var a=e[o].from,s=t;s;){if(s._provided&&_(s._provided,a)){n[o]=s._provided[a];break}s=s.$parent}if(!s&&"default"in e[o]){var c=e[o].default;n[o]="function"==typeof c?c.call(t):c}}}return n}}function rt(e,t){if(!e||!e.length)return{};for(var n={},r=0,i=e.length;r<i;r++){var o=e[r],a=o.data;if(a&&a.attrs&&a.attrs.slot&&delete a.attrs.slot,o.context!==t&&o.fnContext!==t||!a||null==a.slot)o.asyncMeta&&o.asyncMeta.data&&"page"===o.asyncMeta.data.slot?(n.page||(n.page=[])).push(o):(n.default||(n.default=[])).push(o);else{var s=a.slot,c=n[s]||(n[s]=[]);"template"===o.tag?c.push.apply(c,o.children||[]):c.push(o)}}for(var l in n)n[l].every(it)&&delete n[l];return n}function it(e){return e.isComment&&!e.asyncFactory||" "===e.text}function ot(e,t,n){var i,o=Object.keys(t).length>0,a=e?!!e.$stable:!o,s=e&&e.$key;if(e){if(e._normalized)return e._normalized;if(a&&n&&n!==r&&s===n.$key&&!o&&!n.$hasNormal)return n;for(var c in i={},e)e[c]&&"$"!==c[0]&&(i[c]=at(t,c,e[c]))}else i={};for(var l in t)l in i||(i[l]=st(t,l));return e&&Object.isExtensible(e)&&(e._normalized=i),V(i,"$stable",a),V(i,"$key",s),V(i,"$hasNormal",o),i}function at(e,t,n){var r=function(){var e=arguments.length?n.apply(null,arguments):n({});return(e=e&&"object"==typeof e&&!Array.isArray(e)?[e]:Ze(e))&&(0===e.length||1===e.length&&e[0].isComment)?void 0:e};return n.proxy&&Object.defineProperty(e,t,{get:r,enumerable:!0,configurable:!0}),r}function st(e,t){return function(){return e[t]}}function ct(e,t){var n,r,i,a,s;if(Array.isArray(e)||"string"==typeof e)for(n=new Array(e.length),r=0,i=e.length;r<i;r++)n[r]=t(e[r],r);else if("number"==typeof e)for(n=new Array(e),r=0;r<e;r++)n[r]=t(r+1,r);else if(c(e))if(te&&e[Symbol.iterator]){n=[];for(var l=e[Symbol.iterator](),u=l.next();!u.done;)n.push(t(u.value,n.length)),u=l.next()}else for(a=Object.keys(e),n=new Array(a.length),r=0,i=a.length;r<i;r++)s=a[r],n[r]=t(e[s],s,r);return o(n)||(n=[]),n._isVList=!0,n}function lt(e,t,n,r){var i,o=this.$scopedSlots[e];o?(n=n||{},r&&(n=T(T({},r),n)),i=o(n)||t):i=this.$slots[e]||t;var a=n&&n.slot;return a?this.$createElement("template",{slot:a},i):i}function ut(e){return Oe(this.$options,"filters",e)||N}function dt(e,t){return Array.isArray(e)?-1===e.indexOf(t):e!==t}function ht(e,t,n,r,i){var o=j.keyCodes[t]||n;return i&&r&&!j.keyCodes[t]?dt(i,r):o?dt(o,e):r?C(r)!==t:void 0}function pt(e,t,n,r,i){if(n)if(c(n)){var o;Array.isArray(n)&&(n=A(n));var a=function(a){if("class"===a||"style"===a||m(a))o=e;else{var s=e.attrs&&e.attrs.type;o=r||j.mustUseProp(t,s,a)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var c=k(a),l=C(a);c in o||l in o||(o[a]=n[a],i&&((e.on||(e.on={}))["update:"+a]=function(e){n[a]=e}))};for(var s in n)a(s)}else;return e}function ft(e,t){var n=this._staticTrees||(this._staticTrees=[]),r=n[e];return r&&!t||mt(r=n[e]=this.$options.staticRenderFns[e].call(this._renderProxy,null,this),"__static__"+e,!1),r}function gt(e,t,n){return mt(e,"__once__"+t+(n?"_"+n:""),!0),e}function mt(e,t,n){if(Array.isArray(e))for(var r=0;r<e.length;r++)e[r]&&"string"!=typeof e[r]&&vt(e[r],t+"_"+r,n);else vt(e,t,n)}function vt(e,t,n){e.isStatic=!0,e.key=t,e.isOnce=n}function yt(e,t){if(t)if(u(t)){var n=e.on=e.on?T({},e.on):{};for(var r in t){var i=n[r],o=t[r];n[r]=i?[].concat(i,o):o}}else;return e}function _t(e,t,n,r){t=t||{$stable:!n};for(var i=0;i<e.length;i++){var o=e[i];Array.isArray(o)?_t(o,t,n):o&&(o.proxy&&(o.fn.proxy=!0),t[o.key]=o.fn)}return r&&(t.$key=r),t}function bt(e,t){for(var n=0;n<t.length;n+=2){var r=t[n];"string"==typeof r&&r&&(e[t[n]]=t[n+1])}return e}function wt(e,t){return"string"==typeof e?t+e:e}function kt(e){e._o=gt,e._n=f,e._s=p,e._l=ct,e._t=lt,e._q=P,e._i=M,e._m=ft,e._f=ut,e._k=ht,e._b=pt,e._v=ue,e._e=le,e._u=_t,e._g=yt,e._d=bt,e._p=wt}function xt(e,t,n,i,o){var s,c=this,l=o.options;_(i,"_uid")?(s=Object.create(i))._original=i:(s=i,i=i._original);var u=a(l._compiled),d=!u;this.data=e,this.props=t,this.children=n,this.parent=i,this.listeners=e.on||r,this.injections=nt(l.inject,i),this.slots=function(){return c.$slots||ot(e.scopedSlots,c.$slots=rt(n,i)),c.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return ot(e.scopedSlots,this.slots())}}),u&&(this.$options=l,this.$slots=this.slots(),this.$scopedSlots=ot(e.scopedSlots,this.$slots)),l._scopeId?this._c=function(e,t,n,r){var o=Vt(s,e,t,n,r,d);return o&&!Array.isArray(o)&&(o.fnScopeId=l._scopeId,o.fnContext=i),o}:this._c=function(e,t,n,r){return Vt(s,e,t,n,r,d)}}function St(e,t,n,r,i){var o=de(e);return o.fnContext=n,o.fnOptions=r,t.slot&&((o.data||(o.data={})).slot=t.slot),o}function Ct(e,t){for(var n in t)e[k(n)]=t[n]}kt(xt.prototype);var Et="@inRecycleList";function It(e,n,r,i){if(t&&t.taskCenter)return"function"==typeof t.taskCenter.registerHook?t.taskCenter.registerHook(e,n,r,i):void 0}function Tt(e,t,n){if(c(t))if(n)e.$refs={};else{var r=e.$refs||{};Object.keys(t).forEach((function(e){var n=t[e];r[e]=1===n.length?n[0]:n})),e.$refs=r}}function At(e,t,n,r){if(c(n)){var i=e.$refs||{};r?Object.keys(n).forEach((function(e){var r=n[e];i[e]&&(1===r.length&&Array.isArray(i[e])?delete i[e][t]:delete i[e])})):(Object.keys(n).forEach((function(e){var r=n[e];1===r.length?(Array.isArray(i[e])||(i[e]=[]),i[e][t]=r[0]):i[e]=r})),e.$refs=i)}}var Ot=0;function $t(e){var t=e.$options.data,n=e.$options.computed||{},r=e._data?Object.assign({},e._data):"function"==typeof t?wn(t,e):t||{},i={};for(var o in n)i[o]=e[o];return Object.assign({},r,i)}function Nt(e){void 0===e&&(e={});var t=this,n=e.componentId;V(t,"_vmTemplate",e.vmTemplate),t._uid=n||"virtual-component-"+Ot++,t._isVue=!0,e&&e._isComponent?Tn(t,e):t.$options=Ae(An(t.constructor),e||{},t),t._renderProxy=t,t._self=t,tn(t),Xt(t),zt(t),an(t,"beforeCreate"),tt(t),bn(t),et(t),an(t,"created"),It(n,"lifecycle","attach",(function(e){Tt(t,e&&e.refs),an(t,"beforeMount"),new vn(t,(function(){return $t(t)}),(function(){return t._update(t._vnode,!1)})),t._isMounted=!0,an(t,"mounted")})),It(n,"lifecycle","update",(function(e){Tt(t,e&&e.refs),t._update(t._vnode,!1)})),It(n,"lifecycle","syncState",(function(e,n){if(u(n))for(var r in n)t[r]=n[r];return $t(t)})),It(n,"lifecycle","detach",(function(e){Tt(t,e&&e.refs,!0),t.$destroy(),t._vmTemplate&&(t._vmTemplate.removeVirtualComponent(t._uid),delete t._vmTemplate)}))}function Pt(e){var n=this,r=n.$options.componentId;(n._isMounted&&an(n,"beforeUpdate"),n._vnode=e,n._isMounted&&r)&&function(e,n,r){if(t&&t.taskCenter)"function"==typeof t.taskCenter.updateData&&t.taskCenter.updateData(e,n,r)}(r,$t(n),(function(){an(n,"updated")}))}function Mt(e){void 0===e&&(e={});var t=this;t._uid="virtual-component-template-"+Ot++,t._isVue=!0,e&&e._isComponent?Tn(t,e):t.$options=Ae(An(t.constructor),e||{},t),t._self=t,Xt(t),zt(t),bn(t),this.registerVirtualComponent()}function Lt(e){delete e.data.attrs["@inRecycleList"],function(e){var t=e.componentOptions.Ctor,n=t.extend({}),r=n.prototype.$emit;n.prototype._init=Nt,n.prototype._update=Pt,n.prototype.$emit=function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var n=this._uid,i=this._vmTemplate;return n&&i&&(e.push(n),r.apply(i,e)),r.apply(this,e)},e.componentOptions.Ctor=t.extend({methods:{registerVirtualComponent:function(){var e=this;V(e,"_virtualComponents",{}),It(String(e._uid),"lifecycle","create",(function(t,r){var i=new n({vmTemplate:e,componentId:t,propsData:r});return i._uid=t,e._virtualComponents&&(e._virtualComponents[t]=i),$t(i)}))},removeVirtualComponent:function(e){delete this._virtualComponents[e]}},destroyed:function(){delete this._virtualComponents}}),e.componentOptions.Ctor.prototype._init=Mt,e.componentOptions.Ctor.prototype._update=O}(e);var t=jt(e),n=t.$options["@render"];if(n)try{return n.call(t)}catch(e){Le(e,t,"@render")}}var Rt={init:function(e,t,n,r){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var i=e;Rt.prepatch(i,i)}else{(e.componentInstance=jt(e,en,n,r)).$mount(t?e.elm:void 0,t)}},prepatch:function(e,t){var n=t.componentOptions;!function(e,t,n,i,o){var a=i.data.scopedSlots,s=e.$scopedSlots,c=!!(a&&!a.$stable||s!==r&&!s.$stable||a&&e.$scopedSlots.$key!==a.$key),l=!!(o||e.$options._renderChildren||c);e.$options._parentVnode=i,e.$vnode=i,e._vnode&&(e._vnode.parent=i);if(e.$options._renderChildren=o,e.$attrs=i.data.attrs||r,e.$listeners=n||r,t&&e.$options.props){me(!1);for(var u=e._props,d=e.$options._propKeys||[],h=0;h<d.length;h++){var p=d[h],f=e.$options.props;u[p]=$e(p,f,t,e)}me(!0),e.$options.propsData=t}n=n||r;var g=e.$options._parentListeners;e.$options._parentListeners=n,Qt(e,n,g),l&&(e.$slots=rt(o,i.context),e.$forceUpdate())}(t.componentInstance=e.componentInstance,n.propsData,n.listeners,t,n.children)},insert:function(e){var t,n=e.context,r=e.componentInstance;r._isMounted||(r._isMounted=!0,an(r,"mounted")),e.data.keepAlive&&(n._isMounted?((t=r)._inactive=!1,cn.push(t)):rn(r,!0))},destroy:function(e){var t=e.componentInstance;t._isDestroyed||(e.data.keepAlive?on(t,!0):t.$destroy())}},Bt=Object.keys(Rt);function Dt(e,t,n,s,l){if(!i(e)){var u=n.$options._base;if(c(e)&&(e=u.extend(e)),"function"==typeof e){var d;if(i(e.cid)&&void 0===(e=function(e,t){if(a(e.error)&&o(e.errorComp))return e.errorComp;if(o(e.resolved))return e.resolved;var n=Ht;n&&o(e.owners)&&-1===e.owners.indexOf(n)&&e.owners.push(n);if(a(e.loading)&&o(e.loadingComp))return e.loadingComp;if(n&&!o(e.owners)){var r=e.owners=[n],s=!0,l=null,u=null;n.$on("hook:destroyed",(function(){return v(r,n)}));var d=function(e){for(var t=0,n=r.length;t<n;t++)r[t].$forceUpdate();e&&(r.length=0,null!==l&&(clearTimeout(l),l=null),null!==u&&(clearTimeout(u),u=null))},p=L((function(n){e.resolved=qt(n,t),s?r.length=0:d(!0)})),f=L((function(t){o(e.errorComp)&&(e.error=!0,d(!0))})),g=e(p,f);return c(g)&&(h(g)?i(e.resolved)&&g.then(p,f):h(g.component)&&(g.component.then(p,f),o(g.error)&&(e.errorComp=qt(g.error,t)),o(g.loading)&&(e.loadingComp=qt(g.loading,t),0===g.delay?e.loading=!0:l=setTimeout((function(){l=null,i(e.resolved)&&i(e.error)&&(e.loading=!0,d(!1))}),g.delay||200)),o(g.timeout)&&(u=setTimeout((function(){u=null,i(e.resolved)&&f(null)}),g.timeout)))),s=!1,e.loading?e.loadingComp:e.resolved}}(d=e,u)))return function(e,t,n,r,i){var o=le();return o.asyncFactory=e,o.asyncMeta={data:t,context:n,children:r,tag:i},o}(d,t,n,s,l);t=t||{},An(e),o(t.model)&&function(e,t){var n=e.model&&e.model.prop||"value",r=e.model&&e.model.event||"input";(t.attrs||(t.attrs={}))[n]=t.model.value;var i=t.on||(t.on={}),a=i[r],s=t.model.callback;o(a)?(Array.isArray(a)?-1===a.indexOf(s):a!==s)&&(i[r]=[s].concat(a)):i[r]=s}(e.options,t);var p=function(e,t,n){var r=t.options.props;if(!i(r)){var a={},s=e.attrs,c=e.props;if(o(s)||o(c))for(var l in r){var u=C(l);Ge(a,c,l,u,!0)||Ge(a,s,l,u,!1)}return a}}(t,e);if(a(e.options.functional))return function(e,t,n,i,a){var s=e.options,c={},l=s.props;if(o(l))for(var u in l)c[u]=$e(u,l,t||r);else o(n.attrs)&&Ct(c,n.attrs),o(n.props)&&Ct(c,n.props);var d=new xt(n,c,a,i,e),h=s.render.call(null,d._c,d);if(h instanceof se)return St(h,n,d.parent,s);if(Array.isArray(h)){for(var p=Ze(h)||[],f=new Array(p.length),g=0;g<p.length;g++)f[g]=St(p[g],n,d.parent,s);return f}}(e,p,t,n,s);var f=t.on;if(t.on=t.nativeOn,a(e.options.abstract)){var g=t.slot;t={},g&&(t.slot=g)}!function(e){for(var t=e.hook||(e.hook={}),n=0;n<Bt.length;n++){var r=Bt[n],i=t[r],o=Rt[r];i===o||i&&i._merged||(t[r]=i?Ft(o,i):o)}}(t);var m=e.options.name||l,y=new se("vue-component-"+e.cid+(m?"-"+m:""),t,void 0,void 0,void 0,n,{Ctor:e,propsData:p,listeners:f,tag:l,children:s},d);return function(e){return!!e.data.attrs&&Et in e.data.attrs}(y)?Lt(y):y}}}function jt(e,t,n,r){var i={_isComponent:!0,_parentVnode:e,parent:t,_parentElm:n||null,_refElm:r||null},a=e.data.inlineTemplate;return o(a)&&(i.render=a.render,i.staticRenderFns=a.staticRenderFns),new e.componentOptions.Ctor(i)}function Ft(e,t){var n=function(n,r){e(n,r),t(n,r)};return n._merged=!0,n}function Vt(e,t,n,r,i,l){return(Array.isArray(n)||s(n))&&(i=r,r=n,n=void 0),a(l)&&(i=2),function(e,t,n,r,i){if(o(n)&&o(n.__ob__))return le();o(n)&&o(n.is)&&(t=n.is);if(!t)return le();Array.isArray(r)&&"function"==typeof r[0]&&((n=n||{}).scopedSlots={default:r[0]},r.length=0);2===i?r=Ze(r):1===i&&(r=function(e){for(var t=0;t<e.length;t++)if(Array.isArray(e[t]))return Array.prototype.concat.apply([],e);return e}(r));var a,s;if("string"==typeof t){var l;s=e.$vnode&&e.$vnode.ns||j.getTagNamespace(t),a=j.isReservedTag(t)?new se(j.parsePlatformTagName(t),n,r,void 0,void 0,e):n&&n.pre||!o(l=Oe(e.$options,"components",t))?new se(t,n,r,void 0,void 0,e):Dt(l,n,e,r,t)}else a=Dt(t,n,e,r);return Array.isArray(a)?a:o(a)?(o(s)&&Ut(a,s),o(n)&&function(e){c(e.style)&&We(e.style);c(e.class)&&We(e.class)}(n),a):le()}(e,t,n,r,i)}function Ut(e,t,n){if(e.ns=t,"foreignObject"===e.tag&&(t=void 0,n=!0),o(e.children))for(var r=0,s=e.children.length;r<s;r++){var c=e.children[r];o(c.tag)&&(i(c.ns)||a(n)&&"svg"!==c.tag)&&Ut(c,t,n)}}function zt(e){e._vnode=null,e._staticTrees=null;var t=e.$options,n=e.$vnode=t._parentVnode,i=n&&n.context;e.$slots=rt(t._renderChildren,i),e.$scopedSlots=r,e._c=function(t,n,r,i){return Vt(e,t,n,r,i,!1)},e.$createElement=function(t,n,r,i){return Vt(e,t,n,r,i,!0)};var o=n&&n.data;_e(e,"$attrs",o&&o.attrs||r,null,!0),_e(e,"$listeners",t._parentListeners||r,null,!0)}var Wt,Ht=null;function qt(e,t){return(e.__esModule||te&&"Module"===e[Symbol.toStringTag])&&(e=e.default),c(e)?t.extend(e):e}function Yt(e){return e.isComment&&e.asyncFactory}function Jt(e){if(Array.isArray(e))for(var t=0;t<e.length;t++){var n=e[t];if(o(n)&&(o(n.componentOptions)||Yt(n)))return n}}function Xt(e){e._events=Object.create(null),e._hasHookEvent=!1;var t=e.$options._parentListeners;t&&Qt(e,t)}function Gt(e,t){Wt.$on(e,t)}function Zt(e,t){Wt.$off(e,t)}function Kt(e,t){var n=Wt;return function r(){var i=t.apply(null,arguments);null!==i&&n.$off(e,r)}}function Qt(e,t,n){Wt=e,Je(t,n||{},Gt,Zt,Kt,e),Wt=void 0}var en=null;function tn(e){var t=e.$options,n=t.parent;if(n&&!t.abstract){for(;n.$options.abstract&&n.$parent;)n=n.$parent;n.$children.push(e)}e.$parent=n,e.$root=n?n.$root:e,e.$children=[],e.$refs={},e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}function nn(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function rn(e,t){if(t){if(e._directInactive=!1,nn(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var n=0;n<e.$children.length;n++)rn(e.$children[n]);an(e,"activated")}}function on(e,t){if(!(t&&(e._directInactive=!0,nn(e))||e._inactive)){e._inactive=!0;for(var n=0;n<e.$children.length;n++)on(e.$children[n]);an(e,"deactivated")}}function an(e,t){oe();var n=e.$options[t],r=t+" hook";if(n)for(var i=0,o=n.length;i<o;i++)Re(n[i],e,null,e,r);e._hasHookEvent&&e.$emit("hook:"+t),ae()}var sn=[],cn=[],ln={},un=!1,dn=!1,hn=0;var pn=Date.now;if(W&&!Y){var fn=window.performance;fn&&"function"==typeof fn.now&&pn()>t.createEvent("Event").timeStamp&&(pn=function(){return fn.now()})}function gn(){var e,t;for(pn(),dn=!0,sn.sort((function(e,t){return e.id-t.id})),hn=0;hn<sn.length;hn++)(e=sn[hn]).before&&e.before(),t=e.id,ln[t]=null,e.run();var n=cn.slice(),r=sn.slice();hn=sn.length=cn.length=0,ln={},un=dn=!1,function(e){for(var t=0;t<e.length;t++)e[t]._inactive=!0,rn(e[t],!0)}(n),function(e){var t=e.length;for(;t--;){var n=e[t],r=n.vm;r._watcher===n&&r._isMounted&&!r._isDestroyed&&an(r,"updated")}}(r),K&&j.devtools&&K.emit("flush")}var mn=0,vn=function(e,t,n,r,i){this.vm=e,i&&(e._watcher=this),e._watchers.push(this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync,this.before=r.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++mn,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new ee,this.newDepIds=new ee,this.expression="","function"==typeof t?this.getter=t:(this.getter=function(e){if(!U.test(e)){var t=e.split(".");return function(e){for(var n=0;n<t.length;n++){if(!e)return;e=e[t[n]]}return e}}}(t),this.getter||(this.getter=O)),this.value=this.lazy?void 0:this.get()};vn.prototype.get=function(){var e;oe(this);var t=this.vm;try{e=this.getter.call(t,t)}catch(e){if(!this.user)throw e;Le(e,t,'getter for watcher "'+this.expression+'"')}finally{this.deep&&We(e),ae(),this.cleanupDeps()}return e},vn.prototype.addDep=function(e){var t=e.id;this.newDepIds.has(t)||(this.newDepIds.add(t),this.newDeps.push(e),this.depIds.has(t)||e.addSub(this))},vn.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var t=this.deps[e];this.newDepIds.has(t.id)||t.removeSub(this)}var n=this.depIds;this.depIds=this.newDepIds,this.newDepIds=n,this.newDepIds.clear(),n=this.deps,this.deps=this.newDeps,this.newDeps=n,this.newDeps.length=0},vn.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(e){var t=e.id;if(null==ln[t]){if(ln[t]=!0,dn){for(var n=sn.length-1;n>hn&&sn[n].id>e.id;)n--;sn.splice(n+1,0,e)}else sn.push(e);un||(un=!0,Ue(gn))}}(this)},vn.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||c(e)||this.deep){var t=this.value;if(this.value=e,this.user)try{this.cb.call(this.vm,e,t)}catch(e){Le(e,this.vm,'callback for watcher "'+this.expression+'"')}else this.cb.call(this.vm,e,t)}}},vn.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},vn.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},vn.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||v(this.vm._watchers,this);for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1}};var yn={enumerable:!0,configurable:!0,get:O,set:O};function _n(e,t,n){yn.get=function(){return this[t][n]},yn.set=function(e){this[t][n]=e},Object.defineProperty(e,n,yn)}function bn(e){e._watchers=[];var t=e.$options;t.props&&function(e,t){var n=e.$options.propsData||{},r=e._props={},i=e.$options._propKeys=[];e.$parent&&me(!1);var o=function(o){i.push(o);var a=$e(o,t,n,e);_e(r,o,a),o in e||_n(e,"_props",o)};for(var a in t)o(a);me(!0)}(e,t.props),t.methods&&function(e,t){for(var n in e.$options.props,t)e[n]="function"!=typeof t[n]?O:E(t[n],e)}(e,t.methods),t.data?function(e){var t=e.$options.data;u(t=e._data="function"==typeof t?wn(t,e):t||{})||(t={});var n=Object.keys(t),r=e.$options.props;e.$options.methods;var i=n.length;for(;i--;){var o=n[i];r&&_(r,o)||F(o)||_n(e,"_data",o)}ye(t,!0)}(e):ye(e._data={},!0),t.computed&&function(e,t){var n=e._computedWatchers=Object.create(null),r=Z();for(var i in t){var o=t[i],a="function"==typeof o?o:o.get;r||(n[i]=new vn(e,a||O,O,kn)),i in e||xn(e,i,o)}}(e,t.computed),t.watch&&t.watch!==X&&function(e,t){for(var n in t){var r=t[n];if(Array.isArray(r))for(var i=0;i<r.length;i++)En(e,n,r[i]);else En(e,n,r)}}(e,t.watch)}function wn(e,t){oe();try{return e.call(t,t)}catch(e){return Le(e,t,"data()"),{}}finally{ae()}}var kn={lazy:!0};function xn(e,t,n){var r=!Z();"function"==typeof n?(yn.get=r?Sn(t):Cn(n),yn.set=O):(yn.get=n.get?r&&!1!==n.cache?Sn(t):Cn(n.get):O,yn.set=n.set||O),Object.defineProperty(e,t,yn)}function Sn(e){return function(){var t=this._computedWatchers&&this._computedWatchers[e];if(t)return t.dirty&&t.evaluate(),ie.SharedObject.target&&t.depend(),t.value}}function Cn(e){return function(){return e.call(this,this)}}function En(e,t,n,r){return u(n)&&(r=n,n=n.handler),"string"==typeof n&&(n=e[n]),e.$watch(t,n,r)}var In=0;function Tn(e,t){var n=e.$options=Object.create(e.constructor.options),r=t._parentVnode;n.parent=t.parent,n._parentVnode=r,n._parentElm=t._parentElm,n._refElm=t._refElm;var i=r.componentOptions;n.propsData=i.propsData,n._parentListeners=i.listeners,n._renderChildren=i.children,n._componentTag=i.tag,t.render&&(n.render=t.render,n.staticRenderFns=t.staticRenderFns)}function An(e){var t=e.options;if(e.super){var n=An(e.super);if(n!==e.superOptions){e.superOptions=n;var r=function(e){var t,n=e.options,r=e.sealedOptions;for(var i in n)n[i]!==r[i]&&(t||(t={}),t[i]=n[i]);return t}(e);r&&T(e.extendOptions,r),(t=e.options=Ae(n,e.extendOptions)).name&&(t.components[t.name]=e)}}return t}function On(e){this._init(e)}function $n(e){e.cid=0;var t=1;e.extend=function(e){e=e||{};var n=this,r=n.cid,i=e._Ctor||(e._Ctor={});if(i[r])return i[r];var o=e.name||n.options.name,a=function(e){this._init(e)};return(a.prototype=Object.create(n.prototype)).constructor=a,a.cid=t++,a.options=Ae(n.options,e),a.super=n,a.options.props&&function(e){var t=e.options.props;for(var n in t)_n(e.prototype,"_props",n)}(a),a.options.computed&&function(e){var t=e.options.computed;for(var n in t)xn(e.prototype,n,t[n])}(a),a.extend=n.extend,a.mixin=n.mixin,a.use=n.use,B.forEach((function(e){a[e]=n[e]})),o&&(a.options.components[o]=a),a.superOptions=n.options,a.extendOptions=e,a.sealedOptions=T({},a.options),i[r]=a,a}}function Nn(e){return e&&(e.Ctor.options.name||e.tag)}function Pn(e,t){return Array.isArray(e)?e.indexOf(t)>-1:"string"==typeof e?e.split(",").indexOf(t)>-1:!!function(e){return"[object RegExp]"===l.call(e)}(e)&&e.test(t)}function Mn(e,t){var n=e.cache,r=e.keys,i=e._vnode;for(var o in n){var a=n[o];if(a){var s=Nn(a.componentOptions);s&&!t(s)&&Ln(n,o,r,i)}}}function Ln(e,t,n,r){var i=e[t];!i||r&&i.tag===r.tag||i.componentInstance.$destroy(),e[t]=null,v(n,t)}!function(e){e.prototype._init=function(e){var t=this;t._uid=In++,t._isVue=!0,e&&e._isComponent?Tn(t,e):t.$options=Ae(An(t.constructor),e||{},t),t._renderProxy=t,t._self=t,tn(t),Xt(t),zt(t),an(t,"beforeCreate"),"mp-toutiao"!==t.mpHost&&tt(t),bn(t),"mp-toutiao"!==t.mpHost&&et(t),"mp-toutiao"!==t.mpHost&&an(t,"created"),t.$options.el&&t.$mount(t.$options.el)}}(On),function(e){var t={get:function(){return this._data}},n={get:function(){return this._props}};Object.defineProperty(e.prototype,"$data",t),Object.defineProperty(e.prototype,"$props",n),e.prototype.$set=be,e.prototype.$delete=we,e.prototype.$watch=function(e,t,n){var r=this;if(u(t))return En(r,e,t,n);(n=n||{}).user=!0;var i=new vn(r,e,t,n);if(n.immediate)try{t.call(r,i.value)}catch(e){Le(e,r,'callback for immediate watcher "'+i.expression+'"')}return function(){i.teardown()}}}(On),function(e){var t=/^hook:/;e.prototype.$on=function(e,n){var r=this;if(Array.isArray(e))for(var i=0,o=e.length;i<o;i++)r.$on(e[i],n);else(r._events[e]||(r._events[e]=[])).push(n),t.test(e)&&(r._hasHookEvent=!0);return r},e.prototype.$once=function(e,t){var n=this;function r(){n.$off(e,r),t.apply(n,arguments)}return r.fn=t,n.$on(e,r),n},e.prototype.$off=function(e,t){var n=this;if(!arguments.length)return n._events=Object.create(null),n;if(Array.isArray(e)){for(var r=0,i=e.length;r<i;r++)n.$off(e[r],t);return n}var o,a=n._events[e];if(!a)return n;if(!t)return n._events[e]=null,n;for(var s=a.length;s--;)if((o=a[s])===t||o.fn===t){a.splice(s,1);break}return n},e.prototype.$emit=function(e){var t=this,n=t._events[e];if(n){n=n.length>1?I(n):n;for(var r=I(arguments,1),i='event handler for "'+e+'"',o=0,a=n.length;o<a;o++)Re(n[o],t,r,t,i)}return t}}(On),function(e){e.prototype._update=function(e,t){var n=this,r=n.$el,i=n._vnode,o=function(e){var t=en;return en=e,function(){en=t}}(n);n._vnode=e,i?n.$el=n.__patch__(i,e):(n.$el=n.__patch__(n.$el,e,t,!1,n.$options._parentElm,n.$options._refElm),n.$options._parentElm=n.$options._refElm=null),o(),r&&(r.__vue__=null),n.$el&&(n.$el.__vue__=n),n.$vnode&&n.$parent&&n.$vnode===n.$parent._vnode&&(n.$parent.$el=n.$el)},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){an(e,"beforeDestroy"),e._isBeingDestroyed=!0;var t=e.$parent;!t||t._isBeingDestroyed||e.$options.abstract||v(t.$children,e),e._watcher&&e._watcher.teardown();for(var n=e._watchers.length;n--;)e._watchers[n].teardown();e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),an(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(On),function(e){kt(e.prototype),e.prototype.$nextTick=function(e){return Ue(e,this)},e.prototype._render=function(){var e,t=this,n=t.$options,r=n.render,i=n._parentVnode;i&&(t.$scopedSlots=ot(i.data.scopedSlots,t.$slots,t.$scopedSlots)),t.$vnode=i;try{Ht=t,e=r.call(t._renderProxy,t.$createElement)}catch(n){Le(n,t,"render"),e=t._vnode}finally{Ht=null}return Array.isArray(e)&&1===e.length&&(e=e[0]),e instanceof se||(e=le()),e.parent=i,e}}(On);var Rn=[String,RegExp,Array],Bn={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:Rn,exclude:Rn,max:[String,Number]},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)Ln(this.cache,e,this.keys)},mounted:function(){var e=this;this.$watch("include",(function(t){Mn(e,(function(e){return Pn(t,e)}))})),this.$watch("exclude",(function(t){Mn(e,(function(e){return!Pn(t,e)}))}))},render:function(){var e=this.$slots.default,t=Jt(e),n=t&&t.componentOptions;if(n){var r=Nn(n),i=this.include,o=this.exclude;if(i&&(!r||!Pn(i,r))||o&&r&&Pn(o,r))return t;var a=this.cache,s=this.keys,c=null==t.key?n.Ctor.cid+(n.tag?"::"+n.tag:""):t.key;a[c]?(t.componentInstance=a[c].componentInstance,v(s,c),s.push(c)):(a[c]=t,s.push(c),this.max&&s.length>parseInt(this.max)&&Ln(a,s[0],s,this._vnode)),t.data.keepAlive=!0}return t||e&&e[0]}}};!function(e){var t={get:function(){return j}};Object.defineProperty(e,"config",t),e.util={warn:ne,extend:T,mergeOptions:Ae,defineReactive:_e},e.set=be,e.delete=we,e.nextTick=Ue,e.observable=function(e){return ye(e),e},e.options=Object.create(null),B.forEach((function(t){e.options[t+"s"]=Object.create(null)})),e.options._base=e,T(e.options.components,Bn),function(e){e.use=function(e){var t=this._installedPlugins||(this._installedPlugins=[]);if(t.indexOf(e)>-1)return this;var n=I(arguments,1);return n.unshift(this),"function"==typeof e.install?e.install.apply(e,n):"function"==typeof e&&e.apply(null,n),t.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=Ae(this.options,e),this}}(e),$n(e),function(e){B.forEach((function(t){e[t]=function(e,n){return n?("component"===t&&u(n)&&(n.name=n.name||e,n=this.options._base.extend(n)),"directive"===t&&"function"==typeof n&&(n={bind:n,update:n}),this.options[t+"s"][e]=n,n):this.options[t+"s"][e]}}))}(e)}(On),Object.defineProperty(On.prototype,"$isServer",{get:Z}),Object.defineProperty(On.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(On,"FunctionalRenderContext",{value:xt}),On.version="2.6.10";var Dn=1;function jn(e){this.instanceId="",this.nodeId=Dn++,this.parentNode=null,this.nodeType=3,this.text=e}function Fn(e){return t.createElement(e)}var Vn=Object.freeze({namespaceMap:{},createElement:Fn,createElementNS:function(e,n){return t.createElement(e+":"+n)},createTextNode:function(e){return new jn(e)},createComment:function(e){return t.createComment(e)},insertBefore:function(e,n,r){if(3!==n.nodeType)e.insertBefore(n,r);else{var i="weex"===t.__$compiler__?"text":"u-text";if(e.type===i)e.setAttr("value",n.text),n.parentNode=e;else{var o=Fn(i);o.setAttr("value",n.text),e.insertBefore(o,r)}}},removeChild:function(e,t){3!==t.nodeType?e.removeChild(t):e.setAttr("value","")},appendChild:function(e,n){if(3!==n.nodeType)e.appendChild(n);else{var r="weex"===t.__$compiler__?"text":"u-text";if(e.type===r)e.setAttr("value",n.text),n.parentNode=e;else{var i=Fn(r);i.setAttr("value",n.text),e.appendChild(i)}}},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.type},setTextContent:function(e,t){e.parentNode&&e.parentNode.setAttr("value",t)},setAttribute:function(e,t,n){e.setAttr(t,n)},setStyleScope:function(e,t){e.setAttr("@styleScope",t)}}),Un={create:function(e,t){zn(t)},update:function(e,t){e.data.ref!==t.data.ref&&(zn(e,!0),zn(t))},destroy:function(e){zn(e,!0)}};function zn(e,t){var n=e.data.ref;if(o(n)){var r=e.context,i=e.componentInstance||e.elm,a=r.$refs;t?Array.isArray(a[n])?v(a[n],i):a[n]===i&&(a[n]=void 0):e.data.refInFor?Array.isArray(a[n])?a[n].indexOf(i)<0&&a[n].push(i):a[n]=[i]:a[n]=i}}g("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),g("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0);var Wn=g("text,number,password,search,email,tel,url"),Hn=new se("",{},[]),qn=["create","activate","update","remove","destroy"];function Yn(e,t){return e.key===t.key&&(e.tag===t.tag&&e.isComment===t.isComment&&o(e.data)===o(t.data)&&function(e,t){if("input"!==e.tag)return!0;var n,r=o(n=e.data)&&o(n=n.attrs)&&n.type,i=o(n=t.data)&&o(n=n.attrs)&&n.type;return r===i||Wn(r)&&Wn(i)}(e,t)||a(e.isAsyncPlaceholder)&&e.asyncFactory===t.asyncFactory&&i(t.asyncFactory.error))}function Jn(e,t,n){var r,i,a={};for(r=t;r<=n;++r)o(i=e[r].key)&&(a[i]=r);return a}var Xn={create:Gn,update:Gn,destroy:function(e){Gn(e,Hn)}};function Gn(e,t){(e.data.directives||t.data.directives)&&function(e,t){var n,r,i,o=e===Hn,a=t===Hn,s=Kn(e.data.directives,e.context),c=Kn(t.data.directives,t.context),l=[],u=[];for(n in c)r=s[n],i=c[n],r?(i.oldValue=r.value,i.oldArg=r.arg,er(i,"update",t,e),i.def&&i.def.componentUpdated&&u.push(i)):(er(i,"bind",t,e),i.def&&i.def.inserted&&l.push(i));if(l.length){var d=function(){for(var n=0;n<l.length;n++)er(l[n],"inserted",t,e)};o?Xe(t,"insert",d):d()}u.length&&Xe(t,"postpatch",(function(){for(var n=0;n<u.length;n++)er(u[n],"componentUpdated",t,e)}));if(!o)for(n in s)c[n]||er(s[n],"unbind",e,e,a)}(e,t)}var Zn=Object.create(null);function Kn(e,t){var n,r,i=Object.create(null);if(!e)return i;for(n=0;n<e.length;n++)(r=e[n]).modifiers||(r.modifiers=Zn),i[Qn(r)]=r,r.def=Oe(t.$options,"directives",r.name);return i}function Qn(e){return e.rawName||e.name+"."+Object.keys(e.modifiers||{}).join(".")}function er(e,t,n,r,i){var o=e.def&&e.def[t];if(o)try{o(n.elm,e,n,r,i)}catch(r){Le(r,n.context,"directive "+e.name+" "+t+" hook")}}var tr=[Un,Xn],nr=b((function(e){var t={},n=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){var r=e.split(n);r.length>1&&(t[r[0].trim()]=r[1].trim())}})),t}));function rr(e){var t=ir(e.style);return e.staticStyle?T(e.staticStyle,t):t}function ir(e){return Array.isArray(e)?A(e):"string"==typeof e?nr(e):e}var or={view:{class:["hoverClass"],style:[]},button:{class:["hoverClass"],style:[]},navigator:{class:["hoverClass"],style:[]},"u-input":{class:["placeholderClass"],style:["placeholderStyle"]},"u-textarea":{class:["placeholderClass"],style:["placeholderStyle"]},"picker-view":{class:["indicatorClass","maskClass"],style:["indicatorStyle","maskStyle"]}};function ar(e,t,n,r){if(!t)return t;var i=or[n.type];if(i){if(-1!==i.class.indexOf(e))return r.$options.style&&r.$options.style[t]||{};if(-1!==i.style.indexOf(e))return ir(t)}return t}function sr(e,t){if(e.data.attrs||t.data.attrs){var n,r,i=t.elm,o=e.data.attrs||{},a=t.data.attrs||{};a.__ob__&&(a=t.data.attrs=T({},a));var s="function"==typeof i.setAttrs,c={};for(n in a)r=a[n],o[n]!==r&&(s?c[n]=r:i.setAttr(n,ar(n,r,i,t.context)));for(n in o)null==a[n]&&(s?c[n]=void 0:i.setAttr(n));s&&i.setAttrs(function(e,t,n){var r=or[t.type];if(!r)return e;var i=n.$options.style||{};return Object.keys(e).forEach((function(t){var n=e[t];-1!==r.class.indexOf(t)?e[t]=i[n]||{}:-1!==r.style.indexOf(t)&&(e[t]=ir(n))})),e}(c,i,t.context))}}var cr={create:sr,update:sr};function lr(e){for(var t=ur(e),n=e,r=e;o(r.componentInstance);)(r=r.componentInstance._vnode)&&r.data&&(t=T(ur(r),t));for(;o(n=n.parent);)n&&n.data&&(t=T(t,ur(n)));return t}function ur(e){var t,n,r,o,a=e.data;return i(a.staticClass)&&i(a.class)?{}:(t=function(e){var t=[],n=e.staticClass,r=e.class;return n&&t.push.apply(t,n),Array.isArray(r)?t.push.apply(t,r):c(r)?t.push.apply(t,Object.keys(r).filter((function(e){return r[e]}))):"string"==typeof r&&t.push.apply(t,r.trim().split(/\s+/)),t}(a),n=e.context,r=n.$options.style||{},o={},t.forEach((function(e){var t=r[e];T(o,t)})),o)}function dr(e,t,n,r){var o,a,s={};for(a in n)i(t[a])&&(s[r(a)]="");for(a in t)(o=t[a])!==n[a]&&(s[r(a)]=o);e.setStyles(s)}function hr(e,t,n){var r=t&&t.context.$options.style;r&&!e.includes(r)&&(n?e.unshift(r):e.push(r))}function pr(e){for(var t=e.data,n=e,r=e;o(r.componentInstance);)(r=r.componentInstance._vnode)&&r.data&&(t=fr(r.data,t));for(;o(n=n.parent);)n&&n.data&&(t=fr(t,n.data));return function(e,t){if(o(e)||o(t))return gr(mr(e),mr(t));return""}(t.staticClass,t.class)}function fr(e,t){return{staticClass:gr(mr(e.staticClass),mr(t.staticClass)),class:o(e.class)?[e.class,t.class]:t.class}}function gr(e,t){return e?t?e+" "+t:e:t||""}function mr(e){return Array.isArray(e)?function(e){for(var t,n="",r=0,i=e.length;r<i;r++)o(t=mr(e[r]))&&""!==t&&(n&&(n+=" "),n+=t);return n}(e):c(e)?function(e){var t="";for(var n in e)e[n]&&(t&&(t+=" "),t+=n);return t}(e):"string"==typeof e?e:""}function vr(e,n){var r=n.data,a=e.data;if(!(i(r.staticClass)&&i(r.class)&&(i(a)||i(a.staticClass)&&i(a.class)))){var s="weex"===t.__$styleCompiler__;if(t.__$automator__||!s){s||n.elm.setStylesheet&&n.elm.setStylesheet(function(e){var t=[],n=e,r=e;for(hr(t,e);o(r.componentInstance);)hr(t,r=r.componentInstance._vnode);for(;o(n=n.parent);)hr(t,n,!0);return t}(n));var c=pr(n);n.elm.setClassList&&n.elm.setClassList(c.split(" "))}s&&dr(n.elm,lr(n),lr(e),yr)}}function yr(e){return e}var _r,br,wr={create:vr,update:vr};function kr(e,t,n){void 0===n&&(n=null);var r=e.fns;if(!Array.isArray(r))return"function"==typeof r?r.apply(n,t):e.apply(n,t);for(var i=r.slice(),o=0;o<i.length;o++)i[o].apply(n,t)}function xr(e,t,n,r,i){if(n)console.log("Weex do not support event in bubble phase.");else{if(br&&br._virtualComponents){_r._context=br;var o=t;t=function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var n=(e[0]||{}).componentId,r=this._context;if(n&&this._context){var i=this._context._virtualComponents||{};r=i[n]||r}try{kr(o,e,r)}catch(e){Le(e,r,"Failed to invoke virtual component handler ("+n+")")}}}_r.addEvent(e,t,i)}}function Sr(e,t,n,r){(r||_r).removeEvent(e)}function Cr(e,t){if(e.data.on||t.data.on){var n=t.data.on||{},r=e.data.on||{};_r=t.elm,br=t.context,Je(n,r,xr,Sr,t.context),_r=void 0,br=void 0}}var Er={create:Cr,update:Cr},Ir=b(k);function Tr(e,t){var n=t.data,r=e.data;if(!(i(n.staticStyle)&&i(n.style)&&i(r.staticStyle)&&i(r.style))){var a=t.elm,s=r.staticStyle,c=r.normalizedStyle||r.style||{},l=s||c,u=ir(t.data.style)||{};t.data.normalizedStyle=o(u.__ob__)?T({},u):u,dr(a,function(e,t){var n,r={};if(t)for(var i=e;i.componentInstance;)(i=i.componentInstance._vnode)&&i.data&&(n=rr(i.data))&&T(r,n);(n=rr(e.data))&&T(r,n);for(var o=e;o=o.parent;)o.data&&(n=rr(o.data))&&T(r,n);return r}(t,!0),l,Ir)}}var Ar={create:Tr,update:Tr};function Or(e){if(e){if("object"==typeof e){var t={};return!1!==e.css&&T(t,$r(e.name||"v")),T(t,e),t}return"string"==typeof e?$r(e):void 0}}var $r=b((function(e){return{enterClass:e+"-enter",enterToClass:e+"-enter-to",enterActiveClass:e+"-enter-active",leaveClass:e+"-leave",leaveToClass:e+"-leave-to",leaveActiveClass:e+"-leave-active"}}));function Nr(e,t){var n=t.elm;n._leaveCb&&(n._leaveCb.cancelled=!0,n._leaveCb());var r=Or(t.data.transition);if(r&&!n._enterCb){for(var i=r.enterClass,o=r.enterToClass,a=r.enterActiveClass,s=r.appearClass,c=r.appearToClass,l=r.appearActiveClass,u=r.beforeEnter,d=r.enter,h=r.afterEnter,p=r.enterCancelled,f=r.beforeAppear,g=r.appear,m=r.afterAppear,v=r.appearCancelled,y=en,_=en.$vnode;_&&_.parent;)y=(_=_.parent).context;var b=!y._isMounted||!t.isRootInsert;if(!b||g||""===g){var w=b?s:i,k=b?c:o,x=b?l:a,S=b&&f||u,C=b&&"function"==typeof g?g:d,E=b&&m||h,I=b&&v||p,A=C&&(C._length||C.length)>1,$=t.context.$options.style||{},N=$[w],P=$["@TRANSITION"]&&$["@TRANSITION"][x]||{},M=function(e,t,n,r,i){var o={},a=t[n],s=t[r],c=t[i];if(a)for(var l in a)o[l]=e.style[l];if(c)for(var u in c)0!==u.indexOf("transition")&&(o[u]=c[u]);s&&T(o,s);return o}(n,$,w,k,x),R=Object.keys(M).length>0,B=n._enterCb=L((function(){B.cancelled?I&&I(n):E&&E(n),n._enterCb=null}));if(setTimeout((function(){var e=n.parentNode,r=e&&e._pending&&e._pending[t.key];(r&&r.context===t.context&&r.tag===t.tag&&r.elm._leaveCb&&r.elm._leaveCb(),C&&C(n,B),R)?t.context.$requireWeexModule("animation").transition(n.ref,{styles:M,duration:P.duration||0,delay:P.delay||0,timingFunction:P.timingFunction||"linear"},A?O:B):A||B()}),16),S&&S(n),N)if("function"==typeof n.setStyles)n.setStyles(N);else for(var D in N)n.setStyle(D,N[D]);R||A||B()}}}W&&window.requestAnimationFrame&&window.requestAnimationFrame.bind(window);var Pr=function(e){var t,n,r={},c=e.modules,l=e.nodeOps;for(t=0;t<qn.length;++t)for(r[qn[t]]=[],n=0;n<c.length;++n)o(c[n][qn[t]])&&r[qn[t]].push(c[n][qn[t]]);function u(e){var t=l.parentNode(e);o(t)&&l.removeChild(t,e)}function d(e,t,n,i,s,c,u){if(o(e.elm)&&o(c)&&(e=c[u]=de(e)),e.isRootInsert=!s,!function(e,t,n,i){var s=e.data;if(o(s)){var c=o(e.componentInstance)&&s.keepAlive;if(o(s=s.hook)&&o(s=s.init)&&s(e,!1,n,i),o(e.componentInstance))return h(e,t),p(n,e.elm,i),a(c)&&function(e,t,n,i){var a,s=e;for(;s.componentInstance;)if(o(a=(s=s.componentInstance._vnode).data)&&o(a=a.transition)){for(a=0;a<r.activate.length;++a)r.activate[a](Hn,s);t.push(s);break}p(n,e.elm,i)}(e,t,n,i),!0}}(e,t,n,i)){var d=e.data,g=e.children,m=e.tag;if(o(m)){e.elm=e.ns?l.createElementNS(e.ns,m):l.createElement(m,e),y(e);var _=o(d)&&a(d.appendAsTree);_||(o(d)&&v(e,t),p(n,e.elm,i)),f(e,g,t),_&&(o(d)&&v(e,t),p(n,e.elm,i))}else a(e.isComment)?(e.elm=l.createComment(e.text),p(n,e.elm,i)):(e.elm=l.createTextNode(e.text),p(n,e.elm,i))}}function h(e,t){o(e.data.pendingInsert)&&(t.push.apply(t,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,m(e)?(v(e,t),y(e)):(zn(e),t.push(e))}function p(e,t,n){o(e)&&(o(n)?l.parentNode(n)===e&&l.insertBefore(e,t,n):l.appendChild(e,t))}function f(e,t,n){if(Array.isArray(t))for(var r=0;r<t.length;++r)d(t[r],n,e.elm,null,!0,t,r);else s(e.text)&&l.appendChild(e.elm,l.createTextNode(String(e.text)))}function m(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return o(e.tag)}function v(e,n){for(var i=0;i<r.create.length;++i)r.create[i](Hn,e);o(t=e.data.hook)&&(o(t.create)&&t.create(Hn,e),o(t.insert)&&n.push(e))}function y(e){var t;if(o(t=e.fnScopeId))l.setStyleScope(e.elm,t);else for(var n=e;n;)o(t=n.context)&&o(t=t.$options._scopeId)&&l.setStyleScope(e.elm,t),n=n.parent;o(t=en)&&t!==e.context&&t!==e.fnContext&&o(t=t.$options._scopeId)&&l.setStyleScope(e.elm,t)}function _(e,t,n,r,i,o){for(;r<=i;++r)d(n[r],o,e,t,!1,n,r)}function b(e){var t,n,i=e.data;if(o(i))for(o(t=i.hook)&&o(t=t.destroy)&&t(e),t=0;t<r.destroy.length;++t)r.destroy[t](e);if(o(t=e.children))for(n=0;n<e.children.length;++n)b(e.children[n])}function w(e,t,n,r){for(;n<=r;++n){var i=t[n];o(i)&&(o(i.tag)?(k(i),b(i)):u(i.elm))}}function k(e,t){if(o(t)||o(e.data)){var n,i=r.remove.length+1;for(o(t)?t.listeners+=i:t=function(e,t){function n(){0==--n.listeners&&u(e)}return n.listeners=t,n}(e.elm,i),o(n=e.componentInstance)&&o(n=n._vnode)&&o(n.data)&&k(n,t),n=0;n<r.remove.length;++n)r.remove[n](e,t);o(n=e.data.hook)&&o(n=n.remove)?n(e,t):t()}else u(e.elm)}function x(e,t,n,r){for(var i=n;i<r;i++){var a=t[i];if(o(a)&&Yn(e,a))return i}}function S(e,t,n,s,c,u){if(e!==t){o(t.elm)&&o(s)&&(t=s[c]=de(t));var h=t.elm=e.elm;if(a(e.isAsyncPlaceholder))o(t.asyncFactory.resolved)?I(e.elm,t,n):t.isAsyncPlaceholder=!0;else if(a(t.isStatic)&&a(e.isStatic)&&t.key===e.key&&(a(t.isCloned)||a(t.isOnce)))t.componentInstance=e.componentInstance;else{var p,f=t.data;o(f)&&o(p=f.hook)&&o(p=p.prepatch)&&p(e,t);var g=e.children,v=t.children;if(o(f)&&m(t)){for(p=0;p<r.update.length;++p)r.update[p](e,t);o(p=f.hook)&&o(p=p.update)&&p(e,t)}i(t.text)?o(g)&&o(v)?g!==v&&function(e,t,n,r,a){for(var s,c,u,h=0,p=0,f=t.length-1,g=t[0],m=t[f],v=n.length-1,y=n[0],b=n[v],k=!a;h<=f&&p<=v;)i(g)?g=t[++h]:i(m)?m=t[--f]:Yn(g,y)?(S(g,y,r,n,p),g=t[++h],y=n[++p]):Yn(m,b)?(S(m,b,r,n,v),m=t[--f],b=n[--v]):Yn(g,b)?(S(g,b,r,n,v),k&&l.insertBefore(e,g.elm,l.nextSibling(m.elm)),g=t[++h],b=n[--v]):Yn(m,y)?(S(m,y,r,n,p),k&&l.insertBefore(e,m.elm,g.elm),m=t[--f],y=n[++p]):(i(s)&&(s=Jn(t,h,f)),i(c=o(y.key)?s[y.key]:x(y,t,h,f))?d(y,r,e,g.elm,!1,n,p):Yn(u=t[c],y)?(S(u,y,r,n,p),t[c]=void 0,k&&l.insertBefore(e,u.elm,g.elm)):d(y,r,e,g.elm,!1,n,p),y=n[++p]);h>f?_(e,i(n[v+1])?null:n[v+1].elm,n,p,v,r):p>v&&w(0,t,h,f)}(h,g,v,n,u):o(v)?(o(e.text)&&l.setTextContent(h,""),_(h,null,v,0,v.length-1,n)):o(g)?w(0,g,0,g.length-1):o(e.text)&&l.setTextContent(h,""):e.text!==t.text&&l.setTextContent(h,t.text),o(f)&&o(p=f.hook)&&o(p=p.postpatch)&&p(e,t)}}}function C(e,t,n){if(a(n)&&o(e.parent))e.parent.data.pendingInsert=t;else for(var r=0;r<t.length;++r)t[r].data.hook.insert(t[r])}var E=g("attrs,class,staticClass,staticStyle,key");function I(e,t,n,r){var i,s=t.tag,c=t.data,l=t.children;if(r=r||c&&c.pre,t.elm=e,a(t.isComment)&&o(t.asyncFactory))return t.isAsyncPlaceholder=!0,!0;if(o(c)&&(o(i=c.hook)&&o(i=i.init)&&i(t,!0),o(i=t.componentInstance)))return h(t,n),!0;if(o(s)){if(o(l))if(e.hasChildNodes())if(o(i=c)&&o(i=i.domProps)&&o(i=i.innerHTML)){if(i!==e.innerHTML)return!1}else{for(var u=!0,d=e.firstChild,p=0;p<l.length;p++){if(!d||!I(d,l[p],n,r)){u=!1;break}d=d.nextSibling}if(!u||d)return!1}else f(t,l,n);if(o(c)){var g=!1;for(var m in c)if(!E(m)){g=!0,v(t,n);break}!g&&c.class&&We(c.class)}}else e.data!==t.text&&(e.data=t.text);return!0}return function(e,t,n,s,c,u){if(!i(t)){var h,p=!1,f=[];if(i(e))p=!0,d(t,f,c,u);else{var g=o(e.nodeType);if(!g&&Yn(e,t))S(e,t,f,null,null,s);else{if(g){if(1===e.nodeType&&e.hasAttribute(R)&&(e.removeAttribute(R),n=!0),a(n)&&I(e,t,f))return C(t,f,!0),e;h=e,e=new se(l.tagName(h).toLowerCase(),{},[],void 0,h)}var v=e.elm,y=l.parentNode(v);if(d(t,f,v._leaveCb?null:y,l.nextSibling(v)),o(t.parent))for(var _=t.parent,k=m(t);_;){for(var x=0;x<r.destroy.length;++x)r.destroy[x](_);if(_.elm=t.elm,k){for(var E=0;E<r.create.length;++E)r.create[E](Hn,_);var T=_.data.hook.insert;if(T.merged)for(var A=1;A<T.fns.length;A++)T.fns[A]()}else zn(_);_=_.parent}o(y)?w(0,[e],0,0):o(e.tag)&&b(e)}}return C(t,f,p),t.elm}o(e)&&b(e)}}({nodeOps:Vn,modules:[cr,wr,Er,Ar,{create:Nr,activate:Nr,remove:function(e,t){var n=e.elm;n._enterCb&&(n._enterCb.cancelled=!0,n._enterCb());var r=Or(e.data.transition);if(!r)return t();if(n._leaveCb)return;var i=r.leaveClass,o=r.leaveToClass,a=r.leaveActiveClass,s=r.beforeLeave,c=r.leave,l=r.afterLeave,u=r.leaveCancelled,d=r.delayLeave,h=c&&(c._length||c.length)>1,p=e.context.$options.style||{},f=p[i],g=p[o]||p[a],m=p["@TRANSITION"]&&p["@TRANSITION"][a]||{},v=n._leaveCb=L((function(){n.parentNode&&n.parentNode._pending&&(n.parentNode._pending[e.key]=null),v.cancelled?u&&u(n):(t(),l&&l(n)),n._leaveCb=null}));d?d(y):y();function y(){var t=e.context.$requireWeexModule("animation");function r(){t.transition(n.ref,{styles:g,duration:m.duration||0,delay:m.delay||0,timingFunction:m.timingFunction||"linear"},h?O:v)}v.cancelled||(e.data.show||((n.parentNode._pending||(n.parentNode._pending={}))[e.key]=e),s&&s(n),f?t.transition(n.ref,{styles:f},r):r(),c&&c(n,v),g||h||v())}}}].concat(tr),LONG_LIST_THRESHOLD:10}),Mr=Object.getOwnPropertyNames(pe);function Lr(e,t){var n=e.$el;return n&&"function"==typeof n[t]?function(){for(var e=[],r=arguments.length;r--;)e[r]=arguments[r];return n[t].apply(n,e)}:(ne("Can't find component method \""+t+'" on '+n.type),O)}function Rr(e,t){Array.isArray(t)&&(!function(e,t){for(var n=function(n,r){var i=Mr[n];V(t,i,(function(){for(var t=[],n=arguments.length;n--;)t[n]=arguments[n];var r=this.length,o=pe[i];"function"==typeof o&&o.apply(this,t);var a=Lr(e,"removeData"),s=Lr(e,"insertRange"),c=Lr(e,"setListData");switch(i){case"push":s(r,t);break;case"pop":a(r-1,1);break;case"shift":a(0,1);break;case"unshift":s(0,t);break;case"splice":var l=t[0],u=t[1],d=t.slice(2);u>0&&a(l,u),d.length>0&&s(l,d);break;case"sort":case"reverse":c(this.slice())}}))},r=0,i=Mr.length;r<i;r++)n(r)}(e,t),t.forEach((function(n){u(n)&&!_(n,"[[Watched]]")&&(V(n,"[[Watched]]",!0),e.$watch((function(){for(var e in n)n[e]}),(function(){Lr(e,"updateData")(t.indexOf(n),n)}),{deep:!0}))})))}var Br={name:"recycle-list",methods:{closest:function(){for(var e,t=[],n=arguments.length;n--;)t[n]=arguments[n];return(e=this.$el).closest.apply(e,t)},queryElement:function(){for(var e,t=[],n=arguments.length;n--;)t[n]=arguments[n];return(e=this.$el).queryElement.apply(e,t)},queryElementAll:function(){for(var e,t=[],n=arguments.length;n--;)t[n]=arguments[n];return(e=this.$el).queryElementAll.apply(e,t)},scrollToElement:function(){for(var e,t=[],n=arguments.length;n--;)t[n]=arguments[n];return(e=this.$el).scrollToElement.apply(e,t)},resetLoadmore:function(){for(var e,t=[],n=arguments.length;n--;)t[n]=arguments[n];return(e=this.$el).resetLoadmore.apply(e,t)}},render:function(e){var t=this;if(this._vnode&&this.$options["[[UseCache]]"])return V(this.$options,"[[UseCache]]",!1),this._vnode;var n=this.$options.parent,r=this.$attrs.bindingExpression;return n&&r&&(n.$watch(r,(function(){return V(t.$options,"[[UseCache]]",!0)}),{deep:!0,immediate:!0}),Rr(this,this.$attrs.listData),n.$watch(r,(function(e){Rr(t,e)}))),this._events._attach_slot=function(e){At(t.$parent||t,e.position,e.refs)},this._events._detach_slot=function(e){At(t.$parent||t,e.position,e.refs,!0)},e("weex:recycle-list",{on:this._events},this.$slots.default)},renderError:function(e,t){return e("text",{style:{fontSize:"36px",color:"#FF0000"},value:t.toString()})}},Dr={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function jr(e){var t=e&&e.componentOptions;return t&&t.Ctor.options.abstract?jr(Jt(t.children)):e}function Fr(e){var t={},n=e.$options;for(var r in n.propsData)t[r]=e[r];var i=n._parentListeners;for(var o in i)t[k(o)]=i[o];return t}function Vr(e,t){if(/\d-keep-alive$/.test(t.tag))return e("keep-alive",{props:t.componentOptions.propsData})}var Ur=function(e){return e.tag||Yt(e)},zr=function(e){return"show"===e.name},Wr={name:"transition",props:Dr,abstract:!0,render:function(e){var t=this,n=this.$slots.default;if(n&&(n=n.filter(Ur)).length){var r=this.mode,i=n[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return i;var o=jr(i);if(!o)return i;if(this._leaving)return Vr(e,i);var a="__transition-"+this._uid+"-";o.key=null==o.key?o.isComment?a+"comment":a+o.tag:s(o.key)?0===String(o.key).indexOf(a)?o.key:a+o.key:o.key;var c=(o.data||(o.data={})).transition=Fr(this),l=this._vnode,u=jr(l);if(o.data.directives&&o.data.directives.some(zr)&&(o.data.show=!0),u&&u.data&&!function(e,t){return t.key===e.key&&t.tag===e.tag}(o,u)&&!Yt(u)&&(!u.componentInstance||!u.componentInstance._vnode.isComment)){var d=u.data.transition=T({},c);if("out-in"===r)return this._leaving=!0,Xe(d,"afterLeave",(function(){t._leaving=!1,t.$forceUpdate()})),Vr(e,i);if("in-out"===r){if(Yt(o))return l;var h,p=function(){h()};Xe(c,"afterEnter",p),Xe(c,"enterCancelled",p),Xe(d,"delayLeave",(function(e){h=e}))}}return i}}},Hr=T({tag:String,moveClass:String},Dr);delete Hr.mode;var qr={RecycleList:Br,Transition:Wr,TransitionGroup:{props:Hr,created:function(){var e=this.$requireWeexModule("dom");this.getPosition=function(t){return new Promise((function(n,r){e.getComponentRect(t.ref,(function(e){e.result?n(e.size):r(new Error("failed to get rect for element: "+t.tag))}))}))};var t=this.$requireWeexModule("animation");this.animate=function(e,n){return new Promise((function(r){t.transition(e.ref,n,r)}))}},render:function(e){for(var t=this.tag||this.$vnode.data.tag||"span",n=Object.create(null),r=this.prevChildren=this.children,i=this.$slots.default||[],o=this.children=[],a=Fr(this),s=0;s<i.length;s++){var c=i[s];c.tag&&null!=c.key&&0!==String(c.key).indexOf("__vlist")&&(o.push(c),n[c.key]=c,(c.data||(c.data={})).transition=a)}if(r){var l=[],u=[];r.forEach((function(e){e.data.transition=a,n[e.key]?l.push(e):u.push(e)})),this.kept=e(t,null,l),this.removed=u}return e(t,null,o)},beforeUpdate:function(){this.__patch__(this._vnode,this.kept,!1,!0),this._vnode=this.kept},updated:function(){var e=this.prevChildren,t=this.moveClass||(this.name||"v")+"-move";e.length&&this.getMoveData(e[0].context,t)},methods:{getMoveData:function(e,t){var n=e.$options.style||{};return n["@TRANSITION"]&&n["@TRANSITION"][t]}}}},Yr=g("template,script,style,element,content,slot,link,meta,svg,view,a,div,img,image,text,u-text,span,input,textarea,spinner,select,slider,slider-neighbor,indicator,canvas,list,cell,header,loading,loading-indicator,refresh,scrollable,scroller,video,web,embed,tabbar,tabheader,datepicker,timepicker,marquee,countdown",!0);g("web,spinner,switch,video,textarea,canvas,indicator,marquee,countdown",!0);var Jr=g("richtext,transition,transition-group,recycle-list",!0);g("embed,img,image,input,link,meta",!0),On.config.mustUseProp=function(){return!1},On.config.isReservedTag=Yr,On.config.isRuntimeComponent=Jr,On.config.isUnknownElement=function(){return!1},On.options.directives={},On.options.components=qr,On.prototype.__patch__=Pr,On.prototype.$mount=function(e,t){return function(e,t,n){var r;return e.$el=t,e.$options.render||(e.$options.render=le),an(e,"beforeMount"),r=function(){e._update(e._render(),n)},new vn(e,r,O,{before:function(){e._isMounted&&!e._isDestroyed&&an(e,"beforeUpdate")}},!0),n=!1,null==e.$vnode&&(e._isMounted=!0,an(e,"mounted")),e}(this,e&&function(e,t){var n=t.createComment("root");return n.hasAttribute=n.removeAttribute=O,t.documentElement.appendChild(n),n}(0,this.$document),t)},On.prototype.__call_hook=function(e,t){var n=this;oe();var r,i=n.$options[e],o=e+" hook";if(i)for(var a=0,s=i.length;a<s;a++)r=Re(i[a],n,t?[t]:null,n,o);return n._hasHookEvent&&n.$emit("hook:"+e,t),ae(),r},e.Vue=On};Object.defineProperty(weexVueFramework,"__esModule",{value:!0});var VueFactory=factory,instanceOptions={};function createInstanceContext(e,t,n){void 0===n&&(n={});var r=t.weex,i=(instanceOptions[e]={instanceId:e,config:r.config,document:r.document,data:n}).Vue=createVueModuleInstance(e,r,t.SharedObject),o=getInstanceTimer(e,r.requireModule),a=Object.assign({Vue:i},o);return Object.freeze(a),a}function destroyInstance(e){var t=instanceOptions[e];if(t&&t.app instanceof t.Vue){try{t.app.$destroy(),t.document.destroy()}catch(e){}delete t.document,delete t.app}delete instanceOptions[e]}function refreshInstance(e,t){var n=instanceOptions[e];if(!(n&&n.app instanceof n.Vue))return new Error("refreshInstance: instance "+e+" not found!");if(n.Vue&&n.Vue.set)for(var r in t)n.Vue.set(n.app,r,t[r]);n.document.taskCenter.send("dom",{action:"refreshFinish"},[])}function createVueModuleInstance(e,t,n){var r={};VueFactory(r,t.document,n);var i=r.Vue,o=instanceOptions[e],a=/^weex:/i,s=i.config.isReservedTag||function(){return!1},c=i.config.isRuntimeComponent||function(){return!1};return i.config.isReservedTag=function(e){return!c(e)&&t.supports("@component/"+e)||s(e)||a.test(e)},i.config.parsePlatformTagName=function(e){return e.replace(a,"")},i.prototype.$instanceId=e,i.prototype.$document=o.document,i.prototype.$requireWeexModule=t.requireModule,i.mixin({beforeCreate:function(){var e=this.$options;if(e.el){var t=e.data,n=("function"==typeof t?t():t)||{};e.data=Object.assign(n,o.data),o.app=this}},mounted:function(){if(this.$options.el&&t.document&&o.app===this)try{t.document.taskCenter.send("dom",{action:"createFinish"},[])}catch(e){}}}),i.prototype.$getConfig=function(){if(o.app instanceof i)return o.config},i}function getInstanceTimer(e,t){var n=instanceOptions[e],r=t("timer");return{setTimeout:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i=function(){e[0].apply(e,e.slice(2))};if(r.setTimeout){var o=n.document.taskCenter.callbackManager.lastCallbackId;return r.setTimeout(i,e[1]),(o+1).toString()}},setInterval:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i=function(){e[0].apply(e,e.slice(2))};if(r.setInterval){var o=n.document.taskCenter.callbackManager.lastCallbackId;return r.setInterval(i,e[1]),(o+1).toString()}},clearTimeout:function(e){r.clearTimeout&&r.clearTimeout(e)},clearInterval:function(e){r.clearInterval&&r.clearInterval(e)}}}var createInstanceContext_1=weexVueFramework.createInstanceContext=createInstanceContext,destroyInstance_1=weexVueFramework.destroyInstance=destroyInstance,refreshInstance_1=weexVueFramework.refreshInstance=refreshInstance,Vue=Object.freeze(Object.assign(Object.create(null),weexVueFramework,{createInstanceContext:createInstanceContext_1,destroyInstance:destroyInstance_1,refreshInstance:refreshInstance_1,default:weexVueFramework}));setNativeConsole(),setup({Vue:Vue})}));
